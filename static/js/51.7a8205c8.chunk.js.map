{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../node_modules/@dwelle/browser-fs-access/dist/fs-access/directory-open.mjs"],"names":["_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","e","t","r","a","name","i","n","s","o","kind","push","getFile","then","directoryHandle","Object","defineProperty","configurable","enumerable","get","values","Promise","all","flat","recursive","window","showDirectoryPicker","id","startIn"],"mappings":";2IAAe,SAASA,EAAeC,GACrC,IAAIC,EAEJ,GAAsB,qBAAXC,OAAwB,CACjC,GAAIA,OAAOC,eAEK,OADdF,EAASD,EAASE,OAAOC,gBACL,OAAOF,EAAOG,KAAKJ,GAGzC,GAAIE,OAAOG,UAEK,OADdJ,EAASD,EAASE,OAAOG,WACL,OAAOJ,EAAOG,KAAKJ,GAI3C,MAAM,IAAIM,UAAU,gCCCtB,IAAMC,EAAC,qCAAC,WAAMC,EAAEC,GAAR,IAAAC,EAAA,2FAAUA,EAAV,+BAAYF,EAAEG,KAAcC,EAAE,GAAGC,EAAE,GAAnC,oCAAsDC,EAAtD,QAA6EC,EAAC,UAAIL,EAAJ,YAASI,EAAEH,MAAO,SAASG,EAAEE,KAAKH,EAAEI,KAAKH,EAAEI,UAAUC,MAAM,SAAAZ,GAAC,OAAGA,EAAEa,gBAAgBZ,EAAEa,OAAOC,eAAef,EAAE,qBAAqB,CAACgB,cAAa,EAAGC,YAAW,EAAGC,IAAI,kBAAIV,SAAQ,cAAcD,EAAEE,MAAMP,GAAGG,EAAEK,KAAKV,EAAEO,EAAEL,EAAEM,KAAnS,IAA2DP,EAAEkB,UAA7D,yaAAwTC,QAAQC,IAAIhB,GAApU,2BAAwUiB,OAAxU,uCAAwVF,QAAQC,IAAIf,GAApW,+KAAD,wDAIJ,8BAAe,uGAAML,EAAN,+BAAQ,IAAQsB,UAAUtB,EAAEsB,YAAW,EAAvC,SAAwDC,OAAOC,oBAAoB,CAACC,GAAGzB,EAAEyB,GAAGC,QAAQ1B,EAAE0B,UAAtG,cAAgDzB,EAAhD,yBAAuHF,EAAEE,EAAED,EAAEsB,YAA7H","file":"static/js/51.7a8205c8.chunk.js","sourcesContent":["export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// @license Â© 2020 Google LLC. Licensed under the Apache License, Version 2.0.\nconst e=async(t,r,a=t.name)=>{const i=[],n=[];for await(const s of t.values()){const o=`${a}/${s.name}`;\"file\"===s.kind?n.push(s.getFile().then((e=>(e.directoryHandle=t,Object.defineProperty(e,\"webkitRelativePath\",{configurable:!0,enumerable:!0,get:()=>o}))))):\"directory\"===s.kind&&r&&i.push(e(s,r,o))}return[...(await Promise.all(i)).flat(),...await Promise.all(n)]};\n/**\n * Opens a directory from disk using the File System Access API.\n * @type { typeof import(\"../../index\").directoryOpen }\n */export default async(t={})=>{t.recursive=t.recursive||!1;const r=await window.showDirectoryPicker({id:t.id,startIn:t.startIn});return e(r,t.recursive)};"],"sourceRoot":""}