{"version":3,"sources":["constants.ts","utils.ts","keys.ts","analytics.ts","data/encryption.ts","colors.ts","data/encode.ts","css/variables.module.scss","locales lazy /^/.//.*/.json$/ groupOptions: {} namespace object","i18n.ts","appState.ts","hooks/useCallbackRefState.ts","element/typeChecks.ts","math.ts","points.ts","element/bounds.ts","scene/Scene.ts","element/textElement.ts","renderer/renderElement.ts","random.ts","element/mutateElement.ts","element/sizeHelpers.ts","groups.ts","element/newElement.ts","element/transformHandles.ts","ga.ts","galines.ts","gapoints.ts","gadirections.ts","gatransforms.ts","element/collision.ts","element/resizeTest.ts","element/linearElementEditor.ts","element/binding.ts","element/resizeElements.ts","element/dragElements.ts","components/ButtonIconSelect.tsx","components/Popover.tsx","components/ColorPicker.tsx","components/IconPicker.tsx","components/icons.tsx","scene/comparisons.ts","actions/register.ts","actions/actionProperties.tsx","errors.ts","components/Spinner.tsx","components/ToolButton.tsx","components/DarkModeToggle.tsx","types.ts","scene/scroll.ts","scene/zoom.ts","components/Tooltip.tsx","components/ConfirmDialog.tsx","components/ClearCanvas.tsx","actions/actionCanvas.tsx","element/textWysiwyg.tsx","element/showSelectedShapeActions.ts","element/index.ts","scene/scrollbars.ts","scene/selection.ts","actions/actionDeleteSelected.tsx","zindex.ts","actions/actionZindex.tsx","actions/actionSelectAll.ts","actions/actionDuplicateSelection.tsx","actions/actionFinalize.tsx","components/ProjectName.tsx","clients.ts","element/Hyperlink.tsx","renderer/renderScene.ts","renderer/roundRect.ts","data/filesystem.ts","data/restore.ts","data/blob.ts","data/json.ts","element/image.ts","scene/export.ts","charts.ts","clipboard.ts","data/index.ts","data/resave.ts","components/CheckboxItem.tsx","components/Stack.tsx","components/ActiveFile.tsx","actions/actionExport.tsx","actions/actionStyles.ts","components/HelpIcon.tsx","actions/actionGroup.tsx","actions/actionMenu.tsx","components/Avatar.tsx","actions/actionAddToLibrary.ts","actions/actionNavigate.tsx","align.ts","actions/actionAlign.tsx","actions/actionDistribute.tsx","disitrubte.ts","actions/actionFlip.ts","actions/actionClipboard.tsx","actions/actionToggleGridMode.tsx","actions/actionToggleZenMode.tsx","actions/actionToggleStats.tsx","actions/actionUnbindText.tsx","actions/actionHistory.tsx","actions/manager.tsx","data/library.ts","gesture.ts","history.ts","shapes.tsx","actions/shortcuts.ts","components/ContextMenu.tsx","components/Actions.tsx","components/BackgroundPickerAndDarkModeToggle.tsx","components/CollabButton.tsx","components/ImageExportDialog.tsx","components/FixedSideContainer.tsx","components/HintViewer.tsx","components/Island.tsx","components/LoadingMessage.tsx","components/LockButton.tsx","components/Section.tsx","components/UserList.tsx","components/LibraryButton.tsx","components/PenModeButton.tsx","components/MobileMenu.tsx","components/PasteChartDialog.tsx","components/HelpDialog.tsx","components/Card.tsx","components/JSONExportDialog.tsx","packages/utils.ts","components/SingleLibraryItem.tsx","components/PublishLibrary.tsx","components/LibraryUnit.tsx","components/LibraryMenuItems.tsx","components/LibraryMenu.tsx","components/LayerUI.tsx","components/Stats.tsx","components/Toast.tsx","actions/actionToggleViewMode.tsx","components/App.tsx","components/Modal.tsx","components/Dialog.tsx","components/ErrorDialog.tsx","components/TopErrorBoundary.tsx","packages/excalidraw/publicPath.js","components/InitializeApp.tsx","excalidraw-app/app_constants.ts","packages/excalidraw/index.tsx","excalidraw-app/data/firebase.ts","excalidraw-app/data/FileManager.ts","excalidraw-app/data/index.ts","excalidraw-app/data/tabSync.ts","excalidraw-app/data/localStorage.ts","excalidraw-app/collab/Portal.tsx","excalidraw-app/collab/RoomDialog.tsx","excalidraw-app/collab/reconciliation.ts","excalidraw-app/collab/CollabWrapper.tsx","createInverseContext.tsx","excalidraw-app/components/LanguageList.tsx","excalidraw-app/CustomStats.tsx","excalidraw-app/components/icons.tsx","excalidraw-app/components/ExportToExcalidrawPlus.tsx","excalidraw-app/index.tsx","serviceWorker.tsx","excalidraw-app/pwa.ts","excalidraw-app/sentry.ts","index.tsx"],"names":["EVENT","APP_NAME","DRAGGING_THRESHOLD","LINE_CONFIRM_THRESHOLD","ELEMENT_SHIFT_TRANSLATE_AMOUNT","ELEMENT_TRANSLATE_AMOUNT","TEXT_TO_CENTER_SNAP_THRESHOLD","SHIFT_LOCKING_ANGLE","Math","PI","CURSOR_TYPE","TEXT","CROSSHAIR","GRABBING","GRAB","POINTER","MOVE","AUTO","POINTER_BUTTON","MAIN","WHEEL","SECONDARY","TOUCH","ENV","TEST","DEVELOPMENT","CLASSES","SHAPE_ACTIONS_MENU","FONT_FAMILY","Virgil","Helvetica","Cascadia","THEME","LIGHT","DARK","WINDOWS_EMOJI_FALLBACK_FONT","DEFAULT_FONT_SIZE","DEFAULT_FONT_FAMILY","DEFAULT_TEXT_ALIGN","DEFAULT_VERTICAL_ALIGN","DEFAULT_VERSION","GRID_SIZE","MIME_TYPES","excalidraw","excalidrawlib","json","svg","png","jpg","gif","binary","EXPORT_DATA_TYPES","excalidrawClipboard","excalidrawLibrary","EXPORT_SOURCE","window","location","origin","IMAGE_RENDER_TIMEOUT","TAP_TWICE_TIMEOUT","TOUCH_CTX_MENU_TIMEOUT","TITLE_TIMEOUT","TOAST_TIMEOUT","VERSION_TIMEOUT","SCROLL_TIMEOUT","ZOOM_STEP","HYPERLINK_TOOLTIP_DELAY","IDLE_THRESHOLD","ACTIVE_THRESHOLD","MODES","VIEW","ZEN","GRID","THEME_FILTER","cssVariables","themeFilter","URL_QUERY_KEYS","addLibrary","URL_HASH_KEYS","DEFAULT_UI_OPTIONS","canvasActions","changeViewBackgroundColor","clearCanvas","export","saveFileToDisk","loadScene","saveToActiveFile","theme","saveAsImage","MQ_MAX_WIDTH_PORTRAIT","MQ_MAX_WIDTH_LANDSCAPE","MQ_MAX_HEIGHT_LANDSCAPE","MAX_DECIMALS_FOR_SVG_EXPORT","EXPORT_SCALES","DEFAULT_EXPORT_PADDING","DEFAULT_MAX_IMAGE_WIDTH_OR_HEIGHT","ALLOWED_IMAGE_MIME_TYPES","MAX_ALLOWED_FILE_BYTES","SVG_NS","ENCRYPTION_KEY_BITS","VERSIONS","BOUND_TEXT_PADDING","VERTICAL_ALIGN","TOP","MIDDLE","BOTTOM","mockDateTime","getDateTime","date","Date","year","getFullYear","month","getMonth","padStart","day","getDate","hr","getHours","min","getMinutes","capitalizeString","str","charAt","toUpperCase","slice","isToolIcon","target","HTMLElement","className","includes","isInputLike","dataset","type","HTMLBRElement","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","isWritableElement","getFontFamilyString","fontFamily","Object","entries","fontFamilyString","getFontString","fontSize","debounce","fn","timeout","handle","lastArgs","ret","args","clearTimeout","setTimeout","flush","_lastArgs","cancel","chunk","array","size","length","index","resIndex","result","Array","ceil","distance","x","y","abs","resetCursor","canvas","style","cursor","setCursor","setCursorForShape","shape","isFullScreen","document","fullscreenElement","nodeName","allowFullScreen","documentElement","requestFullscreen","exitFullScreen","exitFullscreen","getShortcutKey","shortcut","replace","isDarwin","viewportCoordsToSceneCoords","clientX","clientY","zoom","offsetLeft","offsetTop","scrollX","scrollY","invScale","value","sceneCoordsToViewportCoords","sceneX","sceneY","getGlobalCSSVariable","name","getComputedStyle","getPropertyValue","RE_RTL_CHECK","RegExp","isRTL","text","test","tupleToCoors","xyTuple","muteFSAbortError","error","console","warn","findIndex","cb","fromIndex","max","findLastIndex","isTransparent","color","isRGBTransparent","substr","isRRGGBBTransparent","colors","elementBackground","resolvablePromise","resolve","reject","promise","Promise","_resolve","_reject","withBatchedUpdates","func","event","unstable_batchedUpdates","withBatchedUpdatesThrottled","callback","requestAnimationFrame","cancelAnimationFrame","_callback","throttleRAF","nFormatter","num","digits","si","symbol","toFixed","getVersion","querySelector","content","supportsEmoji","ctx","createElement","getContext","fillStyle","textBaseline","font","fillText","getImageData","data","getNearestScrollableContainer","element","parent","parentElement","body","overflowY","scrollHeight","clientHeight","focusNearestParent","tabIndex","focus","preventUnload","preventDefault","returnValue","bytesToHexString","bytes","from","map","byte","toString","join","getUpdatedTimestamp","isTestEnv","now","arrayToMap","items","reduce","acc","set","id","Map","process","NODE_ENV","wrapEvent","nativeEvent","CustomEvent","detail","cancelable","navigator","platform","isWindows","isAndroid","userAgent","CODES","EQUAL","MINUS","NUM_ADD","NUM_SUBTRACT","NUM_ZERO","BRACKET_RIGHT","BRACKET_LEFT","ONE","TWO","NINE","QUOTE","ZERO","SLASH","C","D","G","F","H","V","X","Z","R","KEYS","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","ARROW_UP","BACKSPACE","ALT","CTRL_OR_CMD","DELETE","ENTER","ESCAPE","QUESTION_MARK","SPACE","TAB","CHEVRON_LEFT","CHEVRON_RIGHT","PERIOD","COMMA","A","E","I","L","O","P","Q","S","T","Y","K","isArrowKey","key","shouldResizeFromCenter","altKey","shouldMaintainAspectRatio","shiftKey","shouldRotateWithDiscreteAngle","trackEvent","REACT_APP_GOOGLE_ANALYTICS_ID","gtag","category","action","label","event_category","event_label","JEST_WORKER_ID","IV_LENGTH_BYTES","createIV","arr","Uint8Array","crypto","getRandomValues","generateEncryptionKey","returnAs","a","subtle","generateKey","exportKey","k","getCryptoKey","usage","importKey","alg","ext","key_ops","kty","encryptData","importedKey","iv","TextEncoder","encode","Blob","arrayBuffer","buffer","encrypt","encryptedBuffer","decryptData","encrypted","privateKey","decrypt","shades","oc","red","pink","grape","violet","indigo","blue","cyan","teal","green","lime","yellow","orange","canvasBackground","white","gray","elementStroke","black","toByteString","blob","reader","FileReader","onload","Error","readAsBinaryString","byteStringToArrayBuffer","byteString","ArrayBuffer","bufferView","i","len","charCodeAt","byteStringToString","TextDecoder","decode","stringToBase64","btoa","base64ToString","base64","isByteString","atob","compress","deflate","deflated","version","encoding","compressed","encoded","decoded","inflate","to","DATA_VIEW_BITS_MAP","dataView","offset","pow","method","DataView","concatBuffers","buffers","byteLength","splitBuffers","concatenatedBuffer","chunkSize","push","_encryptAndCompress","encryptionKey","compressData","dataBuffer","options","fileInfo","compression","encryption","encodingMetadataBuffer","JSON","stringify","contentsMetadataBuffer","metadata","_decryptAndDecompress","decryptedBuffer","decryptionKey","isCompressed","decompressData","encodingMetadata","parse","contentsBuffer","module","exports","webpackAsyncContext","req","__webpack_require__","o","then","e","code","ids","all","t","keys","defaultLang","languages","rtl","concat","sort","left","right","filter","lang","percentages","TEST_LANG_CODE","unshift","currentLang","currentLangData","setLanguage","dir","startsWith","getLanguage","findPartsForData","parts","part","undefined","path","replacement","split","translation","fallbackLangData","String","defaultExportScale","devicePixelRatio","getDefaultAppState","collaborators","currentChartType","currentItemBackgroundColor","currentItemEndArrowhead","currentItemFillStyle","currentItemFontFamily","currentItemFontSize","currentItemLinearStrokeSharpness","currentItemOpacity","currentItemRoughness","currentItemStartArrowhead","currentItemStrokeColor","currentItemStrokeSharpness","currentItemStrokeStyle","currentItemStrokeWidth","currentItemTextAlign","cursorButton","draggingElement","editingElement","editingGroupId","editingLinearElement","elementLocked","elementType","penMode","penDetected","errorMessage","exportBackground","exportScale","exportEmbedScene","exportWithDarkMode","fileHandle","gridSize","isBindingEnabled","isLibraryOpen","isLoading","isResizing","isRotating","lastPointerDownWith","multiElement","openMenu","openPopup","pasteDialog","shown","previousSelectedElementIds","resizingElement","scrolledOutside","selectedElementIds","selectedGroupIds","selectionElement","shouldCacheIgnoreZoom","showHelpDialog","showStats","startBoundElement","suggestedBindings","toastMessage","viewBackgroundColor","zenModeEnabled","viewModeEnabled","pendingImageElement","showHyperlinkPopup","APP_STATE_STORAGE_CONF","browser","server","height","width","_clearAppStateForStorage","appState","exportType","stateForExport","propConfig","nextValue","clearAppStateForLocalStorage","cleanAppStateForExport","clearAppStateForDatabase","isEraserActive","useCallbackRefState","useState","refValue","setRefValue","useCallback","isInitializedImageElement","fileId","isImageElement","isTextElement","isFreeDrawElement","isFreeDrawElementType","isLinearElement","isLinearElementType","isBindingElement","isBindingElementType","isBindableElement","containerId","isTextBindableContainer","hasBoundTextElement","boundElements","some","isBoundToContainer","rotate","x1","y1","x2","y2","angle","cos","sin","rotatePoint","point","center","adjustXYWithRotation","sides","deltaX1","deltaY1","deltaX2","deltaY2","w","n","s","distance2d","xd","yd","hypot","isPathALoop","points","zoomValue","first","last","isPointInPolygon","vertices","extreme","Number","MAX_SAFE_INTEGER","p","count","current","next","doSegmentsIntersect","orderedColinearOrientation","isPointWithinBounds","q","r","val","p1","q1","p2","q2","o1","o2","o3","o4","getGridPoint","round","getSizeFromPoints","xs","ys","rescalePoints","dimension","nextDimensionSize","prevPoints","prevDimValues","prevMaxDimension","prevMinDimension","prevDimensionSize","dimensionScaleFactor","nextMinDimension","Infinity","scaledPoints","prevPoint","currentDimension","scaledValue","scaledPoint","getElementAbsoluteCoords","getFreeDrawElementAbsoluteCoords","getLinearElementAbsoluteCoords","getCurvePathOps","sets","ops","getMinMaxXYFromCurvePathOps","transformXY","currentP","limits","op","p3","p0","equation","idx","minY","minX","maxX","maxY","getBoundsFromPoints","coords","getShapeForElement","getElementBounds","bounds","cx","cy","getLinearElementRotatedBounds","x11","y11","x12","y12","x22","y22","x21","y21","h","ww","hh","getCommonBounds","elements","forEach","getResizedElementAbsoluteCoords","nextWidth","nextHeight","gen","rough","generator","curve","strokeSharpness","linearPath","generateRoughOptions","getElementPointsCoords","sharpness","getCommonBoundingBox","midX","midY","isIdKey","elementKey","Scene","callbacks","Set","nonDeletedElements","elementsMap","this","get","getElement","isNonDeletedElement","getNonDeletedElement","nextElements","clear","mapElementToScene","getNonDeletedElements","informMutation","has","add","delete","sceneMapById","scene","sceneMapByElement","WeakMap","redrawTextBoundingBox","container","maxWidth","wrapText","originalText","metrics","measureText","coordY","verticalAlign","mutateElement","baseline","bindTextToShapeAfterDuplication","sceneElements","oldElements","oldIdToDuplicatedId","sceneElementMap","newElementId","boundTextElementId","getBoundTextElementId","newTextElementId","newContainer","newTextElement","handleBindTextResize","transformHandleType","textElement","getScene","updatedY","containerHeight","nextBaseLine","dimensions","diff","position","whiteSpace","minHeight","lineHeight","getApproxLineHeight","overflow","wordBreak","appendChild","innerText","span","display","offsetHeight","offsetWidth","removeChild","DUMMY_TEXT","toLocaleUpperCase","cacheApproxLineHeight","getTextWidth","canvas2dContext","containerWidth","lines","originalLines","spaceWidth","originalLine","words","currentLine","currentLineWidthTillNow","currentChar","charWidth","calculate","word","cachedCharWidth","char","ascii","getCache","getApproxMinLineWidth","maxCharWidth","getMaxCharWidth","getApproxMinLineHeight","cache","cacheWithOutEmpty","ele","getBoundTextElement","getContainerElement","IMAGE_INVERT_FILTER","defaultAppState","isPendingImageElement","renderConfig","imageCache","shouldResetImageFilter","mimeType","getDashArrayDashed","strokeWidth","getDashArrayDotted","getCanvasPadding","IMAGE_PLACEHOLDER_IMG","src","encodeURIComponent","IMAGE_ERROR_PLACEHOLDER_IMG","drawElementOnCanvas","rc","context","globalAlpha","opacity","lineJoin","lineCap","draw","save","strokeColor","pathsCache","getFreeDrawPath2D","fillShape","fill","restore","img","image","fillRect","imageMinWidthOrHeight","drawImage","status","drawImagePlaceholder","shouldTemporarilyAttach","isConnected","setAttribute","textAlign","verticalOffset","horizontalOffset","remove","elementWithCanvasCache","shapeCache","setShapeForElement","invalidateShapeForElement","continuousPath","seed","strokeLineDash","strokeStyle","disableMultiStroke","fillWeight","hachureGap","roughness","stroke","preserveVertices","backgroundColor","curveFitting","generateElementShape","rectangle","topX","floor","rightX","rightY","getDiamondPoints","topY","bottomX","bottomY","leftX","leftY","polygon","ellipse","startArrowhead","endArrowhead","getArrowheadShapes","arrowhead","arrowheadPoints","prevOp","nx","ny","arrow","bar","dot","triangle","px","py","minSize","x3","y3","getArrowheadPoints","circle","x4","y4","dash","line","shapes","generateFreeDrawShape","generateElementWithCanvas","prevElementWithCanvas","shouldRegenerateBecauseZoom","canvasZoom","elementWithCanvas","padding","canvasOffsetX","canvasOffsetY","translate","scale","generateElementCanvas","drawElementFromCanvas","_isPendingImageElement","scaleXFactor","scaleYFactor","renderElement","isExporting","shiftX","shiftY","roughSVGDrawWithPrecision","rsvg","drawable","precision","pshape","fixedDecimalPlaceDigits","renderElementToSvg","svgRoot","files","offsetX","offsetY","degree","root","link","anchorTag","ownerDocument","createElementNS","node","group","getFreeDrawSvgPath","fileData","symbolId","dataURL","prepend","use","direction","textAnchor","textContent","svgPathData","Path2D","inputPoints","simulatePressure","pressures","thinning","smoothing","streamline","easing","lastCommittedPoint","med","TO_FIXED_PRECISION","getSvgPathFromStroke","getStroke","B","random","Random","testIdBase","randomInteger","randomId","nanoid","updates","didChange","prevScale","nextScale","nextPoints","didChangePoints","nextPoint","versionNonce","updated","newElementWith","bumpVersion","isInvisiblySmallElement","getPerfectElementSize","absWidth","absHeight","lockedAngle","atan","tan","sign","getNormalizedDimensions","selectGroup","groupId","elementsInGroup","groupIds","fromEntries","isSelectedViaGroup","getSelectedGroupForElement","find","getSelectedGroupIds","selectGroupsForSelectedElements","nextAppState","selectedElements","getSelectedElements","indexOfEditingGroup","indexOf","isElementInGroup","getElementsInGroup","addToGroup","prevGroupIds","newGroupId","positionOfEditingGroupId","positionToInsert","splice","getMaximumGroups","groups","currentGroupMembers","boundTextElement","values","_newElementBase","rest","isDeleted","newElement","opts","getTextElementPositionOffsets","offsets","updateTextElement","nextText","nextBaseline","prevMetrics","isFinite","getAdjustedDimensions","newLinearElement","startBinding","endBinding","deepCopyElement","depth","prototype","call","tmp","constructor","create","getPrototypeOf","hasOwnProperty","isArray","duplicateElement","groupIdMapForOperation","overrides","copy","app","getSceneElementsIncludingDeleted","el","mapper","endIndex","getNewGroupIdsForDuplication","assign","transformHandleSizes","mouse","pen","touch","OMIT_SIDES_FOR_MULTIPLE_ELEMENTS","OMIT_SIDES_FOR_TEXT_ELEMENT","OMIT_SIDES_FOR_LINE_SLASH","nw","se","OMIT_SIDES_FOR_LINE_BACKSLASH","ne","sw","generateTransformHandle","getTransformHandlesFromCoords","pointerType","omitSides","handleWidth","handleHeight","handleMarginX","handleMarginY","dashedLineMargin","centeringOffset","transformHandles","rotation","minimumSizeForEightHandles","getTransformHandles","nvector","reverse","b","isNumber","sub","mul","mulScalar","meet","joinScalar","norm","sqrt","inorm","normalized","inormalized","c","GA","through","orthogonal","toTuple","intersect","line1","line2","point1","point2","distanceToLine","pivot","apply","motor","hitTest","threshold","isElementSelected","isPointHittingElementBoundingBox","isHittingElementNotConsideringBoundingBox","isHittingElementBoundingBoxWithoutHittingElement","check","isStrictlyInside","isDraggableFromInside","isElementDraggableFromInside","isInsideCheck","isNearCheck","hitTestPointAgainstElement","rotatedX","rotatedY","bindingBorderTest","maxBindingGap","isOutsideCheck","elementWidth","elementHeight","smallerDimension","distanceToBindableElement","distanceToRectangle","hitTestFreeDrawElement","hitTestLinear","distanceToDiamond","distanceToEllipse","pointRelativeToElement","pointRel","hwidth","hheight","GAPoint","GALine","side","ellipseParamsForTest","tangent","tx","ty","_","xx","yy","ex","ey","rx","ry","qx","qy","intersection","closestPoint","rotatedPoint","delta","U","d","da","db","hitTestRoughShape","pointAbs","side1","side2","relX","relY","subshape","hitTestCurveInside","pointTuple","elementCoords","coordsCenter","GATransform","pointRotated","pointRelToCenterAbs","GADirection","elementPos","pointRelToPos","ax","ay","relativizationToElementCenter","bx","by","determineFocusDistance","relateToCenter","aRel","bRel","m","mabs","nabs","getSortedElementLineIntersections","nearPoint","intersections","gap","corners","getCorners","flatMap","edge","intersectSegment","offsetSegment","getCircleIntersections","getEllipseIntersections","sortedIntersections","i1","i2","hx","hy","segment","squares","discr","discrRoot","xn","yn","radius","findFocusPointForEllipse","relativeDistance","relativeDistanceAbs","orientation","pyo","findFocusPointForRectangulars","maxDistance","tangentPoint","corner","odd","operation","polygonPoints","pointsOnBezierCurves","lineThreshold","retVal","mx","my","pointInBezierEquation","isInsideTransformHandle","transformHandle","getElementWithTransformHandleType","scenePointerX","scenePointerY","rotationTransformHandle","resizeTest","getTransformHandleTypeFromCoords","RESIZE_CURSORS","getCursorForResizingElement","shouldSwapCursors","rotateResizeCursor","LinearElementEditor","elementId","selectedPointsIndices","pointerDownState","isDragging","lastUncommittedPoint","pointerOffset","startBindingElement","endBindingElement","normalizePoints","prevSelectedPointsIndices","lastClickedPoint","setState","selectionX1","selectionY1","selectionX2","selectionY2","nextSelectedPoints","getPointsGlobalCoordinates","maybeSuggestBinding","draggingPoint","newDraggingPointPosition","createPointAt","deltaX","deltaY","movePoints","pointIndex","getPointGlobalCoordinates","lastSelectedIndex","bindings","selectedPoint","bindingElement","getHoveredElementForBinding","getPointAtIndexGlobalCoordinates","history","scenePointer","didAddPoint","hitElement","resumeRecording","clickedPointIndex","getPointIndexUnderCursor","bindOrUnbindLinearElement","targetPoint","nextSelectedPointsIndices","normalizeSelectedPoints","lastPoint","deletePoints","newPoint","addPoints","indexMaybeFromEnd","absoluteCoords","pointHandles","POINT_HANDLE_SIZE","pointerOnGrid","_idx","getNormalizedPoints","nextSelectedIndices","pointAddedToEnd","indexCursor","pointIndices","firstNonDeletedPoint","_updatePoints","targetPoints","otherUpdates","selectedOriginPoint","selectedPointData","nextCoords","prevCoords","nextCenterX","nextCenterY","prevCenterX","prevCenterY","rotated","linearElement","boundToElementIds","unboundFromElementIds","bindOrUnbindLinearElementEdge","onlyUnbound","bindableElement","otherEdgeBindableElement","startOrEnd","isLinearElementSimpleAndAlreadyBoundOnOppositeEdge","bindLinearElement","unbound","unbindLinearElement","bindOrUnbindSelectedElements","getElligibleElementForBindingElement","maybeBindBindableElement","getElligibleElementsForBindableElementAndWhere","where","maybeBindLinearElement","pointerCoords","hoveredElement","calculateFocusAndGap","otherBinding","isLinearElementSimpleAndAlreadyBound","alreadyBoundToId","unbindLinearElements","field","binding","getElementAtPosition","getElements","edgePointIndex","adjacentPointIndex","edgePoint","adjacentPoint","updateBoundElements","changedElement","boundLinearElements","newSize","simultaneouslyUpdated","simultaneouslyUpdatedElementIds","getSimultaneouslyUpdatedElementIds","doesNeedUpdate","maybeCalculateNewGapWhenScaling","updateBoundPoint","boundElement","newEdgePoint","focusPointAbsolute","adjecentPoint","adjecentPointRel","reverseRelateToCenter","determineFocusPoint","intersectElementWithLine","pointFromAbsoluteCoords","currentBinding","newWidth","newHeight","getElligibleElementsForBindingElement","getLinearElementEdgeCoors","canBindStart","isLinearElementEligibleForNewBindingByBindable","canBindEnd","maybeElement","fixBindingsAfterDuplication","duplicatesServeAsOld","allBoundElementIds","allBindableElementIds","shouldReverseRoles","oldElement","newBindingAfterDuplication","fixBindingsAfterDeletion","deletedElements","deletedElementIds","boundElementIds","deletedElement","newBindingAfterDeletion","normalizeAngle","rotateSingleElement","pointerX","pointerY","atan2","reshapeSingleTwoPointElement","resizeArrowDirection","getPerfectElementSizeWithRotation","nextElementX","nextElementY","rescalePointsInElement","measureFontSizeFromWH","nextFontSize","resizeSingleTextElement","nextFont","getSidesForTransformHandle","resizeSingleElement","originalElements","transformHandleDirection","stateAtResizeStart","startTopLeft","startBottomRight","startCenter","rotatedPointer","esx1","esy1","boundsCurrentWidth","boundsCurrentHeight","scaleX","scaleY","boundTextFont","eleInitialWidth","eleInitialHeight","eleNewWidth","eleNewHeight","widthRatio","heightRatio","ratio","stateOfBoundTextElementAtResize","minWidth","newBoundsX1","newBoundsY1","newBoundsWidth","newBoundsHeight","newTopLeft","bottomLeft","topRight","rotatedTopLeft","newCenter","rotatedNewCenter","rescaledPoints","newOrigin","resizedElement","resizeMultipleElements","getNextXY","origX1","origY1","finalX1","finalY1","origX2","origY2","finalX2","finalY2","prev","origCoords","finalCoords","rotateMultipleElements","centerX","centerY","centerAngle","origAngle","rotatedCX","rotatedCY","updateElementCoords","lockDirection","distanceX","distanceY","lockX","lockY","original","dragNewElement","originX","originY","widthAspectRatio","newX","newY","ButtonIconSelect","onChange","option","clsx","active","title","checked","testId","icon","Popover","children","top","onCloseRequest","fitInViewport","viewportWidth","innerWidth","viewportHeight","innerHeight","popoverRef","useRef","useLayoutEffect","getBoundingClientRect","useEffect","handler","contains","addEventListener","removeEventListener","ref","isCustomColor","isValidColor","Option","keyBindings","flat","Picker","onClose","showInput","firstItem","React","activeItem","gallery","colorInput","customColors","updatedElements","ele1","ele2","colorType","getCustomColors","renderColors","custom","_color","_colorWithoutHash","keyBinding","onClick","currentTarget","onFocus","role","onKeyDown","activeElement","isCustom","parentSelector","nextIndex","toLowerCase","actualIndex","stopImmediatePropagation","stopPropagation","ColorInput","forwardRef","innerValue","setInnerValue","inputRef","useImperativeHandle","changeColor","inputValue","getColor","spellCheck","onBlur","ColorPicker","isActive","setActive","pickerButton","Suspense","fallback","changedColor","rFirstItem","rActiveItem","rGallery","pressedOption","metaKey","ctrlKey","IconPicker","rPickerButton","activeElementColor","handlerColor","createIcon","mirror","focusable","viewBox","checkIcon","saveAs","load","clipboard","trash","palette","exportFile","exportImage","exportToFileIcon","zoomIn","zoomOut","done","menu","undo","redo","questionCircle","share","shareIOS","shareWindows","BringForwardIcon","memo","SendBackwardIcon","BringToFrontIcon","SendToBackIcon","AlignTopIcon","strokeLinecap","AlignBottomIcon","AlignLeftIcon","AlignRightIcon","DistributeHorizontallyIcon","DistributeVerticallyIcon","CenterVerticallyIcon","strokeDasharray","CenterHorizontallyIcon","users","start","stop","close","back","marginLeft","clone","shield","file","GroupIcon","UngroupIcon","FillHachureIcon","fillRule","clipRule","FillCrossHatchIcon","FillSolidIcon","StrokeWidthIcon","StrokeStyleSolidIcon","StrokeStyleDashedIcon","StrokeStyleDottedIcon","SloppinessArchitectIcon","SloppinessArtistIcon","SloppinessCartoonistIcon","EdgeSharpIcon","EdgeRoundIcon","ArrowheadNoneIcon","ArrowheadArrowIcon","flip","transform","ArrowheadDotIcon","ArrowheadBarIcon","ArrowheadTriangleIcon","FontSizeSmallIcon","FontSizeMediumIcon","FontSizeLargeIcon","FontSizeExtraLargeIcon","FontFamilyHandDrawnIcon","FontFamilyNormalIcon","FontFamilyCodeIcon","TextAlignLeftIcon","TextAlignCenterIcon","TextAlignRightIcon","TextAlignTopIcon","TextAlignBottomIcon","TextAlignMiddleIcon","publishIcon","editIcon","eraser","hasBackground","hasStrokeColor","hasStrokeWidth","hasStrokeStyle","canChangeSharpness","hasText","canHaveArrowheads","isAtPositionFn","getElementsAtPosition","getTextBindableContainerAtPosition","actions","register","changeProperty","includeBoundText","getFormValue","getAttribute","defaultValue","isSomeElementSelected","getCommonAttributeOfSelectedElements","changeFontSize","getNewFontSize","fallbackValue","newFontSizes","newFontSize","prevElement","nextElement","commitToHistory","actionDecreaseFontSize","perform","PanelComponent","updateData","step","onWheel","keyTest","actionIncreaseFontSize","targetElements","getTargetElements","shouldUpdateForNonLinearElements","every","shouldUpdateForLinearElements","CanvasError","message","AbortError","DOMException","Spinner","circleWidth","strokeMiterlimit","ToolButton","props","excalId","useExcalidrawContainer","innerRef","sizeCn","setIsLoading","isMountedRef","lastPointerTypeRef","visible","hidden","ToolIcon","selected","disabled","keyBindingLabel","showAriaLabel","onPointerDown","onPointerUp","defaultProps","UserIdleState","DarkModeToggle","ICONS","MOON","SUN","centerScrollOn","scenePoint","viewportDimensions","calculateScrollCenter","getVisibleElements","cords","viewportX1","viewportY1","viewportX2","viewportY2","isOutsideViewPort","minDistance","closestElement","getClosestElementBounds","getNormalizedZoom","getStateForZoom","viewportX","viewportY","nextZoom","appLayerX","appLayerY","currentZoom","getTooltipDiv","existingDiv","div","classList","updateTooltipPosition","tooltip","item","tooltipRect","margin","Tooltip","long","onPointerEnter","itemRect","updateTooltip","onPointerLeave","ConfirmDialog","onConfirm","onCancel","confirmText","cancelText","small","ClearCanvas","showDialog","setShowDialog","toggleDialog","useIsMobile","actionZoomIn","_elements","actionZoomOut","zoomValueToFitBoundsOnViewport","commonBoundsWidth","zoomValueForWidth","commonBoundsHeight","zoomValueForHeight","smallestZoomValue","zoomAdjustedToSteps","zoomToFitElements","zoomToSelection","commonBounds","newZoom","getTransform","marginInlineStart","maxHeight","translateX","translateY","textWysiwyg","originalContainerHeight","onSubmit","getViewportCoords","excalidrawContainer","updateWysiwygStyle","state","updatedElement","approxLineHeight","coordX","propertiesUpdated","editable","currentFont","textPropertiesUpdated","editorHeight","initialSelectionStart","selectionStart","initialSelectionEnd","selectionEnd","initialLength","editorMaxHeight","wrap","backfaceVisibility","border","outline","resize","background","zIndex","overflowWrap","oninput","onkeydown","actionManager","executeAction","submittedViaKeyboard","handleSubmit","isComposing","keyCode","outdent","indent","dispatchEvent","Event","repeat","RE_LEADING_TAB","linesStartIndices","getSelectedLinesStartIndices","startIndex","startValue","endValue","removedTabs","tabMatch","match","startOffset","startIndices","stopEvent","cleanup","updateElement","viaKeyboard","isDestroyed","onblur","observer","disconnect","bindBlurEvent","unbindUpdate","isTargetColorPicker","closest","SVGElement","addCallback","select","ResizeObserver","observe","passive","capture","showSelectedShapeActions","Boolean","getSceneVersion","_clearElements","clearElementsForDatabase","clearElementsForExport","clearElementsForLocalStorage","isOverScrollBars","scrollBars","horizontal","vertical","scrollBar","isOverHorizontal","isOverVertical","isOverEither","attributes","includeBoundTextElement","handleGroupEditingState","siblingElements","actionDeleteSelected","deleteSelectedElements","contextItemLabel","getIndicesToMove","selectedIndices","deletedIndices","includeDeletedIndex","getTargetIndexAccountingForBinding","containerElement","boundElementId","getTargetElementsMap","indices","shiftElements","indicesToMove","targetElementsMap","groupedIndices","toContiguousGroups","leadingIndex","trailingIndex","boundaryIndex","targetIndex","sourceElement","indexFilter","candidateIndex","siblingGroupId","elementsInSiblingGroup","getTargetIndex","leadingElements","displacedElements","trailingElements","shiftElementsToEnd","groupElements","moveOneLeft","moveOneRight","moveAllLeft","moveAllRight","actionSendBackward","keyPriority","actionBringForward","actionSendToBack","actionBringToFront","actionSelectAll","actionDuplicateSelection","duplicateSelectedPoints","duplicateElements","groupIdMap","newElements","duplicateAndOffsetElement","finalElements","actionFinalize","focusContainer","multiPointElement","isLoop","linePoints","firstPoint","ProjectName","fileName","setFileName","htmlFor","isNameEditable","blur","getClientColors","clientId","currentUser","sum","backgrounds","strokes","EXTERNAL_LINK_IMG","linkCanvasCache","IS_HYPERLINK_TOOLTIP_VISIBLE","Hyperlink","setAppState","onLinkOpen","linkVal","inputVal","setInputVal","isEditing","normalizeLink","timeoutId","handlePointerMove","shouldHideLinkPopup","POINTER_MOVE","handleRemove","getCoordsForPopover","placeholder","autoFocus","href","isLocalLink","customEvent","EXCALIDRAW_LINK","defaultPrevented","rel","CONTAINER_WIDTH","trim","actionLink","source","getContextMenuLabel","contextItemPredicate","getLinkHandleFromCoords","linkWidth","linkHeight","linkMarginY","isPointHittingLinkIcon","isMobile","linkX","linkY","HYPERLINK_TOOLTIP_TIMEOUT_ID","renderTooltip","tooltipDiv","linkViewportCoords","popoverX","popoverY","CONTAINER_PADDING","hasEmojiSupport","strokeRectWithRotation","strokeRect","fillCircle","beginPath","arc","renderScene","atLeastOneVisibleElement","renderScrollbars","renderSelection","renderGrid","setTransform","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","moveTo","lineTo","strokeGrid","visibleElements","isVisibleElement","renderLinkIcon","lineWidth","setLineDash","renderLinearPointHandles","suggestedBinding","renderBindingHighlight","selections","selectionColors","remoteSelectedElementIds","socketId","elementX1","elementY1","elementX2","elementY2","addSelectionForGroupId","selection","renderSelectionBorder","locallySelectedElements","renderTransformHandles","dashedLinePadding","initialLineDash","getLineDash","remotePointerViewportCoords","isOutOfBounds","userState","remotePointerUserStates","AWAY","remotePointerButton","closePath","username","remotePointerUsernames","idleState","IDLE","ACTIVE","usernameAndIdleState","measure","measureHeight","actualBoundingBoxDescent","actualBoundingBoxAscent","elementsMinX","elementsMinY","elementsMaxX","elementsMaxY","viewportWidthWithZoom","viewportHeightWithZoom","viewportWidthDiff","viewportHeightDiff","safeArea","parseInt","bottom","viewportMinX","viewportMinY","viewportMaxX","viewportMaxY","sceneMinX","sceneMinY","sceneMaxX","sceneMaxY","SCROLLBAR_MARGIN","getScrollBars","quadraticCurveTo","roundRect","SCROLLBAR_WIDTH","elementProperties","dashWidth","lineDashOffset","renderHighlight","renderBindingHighlightForSuggestedPointBinding","renderBindingHighlightForBindableElement","strokeOffset","strokeDiamondWithRotation","strokeEllipseWithRotation","linkCanvasCacheContext","canvasWidth","canvasHeight","viewTransformations","topLeftSceneCoords","bottomRightSceneCoords","renderSceneToSvg","fileOpen","mimeTypes","extensions","_fileOpen","description","multiple","legacySetup","input","scheduleRejection","focusHandler","checkForFile","KEYUP","POINTER_UP","FOCUS","interval","setInterval","rejectPromise","clearInterval","fileSave","_fileSave","extension","AllowedExcalidrawElementTypes","diamond","freedraw","restoreElementWithProperties","extra","base","restoreElement","fontFamilyName","fontPx","_fontFamily","restoreElements","localElements","localElementsMap","migratedElement","localElement","restoreAppState","localAppState","suppliedValue","localValue","restoreLibraryItems","libraryItems","defaultStatus","restoredItems","created","_item","parseFileContents","decodePngMetadata","contents","readAsText","onloadend","readyState","DONE","decodeSvgMetadata","getFileHandleType","isImageFileHandle","isSupportedImageFile","loadFromBlob","isValidExcalidrawData","loadLibraryFromBlob","canvasToBlob","toBlob","generateIdFromFile","digest","hashBuffer","getDataURL","onerror","readAsDataURL","dataURLToFile","filename","dataIndexStart","ab","ia","File","resizeImageFile","res","default","pica","imageBlobReduce","features","outputType","_create_blob","env","out_canvas","out_blob","maxWidthOrHeight","SVGStringToFile","SVGString","filterOutDeletedFiles","nextFiles","serializeAsJSON","saveAsJSON","serialized","loadFromJSON","isValidLibrary","saveLibraryAsJSON","importLibraryFromJSON","library","importLibrary","loadHTMLImageElement","Image","updateImageCache","fileIds","updatedFiles","erroredFiles","promises","imagePromise","getInitializedImageElements","normalizeSVG","doc","DOMParser","parseFromString","hasAttribute","outerHTML","SVG_EXPORT_TAG","exportToCanvas","exportPadding","createCanvas","getCanvasSize","exportToSvg","encodeSvgMetadata","innerHTML","rect","BAR_WIDTH","BAR_GAP","BAR_HEIGHT","NOT_SPREADSHEET","VALID_SPREADSHEET","tryParseNumber","exec","parseFloat","isNumericColumn","columnIndex","tryParseCells","cells","numCols","reason","hasHeader","spreadsheet","labels","valueColumnIndex","labelColumnIndex","rows","row","bgColors","commonProps","getChartDimentions","chartWidth","chartHeight","chartBaseElements","debug","debugRect","chartXLabels","minYLabel","toLocaleString","chartYLabels","chartLines","renderSpreadsheet","chartType","dots","chartTypeLine","bars","barHeight","chartTypeBar","CLIPBOARD","PREFER_APP_CLIPBOARD","probablySupportsClipboardReadText","probablySupportsClipboardWriteText","probablySupportsClipboardBlob","HTMLCanvasElement","copyToClipboard","copyTextToSystemClipboard","getAppClipboard","parsePotentialSpreadsheet","numColsFirstLine","transposedResults","nextCells","col","nextCellRow","transposeCells","tryParseSpreadsheet","getSystemClipboard","clipboardData","getData","readText","parseClipboard","systemClipboard","spreadsheetResult","appClipboardData","systemClipboardData","copyBlobToClipboardAsPng","write","ClipboardItem","copied","writeText","copyTextViaExecCommand","textarea","yPosition","pageYOffset","scrollTop","success","setSelectionRange","execCommand","exportCanvas","tempSvg","tempCanvas","encodePngMetadata","resaveAsImageWithScene","fileHandleType","CheckboxItem","align","justifyContent","alignItems","justifyItems","ActiveFile","onSave","actionSaveFileToDisk","appProps","allElements","exportedElements","trunc","getExportSize","scaleButtonTitle","fileHandleExists","nativeFileSystemSupported","copiedStyles","loadedElements","loadedAppState","marginTop","marginBottom","actionCopyStyles","actionPasteStyles","pastedElement","HelpIcon","enableActionGroup","allElementsInSameGroup","actionGroup","selectedGroupId","elementIdsInGroup","selectElementIds","lastElementInGroup","lastGroupElementIndex","lastIndexOf","elementsAfterGroup","elementsBeforeGroup","updatedElementsInOrder","actionUngroup","boundTextElementIds","nextGroupIds","removeFromSelectedGroups","updateAppState","Avatar","actionAddToLibrary","collaborator","shortName","names","substring","firstName","lastName","getClientInitials","pointer","loadLibrary","saveLibrary","catch","calculateTranslation","selectionBoundingBox","axis","groupBoundingBox","noTranslation","alignSelectedElements","alignment","alignElements","updatedElementsMap","distributeSelectedElements","distribution","mid","end","extent","index0","g","index1","pos","box","distributeElements","actionFlipHorizontal","space","flipSelectedElements","eligibleElements","enableActionFlipHorizontal","actionFlipVertical","enableActionFlipVertical","flipDirection","flipElements","flipElement","rotateElement","originalX","originalY","originalAngle","finalOffsetX","usingNWHandle","newNCoordsX","nHandle","rotationAngle","actionCopy","actionCut","actionCopyAsSvg","_data","actionCopyAsPng","exportSelection","exportColorScheme","actionToggleGridMode","actionToggleZenMode","actionToggleStats","actionUnbindText","writeData","prevElements","updater","prevElementMap","nextElementMap","syncHistory","trackAction","ActionManager","getAppState","getElementsIncludingDeleted","renderAction","UIOptions","formState","actionResult","registerAction","Library","libraryCache","resetLibrary","onLibraryChange","restoreLibraryItem","libraryItem","libraryItemsFromStorage","prevLibraryItems","serializedItems","libraryFile","isUniqueitem","existingLibraryItems","targetLibraryItem","libItemExcalidrawItem","restoredLibItems","filteredItems","restoredItem","getCenter","pointers","allCoords","getDistance","clearAppStatePropertiesForHistory","History","elementCache","recording","stateHistory","redoStack","lastEntry","generateEntry","dehydrateHistoryEntry","dehydratedExcalidrawElement","versions","dehydratedHistoryEntry","hydrateHistoryEntry","nextEntry","newEntryDehydrated","newEntry","shouldCreateEntry","clearRedoStack","entryToRestore","pop","currentEntry","pushEntry","SHAPES","shortcutMap","cut","paste","copyStyles","pasteStyles","selectAll","duplicateSelection","sendBackward","bringForward","sendToBack","bringToFront","copyAsPng","copyAsSvg","ungroup","gridMode","zenMode","stats","addToLibrary","flipHorizontal","flipVertical","viewMode","hyperlink","getShortcutFromShortcutName","shortcuts","ContextMenu","onContextMenu","actionName","dangerous","checkmark","contextMenuNodeByContainer","params","of","render","contextMenuNode","unmountComponentAtNode","handleClose","getContextMenuNode","SelectedShapeActions","isSingleElementBoundContainer","showFillIcons","showChangeBackgroundIcons","commonSelectedType","ShapesSwitcher","onImageAction","letter","ZoomActions","BackgroundPickerAndDarkModeToggle","showThemeBtn","CollabButton","isCollaborating","collaboratorCount","supportsContextFilters","ErrorCanvasPreview","renderPreview","previewNode","ExportButton","shade","OpenColor","ImageExportModal","onExportToPng","onExportToSvg","onExportToClipboard","someElementIsSelected","exportSelected","setExportSelected","previewRef","gridTemplateColumns","userSelect","ImageExportDialog","modalIsShown","setModalIsShown","FixedSideContainer","HintViewer","hint","multiMode","targetElement","getHints","Island","LoadingMessage","CHECKED","xmlns","UNCHECKED","LockButton","Section","heading","header","UserList","mobile","UserList_mobile","LIBRARY_ICON","LibraryButton","DEFAULT_SIZE","PenModeButton","MobileMenu","libraryMenu","renderJSONExportDialog","renderImageExportDialog","onCollabButtonClick","onLockToggle","onPenModeToggle","renderCustomFooter","renderTopRightUI","insertOnCanvasDirectly","marginRight","client","Fragment","showEraser","renderAppToolbar","ChartPreviewBtn","chartElements","setChartElements","parentNode","PasteChartDialog","onInsertChart","handleChartClick","autofocus","Header","Columns","flexDirection","flexWrap","Column","ShortcutIsland","caption","Shortcut","flex","isOr","ShortcutKey","HelpDialog","Card","JSONExportModal","exportOpts","onExportToBackend","renderCustomUI","JSONExportDialog","getDimensions","restoredElements","restoredAppState","_exportToCanvas","_exportToSvg","SingleLibraryItem","libItem","onRemove","svgRef","bind","fontWeight","LOCAL_STORAGE_KEY_PUBLISH_LIBRARY","generatePreviewImage","MAX_ITEMS_PER_ROW","BOX_SIZE","BOX_PADDING","BORDER_WIDTH","itemCanvas","rowOffset","colOffset","PublishLibrary","onSuccess","onError","updateItemsInStorage","authorName","githubHandle","twitterHandle","website","libraryData","setLibraryData","isSubmitting","setIsSubmitting","localStorage","getItem","importPublishLibDataFromStorage","clonedLibItems","setClonedLibItems","onInputChange","erroredLibItems","isError","previewImage","libContent","lib","formData","FormData","append","fetch","response","ok","url","removeItem","statusText","err","onDialogClose","setItem","savePublishLibDataToStorage","shouldRenderForm","renderLibraryItems","required","pattern","PLUS_ICON","LibraryUnit","isPending","onToggle","isHovered","setIsHovered","adder","onMouseEnter","onMouseLeave","draggable","onDragStart","dataTransfer","setData","LibraryMenuItems","onRemoveFromLibrary","onAddToLibrary","onInsertShape","pendingElements","libraryReturnUrl","selectedItems","onPublish","renderRemoveLibAlert","setShowRemoveLibAlert","showRemoveLibAlert","CELLS_PER_ROW","referrer","pathname","isPublished","createLibraryItemCompo","renderLibrarySection","_items","rowItems","publishedItems","unpublishedItems","itemsSelected","resetLabel","renderLibraryActions","getSelectedItems","LibraryMenu","listener","Element","useOnClickOutside","handleKeyDown","KEYDOWN","setLibraryItems","loadingState","setSelectedItems","showPublishLibraryDialog","setShowPublishLibraryDialog","publishLibSuccess","setPublishLibSuccess","loadingTimerRef","race","removeFromLibrary","nextItems","renderPublishSuccess","onPublishLibSuccess","nextLibItems","lastSelectedItem","setLastSelectedItem","alert","_id","rangeStart","rangeEnd","selectedItemsMap","nextSelectedIds","LayerUI","onInsertElements","showExitZenModeBtn","toggleZenMode","createExporter","Separator","closeLibrary","deselectItems","dialogs","shouldRenderSelectedShapeActions","renderFixedSideContainer","areEqual","getNecessaryObj","prevAppState","langCode","Stats","boundingBox","selectedBoundingBox","colSpan","renderCustomStats","Toast","clearToast","timerRef","scheduleTimeout","actionToggleViewMode","IsMobileContext","createContext","useContext","ExcalidrawContainerContext","didTapTwice","tappedTwiceTimer","cursorX","cursorY","isHoldingSpace","isPanning","isDraggingScrollBar","currentScrollBars","touchTimeout","invalidateContextMenu","lastPointerUp","gesture","lastCenter","initialDistance","initialScale","App","unmounted","detachIsMobileMqHandler","excalidrawContainerRef","createRef","resizeObserver","nearestScrollableContainer","excalidrawContainerValue","hitLinkElement","lastPointerDown","contextMenuOpen","lastScenePointer","getSceneElements","syncActionResult","replaceAllElements","replaceFiles","addNewImagesToImageCache","gridModeEnabled","setCurrentState","onUnload","disableEvent","onFontLoaded","onSceneUpdated","importLibraryFromUrl","token","hash","URLSearchParams","replaceState","search","query","decodeURIComponent","request","confirm","numShapes","resetHistory","resetScene","resetLoadingState","initializeScene","launchQueue","setConsumer","launchParams","getFile","initialData","scrollToContent","libraryUrl","onResize","onScroll","getCanvasOffsets","onCut","cutAll","onCopy","copyAll","onTapStart","resetTapTwice","touches","handleCanvasDoubleClick","onTapEnd","resetContextMenuTimer","pasteFromClipboard","elementUnderCursor","elementFromPoint","string","endsWith","imageElement","createImageElement","insertImageElement","initializeImageDimensions","onPaste","addElementsFromPasteOrLibrary","addTextFromPaste","selectShapeTool","elementsCenterX","elementsCenterY","dx","dy","gridX","gridY","obj","removePointer","pointerId","toggleLock","prevState","togglePenMode","toggleStats","setToastMessage","restoreFileFromShare","caches","open","webShareTargetCache","loadFileToCanvas","addFiles","filesMap","updateScene","sceneData","updateCurrentCursorPosition","Proxy","ev","prop","maybeSuggestBindingForAll","selectedElement","startTextEditing","shouldBind","findShapeByKey","onKeyUp","onGestureStart","onGestureChange","onGestureEnd","insertAtParentCenter","parentCenterPosition","getTextWysiwygSnappedToCenterPosition","existingTextElement","getTextElementAtPosition","fontString","elementCenterX","elementCenterY","handleTextWysiwyg","isExistingElement","getSelectedGroupIdForElement","getElementLinkAtPosition","hitElementIndex","redirectToLink","isTouchScreen","draggedDistance","lastPointerDownCoords","lastPointerDownHittingLinkIcon","lastPointerUpCoords","lastPointerUpHittingLinkIcon","newWindow","opener","handleCanvasPointerMove","savePointer","scaleFactor","zoomState","resetShouldCacheIgnoreZoomDebounced","isOverScrollBar","maybeSuggestBindingAtCursor","maybeSuggestBindingsForLinearElementAtCoords","buttons","elementWithTransformHandleType","showHyperlinkTooltip","isHittingCommonBoundingBoxOfSelectedElements","handleEraser","updateElementIds","idsToUpdate","elementIdsToErase","lastCoords","samplingInterval","distanceRatio","nextX","nextY","handleTouchMove","handleCanvasPointerDown","getSelection","anchorNode","removeAllRanges","maybeOpenContextMenuAfterPointerDownOnTouchDevices","maybeCleanupAfterMissingPointerUp","handleCanvasPanUsingWheelOrSpaceDrag","button","updateGestureOnPointerDown","initialPointerDownState","handleDraggingScrollBar","clearSelectionIfNotUsingSelection","updateBindingEnabledOnPointerMove","handleSelectionOnPointerDown","handleLinearElementOnPointerDown","handleFreeDrawElementOnPointerDown","createGenericElementOnPointerDown","onPointerMove","onPointerMoveFromPointerDownHandler","onPointerUpFromPointerDownHandler","onKeyDownFromPointerDownHandler","onKeyUpFromPointerDownHandler","eventListeners","onMove","onUp","handleTextOnPointerDown","handleCanvasPointerUp","pointerDownEvent","hit","eraseElements","handleCanvasContextMenu","nextPastePrevented","isLinux","lastX","lastY","preventNextPaste","PASTE","enableNextPaste","teardown","BLUR","handleType","getResizeOffsetXY","arrowDirection","getResizeArrowDirection","handlePointerDown","hasHitElementInside","allHitElements","someHitElementIsSelected","isASelectedElement","hasHitCommonBoundingBoxOfSelectedElements","clearSelection","wasAddedToSelection","pressure","initializeImage","imageFile","_imageElement","showCursorImagePreview","generateIdForFile","existingFileData","maxSize","resizedFile","setImagePreviewCursor","cachedImageData","cursorImageSizePx","imagePreview","previewDataURL","toDataURL","forceNaturalSize","placeholderSize","naturalHeight","naturalWidth","_updateImageCache","imageElements","uncachedImageElements","scheduleImageRefresh","throttle","shouldEnableBinding","shouldEnableBindingForPointerEvent","hoveredBindableElement","oppositeBindingBoundElement","handleCanvasRef","handleWheel","TOUCH_START","TOUCH_END","handleAppOnDrop","getAsFileSystemHandle","libraryShapes","preferSelected","_openContextMenu","maybeDragNewGenericElement","aspectRatio","originInGrid","maybeHandleResize","resizeX","resizeY","transformElements","maybeGroupAction","maybeUngroupAction","maybeFlipHorizontal","maybeFlipVertical","separator","viewModeOptions","appStates","elementsWithUnbindedText","log10","isNaN","onPointerUpdate","pointersMap","updateDOMRect","currentWidth","currentHeight","currentOffsetTop","currentOffsetLeft","refresh","excalidrawRef","readyPromise","api","ready","getFiles","registerAll","undoOnce","redoOnce","createRedoAction","canvasScale","canvasDOMWidth","canvasDOMHeight","onPointerCancel","onTouchMove","onDoubleClick","renderFooter","onDrop","handleKeyboardGlobally","Provider","renderCanvas","defineProperties","configurable","addEventListeners","matchMedia","mediaQuery","matches","addListener","removeListener","removeEventListeners","destroy","COPY","CUT","SCROLL","MOUSE_MOVE","RESIZE","UNLOAD","DRAG_OVER","DROP","GESTURE_START","GESTURE_CHANGE","GESTURE_END","fonts","detectScroll","prevProps","updateLanguage","deselectElements","toggle","pointerViewportCoords","pointerUsernames","pointerUserStates","user","renderingElements","record","_element","elementIdToSelect","elementWithHighestZIndex","withCmdOrCtrl","scrollbars","hasBeenDuplicated","drag","hasOccurred","boxSelection","handlePointerMoveOverScrollbars","getDragOffsetXY","didDrag","handlePointDragging","pointsSceneCoords","hasHitASelectedElement","dragX","dragY","dragDistanceX","dragDistanceY","dragSelectedElements","elementsToAppend","duplicatedElement","originDragX","originDragY","nextSceneElements","handleBoxSelection","elementsWithinSelection","getElementsWithinSelection","childEvent","handlePointerUp","idsOfSelectedElementsThatAreInGroups","prevId","_prevState","gId","includedElementIds","getEligibleElementsForBinding","elementClickedInside","Component","Modal","closeOnClickOutside","modalRoot","useBodyRoot","createPortal","labelledBy","setDiv","isMobileRef","isDarkTheme","Dialog","islandNode","setIslandNode","lastActiveElement","focusableElements","queryFocusableElements","currentIndex","querySelectorAll","ErrorDialog","TopErrorBoundary","hasError","sentryEventId","errorSplash","errorInfo","_localStorage","Sentry","scope","setExtras","eventId","templateStrFn","reload","createGithubIssue","selectTextArea","readOnly","__webpack_public_path__","EXCALIDRAW_ASSET_PATH","pkg","SCENE","InitializeApp","loading","setLoading","updateLang","Excalidraw","nextProps","prevUIOptions","nextUIOptions","prevUIOptionsKeys","nextUIOptionsKeys","isUIOptionsSame","prevKeys","nextKeys","forwardedRefComp","FILE_UPLOAD_MAX_BYTES","BROADCAST","FIREBASE_CONFIG","FIREBASE_STORAGE_PREFIXES","STORAGE_KEYS","FileManager","saveFiles","fetchingFiles","savingFiles","savedFiles","_getFiles","_saveFiles","isFileHandled","isFileSaved","addedFiles","loadedFiles","shouldPreventUnload","shouldUpdateImageElementStatus","encodeFilesForUpload","maxBytes","processedFiles","encodedFile","updateStaleImageStatuses","excalidrawAPI","firebasePromise","firestorePromise","firebaseStoragePromise","isFirebaseInitialized","_loadFirebase","firebase","initializeApp","_getFirebase","loadFirestore","loadFirebaseStorage","encryptElements","ciphertext","decryptElements","decrypted","decodedData","firebaseSceneVersionCache","isSavedToFirebase","portal","socket","roomId","roomKey","sceneVersion","saveFilesToFirebase","prefix","storage","put","cacheControl","saveToFirebase","nextDocData","firestore","fromUint8Array","docRef","collection","runTransaction","transaction","exists","update","didUpdate","loadFromFirebase","storedScene","toUint8Array","loadFilesFromFirebase","filesIds","storageBucket","generateRoomId","getCollabServer","resp","getCollaborationLinkData","URL","generateCollaborationLinkData","legacy_decodeFromBackend","fixedIv","importFromBackend","decodedBuffer","localDataState","exportToBackend","payload","filesToUpload","urlString","prompt","error_class","LOCAL_STATE_VERSIONS","isBrowserStorageStateNewer","updateBrowserStateVersion","timestamp","importUsernameFromLocalStorage","saveToLocalStorage","importFromLocalStorage","savedElements","savedState","getElementsStorageSize","getTotalStorageSize","collab","getLibraryItemsFromStorage","Portal","socketInitialized","broadcastedElementVersions","queueFileUpload","fileManager","broadcastScene","sceneType","syncAll","INIT","syncableElements","isSyncableElement","syncableElement","broadcastPromise","_broadcastSocketData","saveCollabRoomToFirebase","broadcastIdleChange","broadcastMouseLocation","on","emit","_socketId","clients","setCollaborators","volatile","isOpen","getShareIcon","isAppleBrowser","vendor","isWindowsBrowser","appVersion","RoomDialog","activeRoomLink","onUsernameChange","onRoomCreate","onRoomDestroy","setErrorMessage","roomLinkInput","copyRoomLink","shareRoomLink","selectInput","onKeyPress","shouldDiscardRemoteElement","local","remote","initialValue","Context","InverseConsumer","_updateProviderValue","InverseProvider","Consumer","createInverseContext","CollabContext","CollabContextConsumer","CollabContextProvider","CollabWrapper","activeIntervalId","idleTimeoutId","socketInitializationTimer","lastBroadcastedOrReceivedSceneVersion","destroySocketClient","isUnload","beforeUnload","getSyncableElements","room","openPortal","initializeSocketClient","closePortal","queueBroadcastAllElements","loadImageFiles","resetBrowserStateVersions","pushState","onRoomClose","reset","fetchImageFilesFromFirebase","unfetchedImages","decryptPayload","encryptedData","existingRoomLinkData","scenePromise","socketIOClient","socketServerData","transports","polling","broadcastElements","initializeRoom","roomLinkData","fetchScene","decryptedData","UPDATE","remoteElements","reconciledElements","reconcileElements","handleRemoteSceneUpdate","init","socketID","off","initializeIdleDetector","setLastBroadcastedOrReceivedSceneVersion","localElementsData","duplicates","remoteElementIdx","remoteElement","_reconcileElements","reportIdle","reportActive","onVisibilityChange","onIdleStateChange","VISIBILITY_CHANGE","getLastBroadcastedOrReceivedSceneVersion","currentVersion","newVersion","setUsername","saveUsernameToLocalStorage","contextValue","getContextValue","BEFORE_UNLOAD","sockets","PureComponent","LanguageList","i18n","currentLangCode","getStorageSizes","total","CustomStats","storageSizes","setStorageSizes","sizes","excalidrawPlusIcon","exportToExcalidrawPlus","customMetadata","ExportToExcalidrawPlus","filesStore","createStore","clearObsoleteFilesFromIndexedDB","allIds","currentFileIds","del","localFileStorage","getMany","filesData","languageDetector","LanguageDetector","languageUtils","formatLanguageCode","isWhitelisted","checkWhitelist","saveDebounced","onFilesSaved","searchParams","jsonBackendMatch","externalUrlMatch","isExternalScene","once","collabAPI","PlusLinkJSX","unicodeBidi","ExcalidrawWrapper","detect","setLangCode","initialStatePromiseRef","excalidrawRefCallback","loadImages","isInitialLoad","onHashChange","oldURL","titleTimeout","syncData","currFiles","HASHCHANGE","unloadHandler","cacheUserLanguage","renderLanguageList","isTinyDevice","borderRadius","newEl","ExcalidrawApp","isLocalhost","hostname","registerValidSW","swUrl","config","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","info","onUpdate","checkValidServiceWorker","headers","contentType","unregister","registerServiceWorker","waitingServiceWorker","waiting","STATE_CHANGE","postMessage","SentryEnvHostnameMap","onlineEnv","REACT_APP_DISABLE_SENTRY","dsn","environment","release","ignoreErrors","integrations","SentryIntegrations","levels","beforeSend","__EXCALIDRAW_SHA__","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a7d728c8.chunk.js","sourcesContent":["import cssVariables from \"./css/variables.module.scss\";\nimport { AppProps } from \"./types\";\nimport { FontFamilyValues } from \"./element/types\";\n\nexport const APP_NAME = \"Excalidraw\";\n\nexport const DRAGGING_THRESHOLD = 10; // px\nexport const LINE_CONFIRM_THRESHOLD = 8; // px\nexport const ELEMENT_SHIFT_TRANSLATE_AMOUNT = 5;\nexport const ELEMENT_TRANSLATE_AMOUNT = 1;\nexport const TEXT_TO_CENTER_SNAP_THRESHOLD = 30;\nexport const SHIFT_LOCKING_ANGLE = Math.PI / 12;\nexport const CURSOR_TYPE = {\n  TEXT: \"text\",\n  CROSSHAIR: \"crosshair\",\n  GRABBING: \"grabbing\",\n  GRAB: \"grab\",\n  POINTER: \"pointer\",\n  MOVE: \"move\",\n  AUTO: \"\",\n};\nexport const POINTER_BUTTON = {\n  MAIN: 0,\n  WHEEL: 1,\n  SECONDARY: 2,\n  TOUCH: -1,\n} as const;\n\nexport enum EVENT {\n  COPY = \"copy\",\n  PASTE = \"paste\",\n  CUT = \"cut\",\n  KEYDOWN = \"keydown\",\n  KEYUP = \"keyup\",\n  MOUSE_MOVE = \"mousemove\",\n  RESIZE = \"resize\",\n  UNLOAD = \"unload\",\n  FOCUS = \"focus\",\n  BLUR = \"blur\",\n  DRAG_OVER = \"dragover\",\n  DROP = \"drop\",\n  GESTURE_END = \"gestureend\",\n  BEFORE_UNLOAD = \"beforeunload\",\n  GESTURE_START = \"gesturestart\",\n  GESTURE_CHANGE = \"gesturechange\",\n  POINTER_MOVE = \"pointermove\",\n  POINTER_UP = \"pointerup\",\n  STATE_CHANGE = \"statechange\",\n  WHEEL = \"wheel\",\n  TOUCH_START = \"touchstart\",\n  TOUCH_END = \"touchend\",\n  HASHCHANGE = \"hashchange\",\n  VISIBILITY_CHANGE = \"visibilitychange\",\n  SCROLL = \"scroll\",\n  // custom events\n  EXCALIDRAW_LINK = \"excalidraw-link\",\n}\n\nexport const ENV = {\n  TEST: \"test\",\n  DEVELOPMENT: \"development\",\n};\n\nexport const CLASSES = {\n  SHAPE_ACTIONS_MENU: \"App-menu__left\",\n};\n\n// 1-based in case we ever do `if(element.fontFamily)`\nexport const FONT_FAMILY = {\n  Virgil: 1,\n  Helvetica: 2,\n  Cascadia: 3,\n};\n\nexport const THEME = {\n  LIGHT: \"light\",\n  DARK: \"dark\",\n};\n\nexport const WINDOWS_EMOJI_FALLBACK_FONT = \"Segoe UI Emoji\";\n\nexport const DEFAULT_FONT_SIZE = 20;\nexport const DEFAULT_FONT_FAMILY: FontFamilyValues = FONT_FAMILY.Virgil;\nexport const DEFAULT_TEXT_ALIGN = \"left\";\nexport const DEFAULT_VERTICAL_ALIGN = \"top\";\nexport const DEFAULT_VERSION = \"{version}\";\n\nexport const CANVAS_ONLY_ACTIONS = [\"selectAll\"];\n\nexport const GRID_SIZE = 20; // TODO make it configurable?\n\nexport const MIME_TYPES = {\n  excalidraw: \"application/vnd.excalidraw+json\",\n  excalidrawlib: \"application/vnd.excalidrawlib+json\",\n  json: \"application/json\",\n  svg: \"image/svg+xml\",\n  png: \"image/png\",\n  jpg: \"image/jpeg\",\n  gif: \"image/gif\",\n  binary: \"application/octet-stream\",\n} as const;\n\nexport const EXPORT_DATA_TYPES = {\n  excalidraw: \"excalidraw\",\n  excalidrawClipboard: \"excalidraw/clipboard\",\n  excalidrawLibrary: \"excalidrawlib\",\n} as const;\n\nexport const EXPORT_SOURCE = window.location.origin;\n\n// time in milliseconds\nexport const IMAGE_RENDER_TIMEOUT = 500;\nexport const TAP_TWICE_TIMEOUT = 300;\nexport const TOUCH_CTX_MENU_TIMEOUT = 500;\nexport const TITLE_TIMEOUT = 10000;\nexport const TOAST_TIMEOUT = 5000;\nexport const VERSION_TIMEOUT = 30000;\nexport const SCROLL_TIMEOUT = 100;\nexport const ZOOM_STEP = 0.1;\nexport const HYPERLINK_TOOLTIP_DELAY = 300;\n\n// Report a user inactive after IDLE_THRESHOLD milliseconds\nexport const IDLE_THRESHOLD = 60_000;\n// Report a user active each ACTIVE_THRESHOLD milliseconds\nexport const ACTIVE_THRESHOLD = 3_000;\n\nexport const MODES = {\n  VIEW: \"viewMode\",\n  ZEN: \"zenMode\",\n  GRID: \"gridMode\",\n};\n\nexport const THEME_FILTER = cssVariables.themeFilter;\n\nexport const URL_QUERY_KEYS = {\n  addLibrary: \"addLibrary\",\n} as const;\n\nexport const URL_HASH_KEYS = {\n  addLibrary: \"addLibrary\",\n} as const;\n\nexport const DEFAULT_UI_OPTIONS: AppProps[\"UIOptions\"] = {\n  canvasActions: {\n    changeViewBackgroundColor: true,\n    clearCanvas: true,\n    export: { saveFileToDisk: true },\n    loadScene: true,\n    saveToActiveFile: true,\n    theme: true,\n    saveAsImage: true,\n  },\n};\n\nexport const MQ_MAX_WIDTH_PORTRAIT = 730;\nexport const MQ_MAX_WIDTH_LANDSCAPE = 1000;\nexport const MQ_MAX_HEIGHT_LANDSCAPE = 500;\n\nexport const MAX_DECIMALS_FOR_SVG_EXPORT = 2;\n\nexport const EXPORT_SCALES = [1, 2, 3];\nexport const DEFAULT_EXPORT_PADDING = 10; // px\n\nexport const DEFAULT_MAX_IMAGE_WIDTH_OR_HEIGHT = 1440;\n\nexport const ALLOWED_IMAGE_MIME_TYPES = [\n  MIME_TYPES.png,\n  MIME_TYPES.jpg,\n  MIME_TYPES.svg,\n  MIME_TYPES.gif,\n] as const;\n\nexport const MAX_ALLOWED_FILE_BYTES = 2 * 1024 * 1024;\n\nexport const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nexport const ENCRYPTION_KEY_BITS = 128;\n\nexport const VERSIONS = {\n  excalidraw: 2,\n  excalidrawLibrary: 2,\n} as const;\n\nexport const BOUND_TEXT_PADDING = 5;\n\nexport const VERTICAL_ALIGN = {\n  TOP: \"top\",\n  MIDDLE: \"middle\",\n  BOTTOM: \"bottom\",\n};\n","import colors from \"./colors\";\nimport {\n  CURSOR_TYPE,\n  DEFAULT_VERSION,\n  EVENT,\n  FONT_FAMILY,\n  WINDOWS_EMOJI_FALLBACK_FONT,\n} from \"./constants\";\nimport { FontFamilyValues, FontString } from \"./element/types\";\nimport { Zoom } from \"./types\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nimport { isDarwin } from \"./keys\";\n\nlet mockDateTime: string | null = null;\n\nexport const setDateTimeForTests = (dateTime: string) => {\n  mockDateTime = dateTime;\n};\n\nexport const getDateTime = () => {\n  if (mockDateTime) {\n    return mockDateTime;\n  }\n\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = `${date.getMonth() + 1}`.padStart(2, \"0\");\n  const day = `${date.getDate()}`.padStart(2, \"0\");\n  const hr = `${date.getHours()}`.padStart(2, \"0\");\n  const min = `${date.getMinutes()}`.padStart(2, \"0\");\n\n  return `${year}-${month}-${day}-${hr}${min}`;\n};\n\nexport const capitalizeString = (str: string) =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const isToolIcon = (\n  target: Element | EventTarget | null,\n): target is HTMLElement =>\n  target instanceof HTMLElement && target.className.includes(\"ToolIcon\");\n\nexport const isInputLike = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLSelectElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLInputElement ||\n  target instanceof HTMLTextAreaElement ||\n  target instanceof HTMLSelectElement;\n\nexport const isWritableElement = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLTextAreaElement ||\n  (target instanceof HTMLInputElement &&\n    (target.type === \"text\" || target.type === \"number\"));\n\nexport const getFontFamilyString = ({\n  fontFamily,\n}: {\n  fontFamily: FontFamilyValues;\n}) => {\n  for (const [fontFamilyString, id] of Object.entries(FONT_FAMILY)) {\n    if (id === fontFamily) {\n      return `${fontFamilyString}, ${WINDOWS_EMOJI_FALLBACK_FONT}`;\n    }\n  }\n  return WINDOWS_EMOJI_FALLBACK_FONT;\n};\n\n/** returns fontSize+fontFamily string for assignment to DOM elements */\nexport const getFontString = ({\n  fontSize,\n  fontFamily,\n}: {\n  fontSize: number;\n  fontFamily: FontFamilyValues;\n}) => {\n  return `${fontSize}px ${getFontFamilyString({ fontFamily })}` as FontString;\n};\n\nexport const debounce = <T extends any[]>(\n  fn: (...args: T) => void,\n  timeout: number,\n) => {\n  let handle = 0;\n  let lastArgs: T | null = null;\n  const ret = (...args: T) => {\n    lastArgs = args;\n    clearTimeout(handle);\n    handle = window.setTimeout(() => {\n      lastArgs = null;\n      fn(...args);\n    }, timeout);\n  };\n  ret.flush = () => {\n    clearTimeout(handle);\n    if (lastArgs) {\n      const _lastArgs = lastArgs;\n      lastArgs = null;\n      fn(..._lastArgs);\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = null;\n    clearTimeout(handle);\n  };\n  return ret;\n};\n\n// throttle callback to execute once per animation frame\nexport const throttleRAF = <T extends any[]>(fn: (...args: T) => void) => {\n  let handle: number | null = null;\n  let lastArgs: T | null = null;\n  let callback: ((...args: T) => void) | null = null;\n  const ret = (...args: T) => {\n    if (process.env.NODE_ENV === \"test\") {\n      fn(...args);\n      return;\n    }\n    lastArgs = args;\n    callback = fn;\n    if (handle === null) {\n      handle = window.requestAnimationFrame(() => {\n        handle = null;\n        lastArgs = null;\n        callback = null;\n        fn(...args);\n      });\n    }\n  };\n  ret.flush = () => {\n    if (handle !== null) {\n      cancelAnimationFrame(handle);\n      handle = null;\n    }\n    if (lastArgs) {\n      const _lastArgs = lastArgs;\n      const _callback = callback;\n      lastArgs = null;\n      callback = null;\n      if (_callback !== null) {\n        _callback(..._lastArgs);\n      }\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = null;\n    callback = null;\n    if (handle !== null) {\n      cancelAnimationFrame(handle);\n      handle = null;\n    }\n  };\n  return ret;\n};\n\n// https://github.com/lodash/lodash/blob/es/chunk.js\nexport const chunk = <T extends any>(\n  array: readonly T[],\n  size: number,\n): T[][] => {\n  if (!array.length || size < 1) {\n    return [];\n  }\n  let index = 0;\n  let resIndex = 0;\n  const result = Array(Math.ceil(array.length / size));\n  while (index < array.length) {\n    result[resIndex++] = array.slice(index, (index += size));\n  }\n  return result;\n};\n\nexport const selectNode = (node: Element) => {\n  const selection = window.getSelection();\n  if (selection) {\n    const range = document.createRange();\n    range.selectNodeContents(node);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n};\n\nexport const removeSelection = () => {\n  const selection = window.getSelection();\n  if (selection) {\n    selection.removeAllRanges();\n  }\n};\n\nexport const distance = (x: number, y: number) => Math.abs(x - y);\n\nexport const resetCursor = (canvas: HTMLCanvasElement | null) => {\n  if (canvas) {\n    canvas.style.cursor = \"\";\n  }\n};\n\nexport const setCursor = (canvas: HTMLCanvasElement | null, cursor: string) => {\n  if (canvas) {\n    canvas.style.cursor = cursor;\n  }\n};\n\nexport const setCursorForShape = (\n  canvas: HTMLCanvasElement | null,\n  shape: string,\n) => {\n  if (!canvas) {\n    return;\n  }\n  if (shape === \"selection\") {\n    resetCursor(canvas);\n  } else if (shape === \"eraser\") {\n    resetCursor(canvas);\n\n    // do nothing if image tool is selected which suggests there's\n    // a image-preview set as the cursor\n  } else if (shape !== \"image\") {\n    canvas.style.cursor = CURSOR_TYPE.CROSSHAIR;\n  }\n};\n\nexport const isFullScreen = () =>\n  document.fullscreenElement?.nodeName === \"HTML\";\n\nexport const allowFullScreen = () =>\n  document.documentElement.requestFullscreen();\n\nexport const exitFullScreen = () => document.exitFullscreen();\n\nexport const getShortcutKey = (shortcut: string): string => {\n  shortcut = shortcut\n    .replace(/\\bAlt\\b/i, \"Alt\")\n    .replace(/\\bShift\\b/i, \"Shift\")\n    .replace(/\\b(Enter|Return)\\b/i, \"Enter\")\n    .replace(/\\bDel\\b/i, \"Delete\");\n\n  if (isDarwin) {\n    return shortcut\n      .replace(/\\bCtrlOrCmd\\b/i, \"Cmd\")\n      .replace(/\\bAlt\\b/i, \"Option\");\n  }\n  return shortcut.replace(/\\bCtrlOrCmd\\b/i, \"Ctrl\");\n};\n\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY }: { clientX: number; clientY: number },\n  {\n    zoom,\n    offsetLeft,\n    offsetTop,\n    scrollX,\n    scrollY,\n  }: {\n    zoom: Zoom;\n    offsetLeft: number;\n    offsetTop: number;\n    scrollX: number;\n    scrollY: number;\n  },\n) => {\n  const invScale = 1 / zoom.value;\n  const x = (clientX - offsetLeft) * invScale - scrollX;\n  const y = (clientY - offsetTop) * invScale - scrollY;\n\n  return { x, y };\n};\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY }: { sceneX: number; sceneY: number },\n  {\n    zoom,\n    offsetLeft,\n    offsetTop,\n    scrollX,\n    scrollY,\n  }: {\n    zoom: Zoom;\n    offsetLeft: number;\n    offsetTop: number;\n    scrollX: number;\n    scrollY: number;\n  },\n) => {\n  const x = (sceneX + scrollX) * zoom.value + offsetLeft;\n  const y = (sceneY + scrollY) * zoom.value + offsetTop;\n  return { x, y };\n};\n\nexport const getGlobalCSSVariable = (name: string) =>\n  getComputedStyle(document.documentElement).getPropertyValue(`--${name}`);\n\nconst RS_LTR_CHARS =\n  \"A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\" +\n  \"\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF\";\nconst RS_RTL_CHARS = \"\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC\";\nconst RE_RTL_CHECK = new RegExp(`^[^${RS_LTR_CHARS}]*[${RS_RTL_CHARS}]`);\n/**\n * Checks whether first directional character is RTL. Meaning whether it starts\n *  with RTL characters, or indeterminate (numbers etc.) characters followed by\n *  RTL.\n * See https://github.com/excalidraw/excalidraw/pull/1722#discussion_r436340171\n */\nexport const isRTL = (text: string) => RE_RTL_CHECK.test(text);\n\nexport const tupleToCoors = (\n  xyTuple: readonly [number, number],\n): { x: number; y: number } => {\n  const [x, y] = xyTuple;\n  return { x, y };\n};\n\n/** use as a rejectionHandler to mute filesystem Abort errors */\nexport const muteFSAbortError = (error?: Error) => {\n  if (error?.name === \"AbortError\") {\n    console.warn(error);\n    return;\n  }\n  throw error;\n};\n\nexport const findIndex = <T>(\n  array: readonly T[],\n  cb: (element: T, index: number, array: readonly T[]) => boolean,\n  fromIndex: number = 0,\n) => {\n  if (fromIndex < 0) {\n    fromIndex = array.length + fromIndex;\n  }\n  fromIndex = Math.min(array.length, Math.max(fromIndex, 0));\n  let index = fromIndex - 1;\n  while (++index < array.length) {\n    if (cb(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n};\n\nexport const findLastIndex = <T>(\n  array: readonly T[],\n  cb: (element: T, index: number, array: readonly T[]) => boolean,\n  fromIndex: number = array.length - 1,\n) => {\n  if (fromIndex < 0) {\n    fromIndex = array.length + fromIndex;\n  }\n  fromIndex = Math.min(array.length - 1, Math.max(fromIndex, 0));\n  let index = fromIndex + 1;\n  while (--index > -1) {\n    if (cb(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n};\n\nexport const isTransparent = (color: string) => {\n  const isRGBTransparent = color.length === 5 && color.substr(4, 1) === \"0\";\n  const isRRGGBBTransparent = color.length === 9 && color.substr(7, 2) === \"00\";\n  return (\n    isRGBTransparent ||\n    isRRGGBBTransparent ||\n    color === colors.elementBackground[0]\n  );\n};\n\nexport type ResolvablePromise<T> = Promise<T> & {\n  resolve: [T] extends [undefined] ? (value?: T) => void : (value: T) => void;\n  reject: (error: Error) => void;\n};\nexport const resolvablePromise = <T>() => {\n  let resolve!: any;\n  let reject!: any;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  (promise as any).resolve = resolve;\n  (promise as any).reject = reject;\n  return promise as ResolvablePromise<T>;\n};\n\n/**\n * @param func handler taking at most single parameter (event).\n */\nexport const withBatchedUpdates = <\n  TFunction extends ((event: any) => void) | (() => void),\n>(\n  func: Parameters<TFunction>[\"length\"] extends 0 | 1 ? TFunction : never,\n) =>\n  ((event) => {\n    unstable_batchedUpdates(func as TFunction, event);\n  }) as TFunction;\n\n/**\n * barches React state updates and throttles the calls to a single call per\n * animation frame\n */\nexport const withBatchedUpdatesThrottled = <\n  TFunction extends ((event: any) => void) | (() => void),\n>(\n  func: Parameters<TFunction>[\"length\"] extends 0 | 1 ? TFunction : never,\n) => {\n  // @ts-ignore\n  return throttleRAF<Parameters<TFunction>>(((event) => {\n    unstable_batchedUpdates(func, event);\n  }) as TFunction);\n};\n\n//https://stackoverflow.com/a/9462382/8418\nexport const nFormatter = (num: number, digits: number): string => {\n  const si = [\n    { value: 1, symbol: \"b\" },\n    { value: 1e3, symbol: \"k\" },\n    { value: 1e6, symbol: \"M\" },\n    { value: 1e9, symbol: \"G\" },\n  ];\n  const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  let index;\n  for (index = si.length - 1; index > 0; index--) {\n    if (num >= si[index].value) {\n      break;\n    }\n  }\n  return (\n    (num / si[index].value).toFixed(digits).replace(rx, \"$1\") + si[index].symbol\n  );\n};\n\nexport const getVersion = () => {\n  return (\n    document.querySelector<HTMLMetaElement>('meta[name=\"version\"]')?.content ||\n    DEFAULT_VERSION\n  );\n};\n\n// Adapted from https://github.com/Modernizr/Modernizr/blob/master/feature-detects/emoji.js\nexport const supportsEmoji = () => {\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) {\n    return false;\n  }\n  const offset = 12;\n  ctx.fillStyle = \"#f00\";\n  ctx.textBaseline = \"top\";\n  ctx.font = \"32px Arial\";\n  // Modernizr used 🐨, but it is sort of supported on Windows 7.\n  // Luckily 😀 isn't supported.\n  ctx.fillText(\"😀\", 0, 0);\n  return ctx.getImageData(offset, offset, 1, 1).data[0] !== 0;\n};\n\nexport const getNearestScrollableContainer = (\n  element: HTMLElement,\n): HTMLElement | Document => {\n  let parent = element.parentElement;\n  while (parent) {\n    if (parent === document.body) {\n      return document;\n    }\n    const { overflowY } = window.getComputedStyle(parent);\n    const hasScrollableContent = parent.scrollHeight > parent.clientHeight;\n    if (\n      hasScrollableContent &&\n      (overflowY === \"auto\" ||\n        overflowY === \"scroll\" ||\n        overflowY === \"overlay\")\n    ) {\n      return parent;\n    }\n    parent = parent.parentElement;\n  }\n  return document;\n};\n\nexport const focusNearestParent = (element: HTMLInputElement) => {\n  let parent = element.parentElement;\n  while (parent) {\n    if (parent.tabIndex > -1) {\n      parent.focus();\n      return;\n    }\n    parent = parent.parentElement;\n  }\n};\n\nexport const preventUnload = (event: BeforeUnloadEvent) => {\n  event.preventDefault();\n  // NOTE: modern browsers no longer allow showing a custom message here\n  event.returnValue = \"\";\n};\n\nexport const bytesToHexString = (bytes: Uint8Array) => {\n  return Array.from(bytes)\n    .map((byte) => `0${byte.toString(16)}`.slice(-2))\n    .join(\"\");\n};\n\nexport const getUpdatedTimestamp = () => (isTestEnv() ? 1 : Date.now());\n\n/**\n * Transforms array of objects containing `id` attribute,\n * or array of ids (strings), into a Map, keyd by `id`.\n */\nexport const arrayToMap = <T extends { id: string } | string>(\n  items: readonly T[],\n) => {\n  return items.reduce((acc: Map<string, T>, element) => {\n    acc.set(typeof element === \"string\" ? element : element.id, element);\n    return acc;\n  }, new Map());\n};\n\nexport const isTestEnv = () =>\n  typeof process !== \"undefined\" && process.env?.NODE_ENV === \"test\";\n\nexport const wrapEvent = <T extends Event>(name: EVENT, nativeEvent: T) => {\n  return new CustomEvent(name, {\n    detail: {\n      nativeEvent,\n    },\n    cancelable: true,\n  });\n};\n","export const isDarwin = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\nexport const isWindows = /^Win/.test(window.navigator.platform);\nexport const isAndroid = /\\b(android)\\b/i.test(navigator.userAgent);\n\nexport const CODES = {\n  EQUAL: \"Equal\",\n  MINUS: \"Minus\",\n  NUM_ADD: \"NumpadAdd\",\n  NUM_SUBTRACT: \"NumpadSubtract\",\n  NUM_ZERO: \"Numpad0\",\n  BRACKET_RIGHT: \"BracketRight\",\n  BRACKET_LEFT: \"BracketLeft\",\n  ONE: \"Digit1\",\n  TWO: \"Digit2\",\n  NINE: \"Digit9\",\n  QUOTE: \"Quote\",\n  ZERO: \"Digit0\",\n  SLASH: \"Slash\",\n  C: \"KeyC\",\n  D: \"KeyD\",\n  G: \"KeyG\",\n  F: \"KeyF\",\n  H: \"KeyH\",\n  V: \"KeyV\",\n  X: \"KeyX\",\n  Z: \"KeyZ\",\n  R: \"KeyR\",\n} as const;\n\nexport const KEYS = {\n  ARROW_DOWN: \"ArrowDown\",\n  ARROW_LEFT: \"ArrowLeft\",\n  ARROW_RIGHT: \"ArrowRight\",\n  ARROW_UP: \"ArrowUp\",\n  BACKSPACE: \"Backspace\",\n  ALT: \"Alt\",\n  CTRL_OR_CMD: isDarwin ? \"metaKey\" : \"ctrlKey\",\n  DELETE: \"Delete\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  QUESTION_MARK: \"?\",\n  SPACE: \" \",\n  TAB: \"Tab\",\n  CHEVRON_LEFT: \"<\",\n  CHEVRON_RIGHT: \">\",\n  PERIOD: \".\",\n  COMMA: \",\",\n\n  A: \"a\",\n  D: \"d\",\n  E: \"e\",\n  G: \"g\",\n  I: \"i\",\n  L: \"l\",\n  O: \"o\",\n  P: \"p\",\n  Q: \"q\",\n  R: \"r\",\n  S: \"s\",\n  T: \"t\",\n  V: \"v\",\n  X: \"x\",\n  Y: \"y\",\n  Z: \"z\",\n  K: \"k\",\n} as const;\n\nexport type Key = keyof typeof KEYS;\n\nexport const isArrowKey = (key: string) =>\n  key === KEYS.ARROW_LEFT ||\n  key === KEYS.ARROW_RIGHT ||\n  key === KEYS.ARROW_DOWN ||\n  key === KEYS.ARROW_UP;\n\nexport const shouldResizeFromCenter = (event: MouseEvent | KeyboardEvent) =>\n  event.altKey;\n\nexport const shouldMaintainAspectRatio = (event: MouseEvent | KeyboardEvent) =>\n  event.shiftKey;\n\nexport const shouldRotateWithDiscreteAngle = (\n  event: MouseEvent | KeyboardEvent,\n) => event.shiftKey;\n","export const trackEvent =\n  typeof process !== \"undefined\" &&\n  process.env?.REACT_APP_GOOGLE_ANALYTICS_ID &&\n  typeof window !== \"undefined\" &&\n  window.gtag\n    ? (category: string, action: string, label?: string, value?: number) => {\n        window.gtag(\"event\", action, {\n          event_category: category,\n          event_label: label,\n          value,\n        });\n      }\n    : typeof process !== \"undefined\" && process.env?.JEST_WORKER_ID\n    ? (category: string, action: string, label?: string, value?: number) => {}\n    : (category: string, action: string, label?: string, value?: number) => {\n        // Uncomment the next line to track locally\n        // console.info(\"Track Event\", category, action, label, value);\n      };\n","import { ENCRYPTION_KEY_BITS } from \"../constants\";\n\nexport const IV_LENGTH_BYTES = 12;\n\nexport const createIV = () => {\n  const arr = new Uint8Array(IV_LENGTH_BYTES);\n  return window.crypto.getRandomValues(arr);\n};\n\nexport const generateEncryptionKey = async <\n  T extends \"string\" | \"cryptoKey\" = \"string\",\n>(\n  returnAs?: T,\n): Promise<T extends \"cryptoKey\" ? CryptoKey : string> => {\n  const key = await window.crypto.subtle.generateKey(\n    {\n      name: \"AES-GCM\",\n      length: ENCRYPTION_KEY_BITS,\n    },\n    true, // extractable\n    [\"encrypt\", \"decrypt\"],\n  );\n  return (\n    returnAs === \"cryptoKey\"\n      ? key\n      : (await window.crypto.subtle.exportKey(\"jwk\", key)).k\n  ) as T extends \"cryptoKey\" ? CryptoKey : string;\n};\n\nexport const getCryptoKey = (key: string, usage: KeyUsage) =>\n  window.crypto.subtle.importKey(\n    \"jwk\",\n    {\n      alg: \"A128GCM\",\n      ext: true,\n      k: key,\n      key_ops: [\"encrypt\", \"decrypt\"],\n      kty: \"oct\",\n    },\n    {\n      name: \"AES-GCM\",\n      length: ENCRYPTION_KEY_BITS,\n    },\n    false, // extractable\n    [usage],\n  );\n\nexport const encryptData = async (\n  key: string | CryptoKey,\n  data: Uint8Array | ArrayBuffer | Blob | File | string,\n): Promise<{ encryptedBuffer: ArrayBuffer; iv: Uint8Array }> => {\n  const importedKey =\n    typeof key === \"string\" ? await getCryptoKey(key, \"encrypt\") : key;\n  const iv = createIV();\n  const buffer: ArrayBuffer | Uint8Array =\n    typeof data === \"string\"\n      ? new TextEncoder().encode(data)\n      : data instanceof Uint8Array\n      ? data\n      : data instanceof Blob\n      ? await data.arrayBuffer()\n      : data;\n\n  // We use symmetric encryption. AES-GCM is the recommended algorithm and\n  // includes checks that the ciphertext has not been modified by an attacker.\n  const encryptedBuffer = await window.crypto.subtle.encrypt(\n    {\n      name: \"AES-GCM\",\n      iv,\n    },\n    importedKey,\n    buffer as ArrayBuffer | Uint8Array,\n  );\n\n  return { encryptedBuffer, iv };\n};\n\nexport const decryptData = async (\n  iv: Uint8Array,\n  encrypted: Uint8Array | ArrayBuffer,\n  privateKey: string,\n): Promise<ArrayBuffer> => {\n  const key = await getCryptoKey(privateKey, \"decrypt\");\n  return window.crypto.subtle.decrypt(\n    {\n      name: \"AES-GCM\",\n      iv,\n    },\n    key,\n    encrypted,\n  );\n};\n","import oc from \"open-color\";\n\nconst shades = (index: number) => [\n  oc.red[index],\n  oc.pink[index],\n  oc.grape[index],\n  oc.violet[index],\n  oc.indigo[index],\n  oc.blue[index],\n  oc.cyan[index],\n  oc.teal[index],\n  oc.green[index],\n  oc.lime[index],\n  oc.yellow[index],\n  oc.orange[index],\n];\n\nexport default {\n  canvasBackground: [oc.white, oc.gray[0], oc.gray[1], ...shades(0)],\n  elementBackground: [\"transparent\", oc.gray[4], oc.gray[6], ...shades(6)],\n  elementStroke: [oc.black, oc.gray[8], oc.gray[7], ...shades(9)],\n};\n","import { deflate, inflate } from \"pako\";\nimport { encryptData, decryptData } from \"./encryption\";\n\n// -----------------------------------------------------------------------------\n// byte (binary) strings\n// -----------------------------------------------------------------------------\n\n// fast, Buffer-compatible implem\nexport const toByteString = (\n  data: string | Uint8Array | ArrayBuffer,\n): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    const blob =\n      typeof data === \"string\"\n        ? new Blob([new TextEncoder().encode(data)])\n        : new Blob([data instanceof Uint8Array ? data : new Uint8Array(data)]);\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      if (!event.target || typeof event.target.result !== \"string\") {\n        return reject(new Error(\"couldn't convert to byte string\"));\n      }\n      resolve(event.target.result);\n    };\n    reader.readAsBinaryString(blob);\n  });\n};\n\nconst byteStringToArrayBuffer = (byteString: string) => {\n  const buffer = new ArrayBuffer(byteString.length);\n  const bufferView = new Uint8Array(buffer);\n  for (let i = 0, len = byteString.length; i < len; i++) {\n    bufferView[i] = byteString.charCodeAt(i);\n  }\n  return buffer;\n};\n\nconst byteStringToString = (byteString: string) => {\n  return new TextDecoder(\"utf-8\").decode(byteStringToArrayBuffer(byteString));\n};\n\n// -----------------------------------------------------------------------------\n// base64\n// -----------------------------------------------------------------------------\n\n/**\n * @param isByteString set to true if already byte string to prevent bloat\n *  due to reencoding\n */\nexport const stringToBase64 = async (str: string, isByteString = false) => {\n  return isByteString ? window.btoa(str) : window.btoa(await toByteString(str));\n};\n\n// async to align with stringToBase64\nexport const base64ToString = async (base64: string, isByteString = false) => {\n  return isByteString\n    ? window.atob(base64)\n    : byteStringToString(window.atob(base64));\n};\n\n// -----------------------------------------------------------------------------\n// text encoding\n// -----------------------------------------------------------------------------\n\ntype EncodedData = {\n  encoded: string;\n  encoding: \"bstring\";\n  /** whether text is compressed (zlib) */\n  compressed: boolean;\n  /** version for potential migration purposes */\n  version?: string;\n};\n\n/**\n * Encodes (and potentially compresses via zlib) text to byte string\n */\nexport const encode = async ({\n  text,\n  compress,\n}: {\n  text: string;\n  /** defaults to `true`. If compression fails, falls back to bstring alone. */\n  compress?: boolean;\n}): Promise<EncodedData> => {\n  let deflated!: string;\n  if (compress !== false) {\n    try {\n      deflated = await toByteString(deflate(text));\n    } catch (error: any) {\n      console.error(\"encode: cannot deflate\", error);\n    }\n  }\n  return {\n    version: \"1\",\n    encoding: \"bstring\",\n    compressed: !!deflated,\n    encoded: deflated || (await toByteString(text)),\n  };\n};\n\nexport const decode = async (data: EncodedData): Promise<string> => {\n  let decoded: string;\n\n  switch (data.encoding) {\n    case \"bstring\":\n      // if compressed, do not double decode the bstring\n      decoded = data.compressed\n        ? data.encoded\n        : await byteStringToString(data.encoded);\n      break;\n    default:\n      throw new Error(`decode: unknown encoding \"${data.encoding}\"`);\n  }\n\n  if (data.compressed) {\n    return inflate(new Uint8Array(byteStringToArrayBuffer(decoded)), {\n      to: \"string\",\n    });\n  }\n\n  return decoded;\n};\n\n// -----------------------------------------------------------------------------\n// binary encoding\n// -----------------------------------------------------------------------------\n\ntype FileEncodingInfo = {\n  /* version 2 is the version we're shipping the initial image support with.\n    version 1 was a PR version that a lot of people were using anyway.\n    Thus, if there are issues we can check whether they're not using the\n    unoffic version */\n  version: 1 | 2;\n  compression: \"pako@1\" | null;\n  encryption: \"AES-GCM\" | null;\n};\n\n// -----------------------------------------------------------------------------\nconst CONCAT_BUFFERS_VERSION = 1;\n/** how many bytes we use to encode how many bytes the next chunk has.\n * Corresponds to DataView setter methods (setUint32, setUint16, etc).\n *\n * NOTE ! values must not be changed, which would be backwards incompatible !\n */\nconst VERSION_DATAVIEW_BYTES = 4;\nconst NEXT_CHUNK_SIZE_DATAVIEW_BYTES = 4;\n// -----------------------------------------------------------------------------\n\nconst DATA_VIEW_BITS_MAP = { 1: 8, 2: 16, 4: 32 } as const;\n\n// getter\nfunction dataView(buffer: Uint8Array, bytes: 1 | 2 | 4, offset: number): number;\n// setter\nfunction dataView(\n  buffer: Uint8Array,\n  bytes: 1 | 2 | 4,\n  offset: number,\n  value: number,\n): Uint8Array;\n/**\n * abstraction over DataView that serves as a typed getter/setter in case\n * you're using constants for the byte size and want to ensure there's no\n * discrepenancy in the encoding across refactors.\n *\n * DataView serves for an endian-agnostic handling of numbers in ArrayBuffers.\n */\nfunction dataView(\n  buffer: Uint8Array,\n  bytes: 1 | 2 | 4,\n  offset: number,\n  value?: number,\n): Uint8Array | number {\n  if (value != null) {\n    if (value > Math.pow(2, DATA_VIEW_BITS_MAP[bytes]) - 1) {\n      throw new Error(\n        `attempting to set value higher than the allocated bytes (value: ${value}, bytes: ${bytes})`,\n      );\n    }\n    const method = `setUint${DATA_VIEW_BITS_MAP[bytes]}` as const;\n    new DataView(buffer.buffer)[method](offset, value);\n    return buffer;\n  }\n  const method = `getUint${DATA_VIEW_BITS_MAP[bytes]}` as const;\n  return new DataView(buffer.buffer)[method](offset);\n}\n\n// -----------------------------------------------------------------------------\n\n/**\n * Resulting concatenated buffer has this format:\n *\n * [\n *   VERSION chunk (4 bytes)\n *   LENGTH chunk 1 (4 bytes)\n *   DATA chunk 1 (up to 2^32 bits)\n *   LENGTH chunk 2 (4 bytes)\n *   DATA chunk 2 (up to 2^32 bits)\n *   ...\n * ]\n *\n * @param buffers each buffer (chunk) must be at most 2^32 bits large (~4GB)\n */\nconst concatBuffers = (...buffers: Uint8Array[]) => {\n  const bufferView = new Uint8Array(\n    VERSION_DATAVIEW_BYTES +\n      NEXT_CHUNK_SIZE_DATAVIEW_BYTES * buffers.length +\n      buffers.reduce((acc, buffer) => acc + buffer.byteLength, 0),\n  );\n\n  let cursor = 0;\n\n  // as the first chunk we'll encode the version for backwards compatibility\n  dataView(bufferView, VERSION_DATAVIEW_BYTES, cursor, CONCAT_BUFFERS_VERSION);\n  cursor += VERSION_DATAVIEW_BYTES;\n\n  for (const buffer of buffers) {\n    dataView(\n      bufferView,\n      NEXT_CHUNK_SIZE_DATAVIEW_BYTES,\n      cursor,\n      buffer.byteLength,\n    );\n    cursor += NEXT_CHUNK_SIZE_DATAVIEW_BYTES;\n\n    bufferView.set(buffer, cursor);\n    cursor += buffer.byteLength;\n  }\n\n  return bufferView;\n};\n\n/** can only be used on buffers created via `concatBuffers()` */\nconst splitBuffers = (concatenatedBuffer: Uint8Array) => {\n  const buffers = [];\n\n  let cursor = 0;\n\n  // first chunk is the version\n  const version = dataView(\n    concatenatedBuffer,\n    NEXT_CHUNK_SIZE_DATAVIEW_BYTES,\n    cursor,\n  );\n  // If version is outside of the supported versions, throw an error.\n  // This usually means the buffer wasn't encoded using this API, so we'd only\n  // waste compute.\n  if (version > CONCAT_BUFFERS_VERSION) {\n    throw new Error(`invalid version ${version}`);\n  }\n\n  cursor += VERSION_DATAVIEW_BYTES;\n\n  while (true) {\n    const chunkSize = dataView(\n      concatenatedBuffer,\n      NEXT_CHUNK_SIZE_DATAVIEW_BYTES,\n      cursor,\n    );\n    cursor += NEXT_CHUNK_SIZE_DATAVIEW_BYTES;\n\n    buffers.push(concatenatedBuffer.slice(cursor, cursor + chunkSize));\n    cursor += chunkSize;\n    if (cursor >= concatenatedBuffer.byteLength) {\n      break;\n    }\n  }\n\n  return buffers;\n};\n\n// helpers for (de)compressing data with JSON metadata including encryption\n// -----------------------------------------------------------------------------\n\n/** @private */\nconst _encryptAndCompress = async (\n  data: Uint8Array | string,\n  encryptionKey: string,\n) => {\n  const { encryptedBuffer, iv } = await encryptData(\n    encryptionKey,\n    deflate(data),\n  );\n\n  return { iv, buffer: new Uint8Array(encryptedBuffer) };\n};\n\n/**\n * The returned buffer has following format:\n * `[]` refers to a buffers wrapper (see `concatBuffers`)\n *\n * [\n *   encodingMetadataBuffer,\n *   iv,\n *   [\n *      contentsMetadataBuffer\n *      contentsBuffer\n *   ]\n * ]\n */\nexport const compressData = async <T extends Record<string, any> = never>(\n  dataBuffer: Uint8Array,\n  options: {\n    encryptionKey: string;\n  } & ([T] extends [never]\n    ? {\n        metadata?: T;\n      }\n    : {\n        metadata: T;\n      }),\n): Promise<Uint8Array> => {\n  const fileInfo: FileEncodingInfo = {\n    version: 2,\n    compression: \"pako@1\",\n    encryption: \"AES-GCM\",\n  };\n\n  const encodingMetadataBuffer = new TextEncoder().encode(\n    JSON.stringify(fileInfo),\n  );\n\n  const contentsMetadataBuffer = new TextEncoder().encode(\n    JSON.stringify(options.metadata || null),\n  );\n\n  const { iv, buffer } = await _encryptAndCompress(\n    concatBuffers(contentsMetadataBuffer, dataBuffer),\n    options.encryptionKey,\n  );\n\n  return concatBuffers(encodingMetadataBuffer, iv, buffer);\n};\n\n/** @private */\nconst _decryptAndDecompress = async (\n  iv: Uint8Array,\n  decryptedBuffer: Uint8Array,\n  decryptionKey: string,\n  isCompressed: boolean,\n) => {\n  decryptedBuffer = new Uint8Array(\n    await decryptData(iv, decryptedBuffer, decryptionKey),\n  );\n\n  if (isCompressed) {\n    return inflate(decryptedBuffer);\n  }\n\n  return decryptedBuffer;\n};\n\nexport const decompressData = async <T extends Record<string, any>>(\n  bufferView: Uint8Array,\n  options: { decryptionKey: string },\n) => {\n  // first chunk is encoding metadata (ignored for now)\n  const [encodingMetadataBuffer, iv, buffer] = splitBuffers(bufferView);\n\n  const encodingMetadata: FileEncodingInfo = JSON.parse(\n    new TextDecoder().decode(encodingMetadataBuffer),\n  );\n\n  try {\n    const [contentsMetadataBuffer, contentsBuffer] = splitBuffers(\n      await _decryptAndDecompress(\n        iv,\n        buffer,\n        options.decryptionKey,\n        !!encodingMetadata.compression,\n      ),\n    );\n\n    const metadata = JSON.parse(\n      new TextDecoder().decode(contentsMetadataBuffer),\n    ) as T;\n\n    return {\n      /** metadata source is always JSON so we can decode it here */\n      metadata,\n      /** data can be anything so the caller must decode it */\n      data: contentsBuffer,\n    };\n  } catch (error: any) {\n    console.error(\n      `Error during decompressing and decrypting the file.`,\n      encodingMetadata,\n    );\n    throw error;\n  }\n};\n\n// -----------------------------------------------------------------------------\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeFilter\":\"invert(93%) hue-rotate(180deg)\"};","var map = {\n\t\"./ar-SA.json\": [\n\t\t138,\n\t\t4\n\t],\n\t\"./bg-BG.json\": [\n\t\t139,\n\t\t5\n\t],\n\t\"./bn-BD.json\": [\n\t\t140,\n\t\t6\n\t],\n\t\"./ca-ES.json\": [\n\t\t141,\n\t\t7\n\t],\n\t\"./cs-CZ.json\": [\n\t\t142,\n\t\t8\n\t],\n\t\"./da-DK.json\": [\n\t\t143,\n\t\t9\n\t],\n\t\"./de-DE.json\": [\n\t\t144,\n\t\t10\n\t],\n\t\"./el-GR.json\": [\n\t\t145,\n\t\t11\n\t],\n\t\"./en.json\": [\n\t\t62\n\t],\n\t\"./es-ES.json\": [\n\t\t146,\n\t\t12\n\t],\n\t\"./eu-ES.json\": [\n\t\t147,\n\t\t13\n\t],\n\t\"./fa-IR.json\": [\n\t\t148,\n\t\t14\n\t],\n\t\"./fi-FI.json\": [\n\t\t149,\n\t\t15\n\t],\n\t\"./fr-FR.json\": [\n\t\t150,\n\t\t16\n\t],\n\t\"./he-IL.json\": [\n\t\t151,\n\t\t17\n\t],\n\t\"./hi-IN.json\": [\n\t\t152,\n\t\t18\n\t],\n\t\"./hu-HU.json\": [\n\t\t153,\n\t\t19\n\t],\n\t\"./id-ID.json\": [\n\t\t154,\n\t\t20\n\t],\n\t\"./it-IT.json\": [\n\t\t155,\n\t\t21\n\t],\n\t\"./ja-JP.json\": [\n\t\t156,\n\t\t22\n\t],\n\t\"./kab-KAB.json\": [\n\t\t157,\n\t\t23\n\t],\n\t\"./kk-KZ.json\": [\n\t\t158,\n\t\t24\n\t],\n\t\"./ko-KR.json\": [\n\t\t159,\n\t\t25\n\t],\n\t\"./lt-LT.json\": [\n\t\t160,\n\t\t26\n\t],\n\t\"./lv-LV.json\": [\n\t\t161,\n\t\t27\n\t],\n\t\"./mr-IN.json\": [\n\t\t162,\n\t\t28\n\t],\n\t\"./my-MM.json\": [\n\t\t163,\n\t\t29\n\t],\n\t\"./nb-NO.json\": [\n\t\t164,\n\t\t30\n\t],\n\t\"./nl-NL.json\": [\n\t\t165,\n\t\t31\n\t],\n\t\"./nn-NO.json\": [\n\t\t166,\n\t\t32\n\t],\n\t\"./oc-FR.json\": [\n\t\t167,\n\t\t33\n\t],\n\t\"./pa-IN.json\": [\n\t\t168,\n\t\t34\n\t],\n\t\"./percentages.json\": [\n\t\t63\n\t],\n\t\"./pl-PL.json\": [\n\t\t169,\n\t\t35\n\t],\n\t\"./pt-BR.json\": [\n\t\t170,\n\t\t36\n\t],\n\t\"./pt-PT.json\": [\n\t\t171,\n\t\t37\n\t],\n\t\"./ro-RO.json\": [\n\t\t172,\n\t\t38\n\t],\n\t\"./ru-RU.json\": [\n\t\t173,\n\t\t39\n\t],\n\t\"./si-LK.json\": [\n\t\t174,\n\t\t40\n\t],\n\t\"./sk-SK.json\": [\n\t\t175,\n\t\t41\n\t],\n\t\"./sv-SE.json\": [\n\t\t176,\n\t\t42\n\t],\n\t\"./ta-IN.json\": [\n\t\t177,\n\t\t43\n\t],\n\t\"./tr-TR.json\": [\n\t\t178,\n\t\t44\n\t],\n\t\"./uk-UA.json\": [\n\t\t179,\n\t\t45\n\t],\n\t\"./zh-CN.json\": [\n\t\t180,\n\t\t46\n\t],\n\t\"./zh-HK.json\": [\n\t\t181,\n\t\t47\n\t],\n\t\"./zh-TW.json\": [\n\t\t182,\n\t\t48\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 85;\nmodule.exports = webpackAsyncContext;","import fallbackLangData from \"./locales/en.json\";\nimport percentages from \"./locales/percentages.json\";\nimport { ENV } from \"./constants\";\n\nconst COMPLETION_THRESHOLD = 85;\n\nexport interface Language {\n  code: string;\n  label: string;\n  rtl?: boolean;\n}\n\nexport const defaultLang = { code: \"en\", label: \"English\" };\n\nconst allLanguages: Language[] = [\n  { code: \"ar-SA\", label: \"العربية\", rtl: true },\n  { code: \"bg-BG\", label: \"Български\" },\n  { code: \"ca-ES\", label: \"Català\" },\n  { code: \"cs-CZ\", label: \"Česky\" },\n  { code: \"de-DE\", label: \"Deutsch\" },\n  { code: \"el-GR\", label: \"Ελληνικά\" },\n  { code: \"es-ES\", label: \"Español\" },\n  { code: \"eu-ES\", label: \"Euskara\" },\n  { code: \"fa-IR\", label: \"فارسی\", rtl: true },\n  { code: \"fi-FI\", label: \"Suomi\" },\n  { code: \"fr-FR\", label: \"Français\" },\n  { code: \"he-IL\", label: \"עברית\", rtl: true },\n  { code: \"hi-IN\", label: \"हिन्दी\" },\n  { code: \"hu-HU\", label: \"Magyar\" },\n  { code: \"id-ID\", label: \"Bahasa Indonesia\" },\n  { code: \"it-IT\", label: \"Italiano\" },\n  { code: \"ja-JP\", label: \"日本語\" },\n  { code: \"kab-KAB\", label: \"Taqbaylit\" },\n  { code: \"kk-KZ\", label: \"Қазақ тілі\" },\n  { code: \"ko-KR\", label: \"한국어\" },\n  { code: \"lt-LT\", label: \"Lietuvių\" },\n  { code: \"lv-LV\", label: \"Latviešu\" },\n  { code: \"my-MM\", label: \"Burmese\" },\n  { code: \"nb-NO\", label: \"Norsk bokmål\" },\n  { code: \"nl-NL\", label: \"Nederlands\" },\n  { code: \"nn-NO\", label: \"Norsk nynorsk\" },\n  { code: \"oc-FR\", label: \"Occitan\" },\n  { code: \"pa-IN\", label: \"ਪੰਜਾਬੀ\" },\n  { code: \"pl-PL\", label: \"Polski\" },\n  { code: \"pt-BR\", label: \"Português Brasileiro\" },\n  { code: \"pt-PT\", label: \"Português\" },\n  { code: \"ro-RO\", label: \"Română\" },\n  { code: \"ru-RU\", label: \"Русский\" },\n  { code: \"sk-SK\", label: \"Slovenčina\" },\n  { code: \"sv-SE\", label: \"Svenska\" },\n  { code: \"tr-TR\", label: \"Türkçe\" },\n  { code: \"uk-UA\", label: \"Українська\" },\n  { code: \"zh-CN\", label: \"简体中文\" },\n  { code: \"zh-TW\", label: \"繁體中文\" },\n].concat([defaultLang]);\n\nexport const languages: Language[] = allLanguages\n  .sort((left, right) => (left.label > right.label ? 1 : -1))\n  .filter(\n    (lang) =>\n      (percentages as Record<string, number>)[lang.code] >=\n      COMPLETION_THRESHOLD,\n  );\n\nconst TEST_LANG_CODE = \"__test__\";\nif (process.env.NODE_ENV === ENV.DEVELOPMENT) {\n  languages.unshift(\n    { code: TEST_LANG_CODE, label: \"test language\" },\n    {\n      code: `${TEST_LANG_CODE}.rtl`,\n      label: \"\\u{202a}test language (rtl)\\u{202c}\",\n      rtl: true,\n    },\n  );\n}\n\nlet currentLang: Language = defaultLang;\nlet currentLangData = {};\n\nexport const setLanguage = async (lang: Language) => {\n  currentLang = lang;\n  document.documentElement.dir = currentLang.rtl ? \"rtl\" : \"ltr\";\n  document.documentElement.lang = currentLang.code;\n\n  if (lang.code.startsWith(TEST_LANG_CODE)) {\n    currentLangData = {};\n  } else {\n    currentLangData = await import(\n      /* webpackChunkName: \"i18n-[request]\" */ `./locales/${currentLang.code}.json`\n    );\n  }\n};\n\nexport const getLanguage = () => currentLang;\n\nconst findPartsForData = (data: any, parts: string[]) => {\n  for (let index = 0; index < parts.length; ++index) {\n    const part = parts[index];\n    if (data[part] === undefined) {\n      return undefined;\n    }\n    data = data[part];\n  }\n  if (typeof data !== \"string\") {\n    return undefined;\n  }\n  return data;\n};\n\nexport const t = (\n  path: string,\n  replacement?: { [key: string]: string | number },\n) => {\n  if (currentLang.code.startsWith(TEST_LANG_CODE)) {\n    const name = replacement\n      ? `${path}(${JSON.stringify(replacement).slice(1, -1)})`\n      : path;\n    return `\\u{202a}[[${name}]]\\u{202c}`;\n  }\n\n  const parts = path.split(\".\");\n  let translation =\n    findPartsForData(currentLangData, parts) ||\n    findPartsForData(fallbackLangData, parts);\n  if (translation === undefined) {\n    throw new Error(`Can't find translation for ${path}`);\n  }\n\n  if (replacement) {\n    for (const key in replacement) {\n      translation = translation.replace(`{{${key}}}`, String(replacement[key]));\n    }\n  }\n  return translation;\n};\n","import oc from \"open-color\";\nimport {\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_TEXT_ALIGN,\n  EXPORT_SCALES,\n  THEME,\n} from \"./constants\";\nimport { t } from \"./i18n\";\nimport { AppState, NormalizedZoomValue } from \"./types\";\nimport { getDateTime } from \"./utils\";\n\nconst defaultExportScale = EXPORT_SCALES.includes(devicePixelRatio)\n  ? devicePixelRatio\n  : 1;\n\nexport const getDefaultAppState = (): Omit<\n  AppState,\n  \"offsetTop\" | \"offsetLeft\" | \"width\" | \"height\"\n> => {\n  return {\n    theme: THEME.LIGHT,\n    collaborators: new Map(),\n    currentChartType: \"bar\",\n    currentItemBackgroundColor: \"transparent\",\n    currentItemEndArrowhead: \"arrow\",\n    currentItemFillStyle: \"hachure\",\n    currentItemFontFamily: DEFAULT_FONT_FAMILY,\n    currentItemFontSize: DEFAULT_FONT_SIZE,\n    currentItemLinearStrokeSharpness: \"round\",\n    currentItemOpacity: 100,\n    currentItemRoughness: 1,\n    currentItemStartArrowhead: null,\n    currentItemStrokeColor: oc.black,\n    currentItemStrokeSharpness: \"sharp\",\n    currentItemStrokeStyle: \"solid\",\n    currentItemStrokeWidth: 1,\n    currentItemTextAlign: DEFAULT_TEXT_ALIGN,\n    cursorButton: \"up\",\n    draggingElement: null,\n    editingElement: null,\n    editingGroupId: null,\n    editingLinearElement: null,\n    elementLocked: false,\n    elementType: \"selection\",\n    penMode: false,\n    penDetected: false,\n    errorMessage: null,\n    exportBackground: true,\n    exportScale: defaultExportScale,\n    exportEmbedScene: false,\n    exportWithDarkMode: false,\n    fileHandle: null,\n    gridSize: null,\n    isBindingEnabled: true,\n    isLibraryOpen: false,\n    isLoading: false,\n    isResizing: false,\n    isRotating: false,\n    lastPointerDownWith: \"mouse\",\n    multiElement: null,\n    name: `${t(\"labels.untitled\")}-${getDateTime()}`,\n    openMenu: null,\n    openPopup: null,\n    pasteDialog: { shown: false, data: null },\n    previousSelectedElementIds: {},\n    resizingElement: null,\n    scrolledOutside: false,\n    scrollX: 0,\n    scrollY: 0,\n    selectedElementIds: {},\n    selectedGroupIds: {},\n    selectionElement: null,\n    shouldCacheIgnoreZoom: false,\n    showHelpDialog: false,\n    showStats: false,\n    startBoundElement: null,\n    suggestedBindings: [],\n    toastMessage: null,\n    viewBackgroundColor: oc.white,\n    zenModeEnabled: false,\n    zoom: {\n      value: 1 as NormalizedZoomValue,\n    },\n    viewModeEnabled: false,\n    pendingImageElement: null,\n    showHyperlinkPopup: false,\n  };\n};\n\n/**\n * Config containing all AppState keys. Used to determine whether given state\n *  prop should be stripped when exporting to given storage type.\n */\nconst APP_STATE_STORAGE_CONF = (<\n  Values extends {\n    /** whether to keep when storing to browser storage (localStorage/IDB) */\n    browser: boolean;\n    /** whether to keep when exporting to file/database */\n    export: boolean;\n    /** server (shareLink/collab/...) */\n    server: boolean;\n  },\n  T extends Record<keyof AppState, Values>,\n>(config: { [K in keyof T]: K extends keyof AppState ? T[K] : never }) =>\n  config)({\n  theme: { browser: true, export: false, server: false },\n  collaborators: { browser: false, export: false, server: false },\n  currentChartType: { browser: true, export: false, server: false },\n  currentItemBackgroundColor: { browser: true, export: false, server: false },\n  currentItemEndArrowhead: { browser: true, export: false, server: false },\n  currentItemFillStyle: { browser: true, export: false, server: false },\n  currentItemFontFamily: { browser: true, export: false, server: false },\n  currentItemFontSize: { browser: true, export: false, server: false },\n  currentItemLinearStrokeSharpness: {\n    browser: true,\n    export: false,\n    server: false,\n  },\n  currentItemOpacity: { browser: true, export: false, server: false },\n  currentItemRoughness: { browser: true, export: false, server: false },\n  currentItemStartArrowhead: { browser: true, export: false, server: false },\n  currentItemStrokeColor: { browser: true, export: false, server: false },\n  currentItemStrokeSharpness: { browser: true, export: false, server: false },\n  currentItemStrokeStyle: { browser: true, export: false, server: false },\n  currentItemStrokeWidth: { browser: true, export: false, server: false },\n  currentItemTextAlign: { browser: true, export: false, server: false },\n  cursorButton: { browser: true, export: false, server: false },\n  draggingElement: { browser: false, export: false, server: false },\n  editingElement: { browser: false, export: false, server: false },\n  editingGroupId: { browser: true, export: false, server: false },\n  editingLinearElement: { browser: false, export: false, server: false },\n  elementLocked: { browser: true, export: false, server: false },\n  elementType: { browser: true, export: false, server: false },\n  penMode: { browser: false, export: false, server: false },\n  penDetected: { browser: false, export: false, server: false },\n  errorMessage: { browser: false, export: false, server: false },\n  exportBackground: { browser: true, export: false, server: false },\n  exportEmbedScene: { browser: true, export: false, server: false },\n  exportScale: { browser: true, export: false, server: false },\n  exportWithDarkMode: { browser: true, export: false, server: false },\n  fileHandle: { browser: false, export: false, server: false },\n  gridSize: { browser: true, export: true, server: true },\n  height: { browser: false, export: false, server: false },\n  isBindingEnabled: { browser: false, export: false, server: false },\n  isLibraryOpen: { browser: false, export: false, server: false },\n  isLoading: { browser: false, export: false, server: false },\n  isResizing: { browser: false, export: false, server: false },\n  isRotating: { browser: false, export: false, server: false },\n  lastPointerDownWith: { browser: true, export: false, server: false },\n  multiElement: { browser: false, export: false, server: false },\n  name: { browser: true, export: false, server: false },\n  offsetLeft: { browser: false, export: false, server: false },\n  offsetTop: { browser: false, export: false, server: false },\n  openMenu: { browser: true, export: false, server: false },\n  openPopup: { browser: false, export: false, server: false },\n  pasteDialog: { browser: false, export: false, server: false },\n  previousSelectedElementIds: { browser: true, export: false, server: false },\n  resizingElement: { browser: false, export: false, server: false },\n  scrolledOutside: { browser: true, export: false, server: false },\n  scrollX: { browser: true, export: false, server: false },\n  scrollY: { browser: true, export: false, server: false },\n  selectedElementIds: { browser: true, export: false, server: false },\n  selectedGroupIds: { browser: true, export: false, server: false },\n  selectionElement: { browser: false, export: false, server: false },\n  shouldCacheIgnoreZoom: { browser: true, export: false, server: false },\n  showHelpDialog: { browser: false, export: false, server: false },\n  showStats: { browser: true, export: false, server: false },\n  startBoundElement: { browser: false, export: false, server: false },\n  suggestedBindings: { browser: false, export: false, server: false },\n  toastMessage: { browser: false, export: false, server: false },\n  viewBackgroundColor: { browser: true, export: true, server: true },\n  width: { browser: false, export: false, server: false },\n  zenModeEnabled: { browser: true, export: false, server: false },\n  zoom: { browser: true, export: false, server: false },\n  viewModeEnabled: { browser: false, export: false, server: false },\n  pendingImageElement: { browser: false, export: false, server: false },\n  showHyperlinkPopup: { browser: false, export: false, server: false },\n});\n\nconst _clearAppStateForStorage = <\n  ExportType extends \"export\" | \"browser\" | \"server\",\n>(\n  appState: Partial<AppState>,\n  exportType: ExportType,\n) => {\n  type ExportableKeys = {\n    [K in keyof typeof APP_STATE_STORAGE_CONF]: typeof APP_STATE_STORAGE_CONF[K][ExportType] extends true\n      ? K\n      : never;\n  }[keyof typeof APP_STATE_STORAGE_CONF];\n  const stateForExport = {} as { [K in ExportableKeys]?: typeof appState[K] };\n  for (const key of Object.keys(appState) as (keyof typeof appState)[]) {\n    const propConfig = APP_STATE_STORAGE_CONF[key];\n    if (propConfig?.[exportType]) {\n      const nextValue = appState[key];\n\n      // https://github.com/microsoft/TypeScript/issues/31445\n      (stateForExport as any)[key] = nextValue;\n    }\n  }\n  return stateForExport;\n};\n\nexport const clearAppStateForLocalStorage = (appState: Partial<AppState>) => {\n  return _clearAppStateForStorage(appState, \"browser\");\n};\n\nexport const cleanAppStateForExport = (appState: Partial<AppState>) => {\n  return _clearAppStateForStorage(appState, \"export\");\n};\n\nexport const clearAppStateForDatabase = (appState: Partial<AppState>) => {\n  return _clearAppStateForStorage(appState, \"server\");\n};\n\nexport const isEraserActive = ({\n  elementType,\n}: {\n  elementType: AppState[\"elementType\"];\n}) => elementType === \"eraser\";\n","import { useCallback, useState } from \"react\";\n\nexport const useCallbackRefState = <T>() => {\n  const [refValue, setRefValue] = useState<T | null>(null);\n  const refCallback = useCallback((value: T | null) => setRefValue(value), []);\n  return [refValue, refCallback] as const;\n};\n","import { AppState } from \"../types\";\nimport {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n  ExcalidrawBindableElement,\n  ExcalidrawGenericElement,\n  ExcalidrawFreeDrawElement,\n  InitializedExcalidrawImageElement,\n  ExcalidrawImageElement,\n  ExcalidrawTextElementWithContainer,\n  ExcalidrawTextContainer,\n} from \"./types\";\n\nexport const isGenericElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawGenericElement => {\n  return (\n    element != null &&\n    (element.type === \"selection\" ||\n      element.type === \"rectangle\" ||\n      element.type === \"diamond\" ||\n      element.type === \"ellipse\")\n  );\n};\n\nexport const isInitializedImageElement = (\n  element: ExcalidrawElement | null,\n): element is InitializedExcalidrawImageElement => {\n  return !!element && element.type === \"image\" && !!element.fileId;\n};\n\nexport const isImageElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawImageElement => {\n  return !!element && element.type === \"image\";\n};\n\nexport const isTextElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawTextElement => {\n  return element != null && element.type === \"text\";\n};\n\nexport const isFreeDrawElement = (\n  element?: ExcalidrawElement | null,\n): element is ExcalidrawFreeDrawElement => {\n  return element != null && isFreeDrawElementType(element.type);\n};\n\nexport const isFreeDrawElementType = (\n  elementType: ExcalidrawElement[\"type\"],\n): boolean => {\n  return elementType === \"freedraw\";\n};\n\nexport const isLinearElement = (\n  element?: ExcalidrawElement | null,\n): element is ExcalidrawLinearElement => {\n  return element != null && isLinearElementType(element.type);\n};\n\nexport const isLinearElementType = (\n  elementType: AppState[\"elementType\"],\n): boolean => {\n  return (\n    elementType === \"arrow\" || elementType === \"line\" // || elementType === \"freedraw\"\n  );\n};\n\nexport const isBindingElement = (\n  element?: ExcalidrawElement | null,\n): element is ExcalidrawLinearElement => {\n  return element != null && isBindingElementType(element.type);\n};\n\nexport const isBindingElementType = (\n  elementType: AppState[\"elementType\"],\n): boolean => {\n  return elementType === \"arrow\";\n};\n\nexport const isBindableElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawBindableElement => {\n  return (\n    element != null &&\n    (element.type === \"rectangle\" ||\n      element.type === \"diamond\" ||\n      element.type === \"ellipse\" ||\n      element.type === \"image\" ||\n      (element.type === \"text\" && !element.containerId))\n  );\n};\n\nexport const isTextBindableContainer = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawTextContainer => {\n  return (\n    element != null &&\n    (element.type === \"rectangle\" ||\n      element.type === \"diamond\" ||\n      element.type === \"ellipse\" ||\n      element.type === \"image\")\n  );\n};\n\nexport const isExcalidrawElement = (element: any): boolean => {\n  return (\n    element?.type === \"text\" ||\n    element?.type === \"diamond\" ||\n    element?.type === \"rectangle\" ||\n    element?.type === \"ellipse\" ||\n    element?.type === \"arrow\" ||\n    element?.type === \"freedraw\" ||\n    element?.type === \"line\"\n  );\n};\n\nexport const hasBoundTextElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawBindableElement => {\n  return (\n    isBindableElement(element) &&\n    !!element.boundElements?.some(({ type }) => type === \"text\")\n  );\n};\n\nexport const isBoundToContainer = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawTextElementWithContainer => {\n  return (\n    element !== null && isTextElement(element) && element.containerId !== null\n  );\n};\n","import { NormalizedZoomValue, Point, Zoom } from \"./types\";\nimport { LINE_CONFIRM_THRESHOLD } from \"./constants\";\nimport { ExcalidrawLinearElement } from \"./element/types\";\n\nexport const rotate = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  angle: number,\n): [number, number] =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const rotatePoint = (\n  point: Point,\n  center: Point,\n  angle: number,\n): [number, number] => rotate(point[0], point[1], center[0], center[1], angle);\n\nexport const adjustXYWithRotation = (\n  sides: {\n    n?: boolean;\n    e?: boolean;\n    s?: boolean;\n    w?: boolean;\n  },\n  x: number,\n  y: number,\n  angle: number,\n  deltaX1: number,\n  deltaY1: number,\n  deltaX2: number,\n  deltaY2: number,\n): [number, number] => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  if (sides.e && sides.w) {\n    x += deltaX1 + deltaX2;\n  } else if (sides.e) {\n    x += deltaX1 * (1 + cos);\n    y += deltaX1 * sin;\n    x += deltaX2 * (1 - cos);\n    y += deltaX2 * -sin;\n  } else if (sides.w) {\n    x += deltaX1 * (1 - cos);\n    y += deltaX1 * -sin;\n    x += deltaX2 * (1 + cos);\n    y += deltaX2 * sin;\n  }\n\n  if (sides.n && sides.s) {\n    y += deltaY1 + deltaY2;\n  } else if (sides.n) {\n    x += deltaY1 * sin;\n    y += deltaY1 * (1 - cos);\n    x += deltaY2 * -sin;\n    y += deltaY2 * (1 + cos);\n  } else if (sides.s) {\n    x += deltaY1 * -sin;\n    y += deltaY1 * (1 + cos);\n    x += deltaY2 * sin;\n    y += deltaY2 * (1 - cos);\n  }\n  return [x, y];\n};\n\nexport const getPointOnAPath = (point: Point, path: Point[]) => {\n  const [px, py] = point;\n  const [start, ...other] = path;\n  let [lastX, lastY] = start;\n  let kLine: number = 0;\n  let idx: number = 0;\n\n  // if any item in the array is true, it means that a point is\n  // on some segment of a line based path\n  const retVal = other.some(([x2, y2], i) => {\n    // we always take a line when dealing with line segments\n    const x1 = lastX;\n    const y1 = lastY;\n\n    lastX = x2;\n    lastY = y2;\n\n    // if a point is not within the domain of the line segment\n    // it is not on the line segment\n    if (px < x1 || px > x2) {\n      return false;\n    }\n\n    // check if all points lie on the same line\n    // y1 = kx1 + b, y2 = kx2 + b\n    // y2 - y1 = k(x2 - x2) -> k = (y2 - y1) / (x2 - x1)\n\n    // coefficient for the line (p0, p1)\n    const kL = (y2 - y1) / (x2 - x1);\n\n    // coefficient for the line segment (p0, point)\n    const kP1 = (py - y1) / (px - x1);\n\n    // coefficient for the line segment (point, p1)\n    const kP2 = (py - y2) / (px - x2);\n\n    // because we are basing both lines from the same starting point\n    // the only option for collinearity is having same coefficients\n\n    // using it for floating point comparisons\n    const epsilon = 0.3;\n\n    // if coefficient is more than an arbitrary epsilon,\n    // these lines are nor collinear\n    if (Math.abs(kP1 - kL) > epsilon && Math.abs(kP2 - kL) > epsilon) {\n      return false;\n    }\n\n    // store the coefficient because we are goint to need it\n    kLine = kL;\n    idx = i;\n\n    return true;\n  });\n\n  // Return a coordinate that is always on the line segment\n  if (retVal === true) {\n    return { x: point[0], y: kLine * point[0], segment: idx };\n  }\n\n  return null;\n};\n\nexport const distance2d = (x1: number, y1: number, x2: number, y2: number) => {\n  const xd = x2 - x1;\n  const yd = y2 - y1;\n  return Math.hypot(xd, yd);\n};\n\nexport const centerPoint = (a: Point, b: Point): Point => {\n  return [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n};\n\n// Checks if the first and last point are close enough\n// to be considered a loop\nexport const isPathALoop = (\n  points: ExcalidrawLinearElement[\"points\"],\n  /** supply if you want the loop detection to account for current zoom */\n  zoomValue: Zoom[\"value\"] = 1 as NormalizedZoomValue,\n): boolean => {\n  if (points.length >= 3) {\n    const [first, last] = [points[0], points[points.length - 1]];\n    const distance = distance2d(first[0], first[1], last[0], last[1]);\n\n    // Adjusting LINE_CONFIRM_THRESHOLD to current zoom so that when zoomed in\n    // really close we make the threshold smaller, and vice versa.\n    return distance <= LINE_CONFIRM_THRESHOLD / zoomValue;\n  }\n  return false;\n};\n\n// Draw a line from the point to the right till infiinty\n// Check how many lines of the polygon does this infinite line intersects with\n// If the number of intersections is odd, point is in the polygon\nexport const isPointInPolygon = (\n  points: Point[],\n  x: number,\n  y: number,\n): boolean => {\n  const vertices = points.length;\n\n  // There must be at least 3 vertices in polygon\n  if (vertices < 3) {\n    return false;\n  }\n  const extreme: Point = [Number.MAX_SAFE_INTEGER, y];\n  const p: Point = [x, y];\n  let count = 0;\n  for (let i = 0; i < vertices; i++) {\n    const current = points[i];\n    const next = points[(i + 1) % vertices];\n    if (doSegmentsIntersect(current, next, p, extreme)) {\n      if (orderedColinearOrientation(current, p, next) === 0) {\n        return isPointWithinBounds(current, p, next);\n      }\n      count++;\n    }\n  }\n  // true if count is off\n  return count % 2 === 1;\n};\n\n// Returns whether `q` lies inside the segment/rectangle defined by `p` and `r`.\n// This is an approximation to \"does `q` lie on a segment `pr`\" check.\nconst isPointWithinBounds = (p: Point, q: Point, r: Point) => {\n  return (\n    q[0] <= Math.max(p[0], r[0]) &&\n    q[0] >= Math.min(p[0], r[0]) &&\n    q[1] <= Math.max(p[1], r[1]) &&\n    q[1] >= Math.min(p[1], r[1])\n  );\n};\n\n// For the ordered points p, q, r, return\n// 0 if p, q, r are colinear\n// 1 if Clockwise\n// 2 if counterclickwise\nconst orderedColinearOrientation = (p: Point, q: Point, r: Point) => {\n  const val = (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1]);\n  if (val === 0) {\n    return 0;\n  }\n  return val > 0 ? 1 : 2;\n};\n\n// Check is p1q1 intersects with p2q2\nconst doSegmentsIntersect = (p1: Point, q1: Point, p2: Point, q2: Point) => {\n  const o1 = orderedColinearOrientation(p1, q1, p2);\n  const o2 = orderedColinearOrientation(p1, q1, q2);\n  const o3 = orderedColinearOrientation(p2, q2, p1);\n  const o4 = orderedColinearOrientation(p2, q2, q1);\n\n  if (o1 !== o2 && o3 !== o4) {\n    return true;\n  }\n\n  // p1, q1 and p2 are colinear and p2 lies on segment p1q1\n  if (o1 === 0 && isPointWithinBounds(p1, p2, q1)) {\n    return true;\n  }\n\n  // p1, q1 and p2 are colinear and q2 lies on segment p1q1\n  if (o2 === 0 && isPointWithinBounds(p1, q2, q1)) {\n    return true;\n  }\n\n  // p2, q2 and p1 are colinear and p1 lies on segment p2q2\n  if (o3 === 0 && isPointWithinBounds(p2, p1, q2)) {\n    return true;\n  }\n\n  // p2, q2 and q1 are colinear and q1 lies on segment p2q2\n  if (o4 === 0 && isPointWithinBounds(p2, q1, q2)) {\n    return true;\n  }\n\n  return false;\n};\n\n// TODO: Rounding this point causes some shake when free drawing\nexport const getGridPoint = (\n  x: number,\n  y: number,\n  gridSize: number | null,\n): [number, number] => {\n  if (gridSize) {\n    return [\n      Math.round(x / gridSize) * gridSize,\n      Math.round(y / gridSize) * gridSize,\n    ];\n  }\n  return [x, y];\n};\n","import { Point } from \"./types\";\n\nexport const getSizeFromPoints = (points: readonly Point[]) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nexport const rescalePoints = (\n  dimension: 0 | 1,\n  nextDimensionSize: number,\n  prevPoints: readonly Point[],\n): Point[] => {\n  const prevDimValues = prevPoints.map((point) => point[dimension]);\n  const prevMaxDimension = Math.max(...prevDimValues);\n  const prevMinDimension = Math.min(...prevDimValues);\n  const prevDimensionSize = prevMaxDimension - prevMinDimension;\n\n  const dimensionScaleFactor =\n    prevDimensionSize === 0 ? 1 : nextDimensionSize / prevDimensionSize;\n\n  let nextMinDimension = Infinity;\n\n  const scaledPoints = prevPoints.map(\n    (prevPoint) =>\n      prevPoint.map((value, currentDimension) => {\n        if (currentDimension !== dimension) {\n          return value;\n        }\n        const scaledValue = value * dimensionScaleFactor;\n        nextMinDimension = Math.min(scaledValue, nextMinDimension);\n        return scaledValue;\n      }) as [number, number],\n  );\n\n  if (scaledPoints.length === 2) {\n    // we don't translate two-point lines\n    return scaledPoints;\n  }\n\n  const translation = prevMinDimension - nextMinDimension;\n\n  const nextPoints = scaledPoints.map(\n    (scaledPoint) =>\n      scaledPoint.map((value, currentDimension) => {\n        return currentDimension === dimension ? value + translation : value;\n      }) as [number, number],\n  );\n\n  return nextPoints;\n};\n","import {\n  ExcalidrawElement,\n  ExcalidrawLinearElement,\n  Arrowhead,\n  ExcalidrawFreeDrawElement,\n  NonDeleted,\n} from \"./types\";\nimport { distance2d, rotate } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\nimport { Drawable, Op } from \"roughjs/bin/core\";\nimport { Point } from \"../types\";\nimport {\n  getShapeForElement,\n  generateRoughOptions,\n} from \"../renderer/renderElement\";\nimport { isFreeDrawElement, isLinearElement } from \"./typeChecks\";\nimport { rescalePoints } from \"../points\";\n\n// x and y position of top left corner, x and y position of bottom right corner\nexport type Bounds = readonly [number, number, number, number];\n\n// If the element is created from right to left, the width is going to be negative\n// This set of functions retrieves the absolute position of the 4 points.\nexport const getElementAbsoluteCoords = (\n  element: ExcalidrawElement,\n): Bounds => {\n  if (isFreeDrawElement(element)) {\n    return getFreeDrawElementAbsoluteCoords(element);\n  } else if (isLinearElement(element)) {\n    return getLinearElementAbsoluteCoords(element);\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n  ];\n};\n\nexport const pointRelativeTo = (\n  element: ExcalidrawElement,\n  absoluteCoords: Point,\n): Point => {\n  return [absoluteCoords[0] - element.x, absoluteCoords[1] - element.y];\n};\n\nexport const getDiamondPoints = (element: ExcalidrawElement) => {\n  // Here we add +1 to avoid these numbers to be 0\n  // otherwise rough.js will throw an error complaining about it\n  const topX = Math.floor(element.width / 2) + 1;\n  const topY = 0;\n  const rightX = element.width;\n  const rightY = Math.floor(element.height / 2) + 1;\n  const bottomX = topX;\n  const bottomY = element.height;\n  const leftX = 0;\n  const leftY = rightY;\n\n  return [topX, topY, rightX, rightY, bottomX, bottomY, leftX, leftY];\n};\n\nexport const getCurvePathOps = (shape: Drawable): Op[] => {\n  for (const set of shape.sets) {\n    if (set.type === \"path\") {\n      return set.ops;\n    }\n  }\n  return shape.sets[0].ops;\n};\n\nconst getMinMaxXYFromCurvePathOps = (\n  ops: Op[],\n  transformXY?: (x: number, y: number) => [number, number],\n): [number, number, number, number] => {\n  let currentP: Point = [0, 0];\n  const { minX, minY, maxX, maxY } = ops.reduce(\n    (limits, { op, data }) => {\n      // There are only four operation types:\n      // move, bcurveTo, lineTo, and curveTo\n      if (op === \"move\") {\n        // change starting point\n        currentP = data as unknown as Point;\n        // move operation does not draw anything; so, it always\n        // returns false\n      } else if (op === \"bcurveTo\") {\n        // create points from bezier curve\n        // bezier curve stores data as a flattened array of three positions\n        // [x1, y1, x2, y2, x3, y3]\n        const p1 = [data[0], data[1]] as Point;\n        const p2 = [data[2], data[3]] as Point;\n        const p3 = [data[4], data[5]] as Point;\n\n        const p0 = currentP;\n        currentP = p3;\n\n        const equation = (t: number, idx: number) =>\n          Math.pow(1 - t, 3) * p3[idx] +\n          3 * t * Math.pow(1 - t, 2) * p2[idx] +\n          3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n          p0[idx] * Math.pow(t, 3);\n\n        let t = 0;\n        while (t <= 1.0) {\n          let x = equation(t, 0);\n          let y = equation(t, 1);\n          if (transformXY) {\n            [x, y] = transformXY(x, y);\n          }\n\n          limits.minY = Math.min(limits.minY, y);\n          limits.minX = Math.min(limits.minX, x);\n\n          limits.maxX = Math.max(limits.maxX, x);\n          limits.maxY = Math.max(limits.maxY, y);\n\n          t += 0.1;\n        }\n      } else if (op === \"lineTo\") {\n        // TODO: Implement this\n      } else if (op === \"qcurveTo\") {\n        // TODO: Implement this\n      }\n      return limits;\n    },\n    { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n  );\n\n  return [minX, minY, maxX, maxY];\n};\n\nconst getBoundsFromPoints = (\n  points: ExcalidrawFreeDrawElement[\"points\"],\n): [number, number, number, number] => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nconst getFreeDrawElementAbsoluteCoords = (\n  element: ExcalidrawFreeDrawElement,\n): [number, number, number, number] => {\n  const [minX, minY, maxX, maxY] = getBoundsFromPoints(element.points);\n\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nconst getLinearElementAbsoluteCoords = (\n  element: ExcalidrawLinearElement,\n): [number, number, number, number] => {\n  let coords: [number, number, number, number];\n\n  if (element.points.length < 2 || !getShapeForElement(element)) {\n    // XXX this is just a poor estimate and not very useful\n    const { minX, minY, maxX, maxY } = element.points.reduce(\n      (limits, [x, y]) => {\n        limits.minY = Math.min(limits.minY, y);\n        limits.minX = Math.min(limits.minX, x);\n\n        limits.maxX = Math.max(limits.maxX, x);\n        limits.maxY = Math.max(limits.maxY, y);\n\n        return limits;\n      },\n      { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n    );\n    coords = [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const shape = getShapeForElement(element)!;\n\n    // first element is always the curve\n    const ops = getCurvePathOps(shape[0]);\n\n    const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n\n    coords = [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  }\n\n  return coords;\n};\n\nexport const getArrowheadPoints = (\n  element: ExcalidrawLinearElement,\n  shape: Drawable[],\n  position: \"start\" | \"end\",\n  arrowhead: Arrowhead,\n) => {\n  const ops = getCurvePathOps(shape[0]);\n  if (ops.length < 1) {\n    return null;\n  }\n\n  // The index of the bCurve operation to examine.\n  const index = position === \"start\" ? 1 : ops.length - 1;\n\n  const data = ops[index].data;\n  const p3 = [data[4], data[5]] as Point;\n  const p2 = [data[2], data[3]] as Point;\n  const p1 = [data[0], data[1]] as Point;\n\n  // We need to find p0 of the bezier curve.\n  // It is typically the last point of the previous\n  // curve; it can also be the position of moveTo operation.\n  const prevOp = ops[index - 1];\n  let p0: Point = [0, 0];\n  if (prevOp.op === \"move\") {\n    p0 = prevOp.data as unknown as Point;\n  } else if (prevOp.op === \"bcurveTo\") {\n    p0 = [prevOp.data[4], prevOp.data[5]];\n  }\n\n  // B(t) = p0 * (1-t)^3 + 3p1 * t * (1-t)^2 + 3p2 * t^2 * (1-t) + p3 * t^3\n  const equation = (t: number, idx: number) =>\n    Math.pow(1 - t, 3) * p3[idx] +\n    3 * t * Math.pow(1 - t, 2) * p2[idx] +\n    3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n    p0[idx] * Math.pow(t, 3);\n\n  // Ee know the last point of the arrow (or the first, if start arrowhead).\n  const [x2, y2] = position === \"start\" ? p0 : p3;\n\n  // By using cubic bezier equation (B(t)) and the given parameters,\n  // we calculate a point that is closer to the last point.\n  // The value 0.3 is chosen arbitrarily and it works best for all\n  // the tested cases.\n  const [x1, y1] = [equation(0.3, 0), equation(0.3, 1)];\n\n  // Find the normalized direction vector based on the\n  // previously calculated points.\n  const distance = Math.hypot(x2 - x1, y2 - y1);\n  const nx = (x2 - x1) / distance;\n  const ny = (y2 - y1) / distance;\n\n  const size = {\n    arrow: 30,\n    bar: 15,\n    dot: 15,\n    triangle: 15,\n  }[arrowhead]; // pixels (will differ for each arrowhead)\n\n  let length = 0;\n\n  if (arrowhead === \"arrow\") {\n    // Length for -> arrows is based on the length of the last section\n    const [cx, cy] = element.points[element.points.length - 1];\n    const [px, py] =\n      element.points.length > 1\n        ? element.points[element.points.length - 2]\n        : [0, 0];\n\n    length = Math.hypot(cx - px, cy - py);\n  } else {\n    // Length for other arrowhead types is based on the total length of the line\n    for (let i = 0; i < element.points.length; i++) {\n      const [px, py] = element.points[i - 1] || [0, 0];\n      const [cx, cy] = element.points[i];\n      length += Math.hypot(cx - px, cy - py);\n    }\n  }\n\n  // Scale down the arrowhead until we hit a certain size so that it doesn't look weird.\n  // This value is selected by minimizing a minimum size with the last segment of the arrowhead\n  const minSize = Math.min(size, length / 2);\n  const xs = x2 - nx * minSize;\n  const ys = y2 - ny * minSize;\n\n  if (arrowhead === \"dot\") {\n    const r = Math.hypot(ys - y2, xs - x2) + element.strokeWidth;\n    return [x2, y2, r];\n  }\n\n  const angle = {\n    arrow: 20,\n    bar: 90,\n    triangle: 25,\n  }[arrowhead]; // degrees\n\n  // Return points\n  const [x3, y3] = rotate(xs, ys, x2, y2, (-angle * Math.PI) / 180);\n  const [x4, y4] = rotate(xs, ys, x2, y2, (angle * Math.PI) / 180);\n  return [x2, y2, x3, y3, x4, y4];\n};\n\nconst getLinearElementRotatedBounds = (\n  element: ExcalidrawLinearElement,\n  cx: number,\n  cy: number,\n): [number, number, number, number] => {\n  if (element.points.length < 2 || !getShapeForElement(element)) {\n    // XXX this is just a poor estimate and not very useful\n    const { minX, minY, maxX, maxY } = element.points.reduce(\n      (limits, [x, y]) => {\n        [x, y] = rotate(element.x + x, element.y + y, cx, cy, element.angle);\n        limits.minY = Math.min(limits.minY, y);\n        limits.minX = Math.min(limits.minX, x);\n        limits.maxX = Math.max(limits.maxX, x);\n        limits.maxY = Math.max(limits.maxY, y);\n        return limits;\n      },\n      { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n    );\n    return [minX, minY, maxX, maxY];\n  }\n\n  const shape = getShapeForElement(element)!;\n\n  // first element is always the curve\n  const ops = getCurvePathOps(shape[0]);\n\n  const transformXY = (x: number, y: number) =>\n    rotate(element.x + x, element.y + y, cx, cy, element.angle);\n  return getMinMaxXYFromCurvePathOps(ops, transformXY);\n};\n\n// We could cache this stuff\nexport const getElementBounds = (\n  element: ExcalidrawElement,\n): [number, number, number, number] => {\n  let bounds: [number, number, number, number];\n\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  if (isFreeDrawElement(element)) {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(\n      element.points.map(([x, y]) =>\n        rotate(x, y, cx - element.x, cy - element.y, element.angle),\n      ),\n    );\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else if (isLinearElement(element)) {\n    bounds = getLinearElementRotatedBounds(element, cx, cy);\n  } else if (element.type === \"diamond\") {\n    const [x11, y11] = rotate(cx, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(cx, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x1, cy, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, cy, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  } else if (element.type === \"ellipse\") {\n    const w = (x2 - x1) / 2;\n    const h = (y2 - y1) / 2;\n    const cos = Math.cos(element.angle);\n    const sin = Math.sin(element.angle);\n    const ww = Math.hypot(w * cos, h * sin);\n    const hh = Math.hypot(h * cos, w * sin);\n    bounds = [cx - ww, cy - hh, cx + ww, cy + hh];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\n\nexport const getCommonBounds = (\n  elements: readonly ExcalidrawElement[],\n): [number, number, number, number] => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getResizedElementAbsoluteCoords = (\n  element: ExcalidrawElement,\n  nextWidth: number,\n  nextHeight: number,\n): [number, number, number, number] => {\n  if (!(isLinearElement(element) || isFreeDrawElement(element))) {\n    return [\n      element.x,\n      element.y,\n      element.x + nextWidth,\n      element.y + nextHeight,\n    ];\n  }\n\n  const points = rescalePoints(\n    0,\n    nextWidth,\n    rescalePoints(1, nextHeight, element.points),\n  );\n\n  let bounds: [number, number, number, number];\n\n  if (isFreeDrawElement(element)) {\n    // Free Draw\n    bounds = getBoundsFromPoints(points);\n  } else {\n    // Line\n    const gen = rough.generator();\n    const curve =\n      element.strokeSharpness === \"sharp\"\n        ? gen.linearPath(\n            points as [number, number][],\n            generateRoughOptions(element),\n          )\n        : gen.curve(\n            points as [number, number][],\n            generateRoughOptions(element),\n          );\n    const ops = getCurvePathOps(curve);\n    bounds = getMinMaxXYFromCurvePathOps(ops);\n  }\n\n  const [minX, minY, maxX, maxY] = bounds;\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getElementPointsCoords = (\n  element: ExcalidrawLinearElement,\n  points: readonly (readonly [number, number])[],\n  sharpness: ExcalidrawElement[\"strokeSharpness\"],\n): [number, number, number, number] => {\n  // This might be computationally heavey\n  const gen = rough.generator();\n  const curve =\n    sharpness === \"sharp\"\n      ? gen.linearPath(\n          points as [number, number][],\n          generateRoughOptions(element),\n        )\n      : gen.curve(points as [number, number][], generateRoughOptions(element));\n  const ops = getCurvePathOps(curve);\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getClosestElementBounds = (\n  elements: readonly ExcalidrawElement[],\n  from: { x: number; y: number },\n): [number, number, number, number] => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minDistance = Infinity;\n  let closestElement = elements[0];\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    const distance = distance2d((x1 + x2) / 2, (y1 + y2) / 2, from.x, from.y);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      closestElement = element;\n    }\n  });\n\n  return getElementBounds(closestElement);\n};\n\nexport interface Box {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n  midX: number;\n  midY: number;\n  width: number;\n  height: number;\n}\n\nexport const getCommonBoundingBox = (\n  elements: ExcalidrawElement[] | readonly NonDeleted<ExcalidrawElement>[],\n): Box => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  return {\n    minX,\n    minY,\n    maxX,\n    maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n    midX: (minX + maxX) / 2,\n    midY: (minY + maxY) / 2,\n  };\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"../element/types\";\nimport { getNonDeletedElements, isNonDeletedElement } from \"../element\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\n\ntype ElementIdKey = InstanceType<typeof LinearElementEditor>[\"elementId\"];\ntype ElementKey = ExcalidrawElement | ElementIdKey;\n\ntype SceneStateCallback = () => void;\ntype SceneStateCallbackRemover = () => void;\n\nconst isIdKey = (elementKey: ElementKey): elementKey is ElementIdKey => {\n  if (typeof elementKey === \"string\") {\n    return true;\n  }\n  return false;\n};\n\nclass Scene {\n  // ---------------------------------------------------------------------------\n  // static methods/props\n  // ---------------------------------------------------------------------------\n\n  private static sceneMapByElement = new WeakMap<ExcalidrawElement, Scene>();\n  private static sceneMapById = new Map<string, Scene>();\n\n  static mapElementToScene(elementKey: ElementKey, scene: Scene) {\n    if (isIdKey(elementKey)) {\n      this.sceneMapById.set(elementKey, scene);\n    } else {\n      this.sceneMapByElement.set(elementKey, scene);\n    }\n  }\n\n  static getScene(elementKey: ElementKey): Scene | null {\n    if (isIdKey(elementKey)) {\n      return this.sceneMapById.get(elementKey) || null;\n    }\n    return this.sceneMapByElement.get(elementKey) || null;\n  }\n\n  // ---------------------------------------------------------------------------\n  // instance methods/props\n  // ---------------------------------------------------------------------------\n\n  private callbacks: Set<SceneStateCallback> = new Set();\n\n  private nonDeletedElements: readonly NonDeletedExcalidrawElement[] = [];\n  private elements: readonly ExcalidrawElement[] = [];\n  private elementsMap = new Map<ExcalidrawElement[\"id\"], ExcalidrawElement>();\n\n  // TODO: getAllElementsIncludingDeleted\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n\n  // TODO: getAllNonDeletedElements\n  getElements(): readonly NonDeletedExcalidrawElement[] {\n    return this.nonDeletedElements;\n  }\n\n  getElement(id: ExcalidrawElement[\"id\"]): ExcalidrawElement | null {\n    return this.elementsMap.get(id) || null;\n  }\n\n  getNonDeletedElement(\n    id: ExcalidrawElement[\"id\"],\n  ): NonDeleted<ExcalidrawElement> | null {\n    const element = this.getElement(id);\n    if (element && isNonDeletedElement(element)) {\n      return element;\n    }\n    return null;\n  }\n\n  // TODO: Rename methods here, this is confusing\n  getNonDeletedElements(\n    ids: readonly ExcalidrawElement[\"id\"][],\n  ): NonDeleted<ExcalidrawElement>[] {\n    const result: NonDeleted<ExcalidrawElement>[] = [];\n    ids.forEach((id) => {\n      const element = this.getNonDeletedElement(id);\n      if (element != null) {\n        result.push(element);\n      }\n    });\n    return result;\n  }\n\n  replaceAllElements(nextElements: readonly ExcalidrawElement[]) {\n    this.elements = nextElements;\n    this.elementsMap.clear();\n    nextElements.forEach((element) => {\n      this.elementsMap.set(element.id, element);\n      Scene.mapElementToScene(element, this);\n    });\n    this.nonDeletedElements = getNonDeletedElements(this.elements);\n    this.informMutation();\n  }\n\n  informMutation() {\n    for (const callback of Array.from(this.callbacks)) {\n      callback();\n    }\n  }\n\n  addCallback(cb: SceneStateCallback): SceneStateCallbackRemover {\n    if (this.callbacks.has(cb)) {\n      throw new Error();\n    }\n\n    this.callbacks.add(cb);\n\n    return () => {\n      if (!this.callbacks.has(cb)) {\n        throw new Error();\n      }\n      this.callbacks.delete(cb);\n    };\n  }\n\n  destroy() {\n    Scene.sceneMapById.forEach((scene, elementKey) => {\n      if (scene === this) {\n        Scene.sceneMapById.delete(elementKey);\n      }\n    });\n    // done not for memory leaks, but to guard against possible late fires\n    // (I guess?)\n    this.callbacks.clear();\n  }\n}\n\nexport default Scene;\n","import { getFontString, arrayToMap, isTestEnv } from \"../utils\";\nimport {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawTextElementWithContainer,\n  FontString,\n  NonDeletedExcalidrawElement,\n} from \"./types\";\nimport { mutateElement } from \"./mutateElement\";\nimport { BOUND_TEXT_PADDING, VERTICAL_ALIGN } from \"../constants\";\nimport { MaybeTransformHandleType } from \"./transformHandles\";\nimport Scene from \"../scene/Scene\";\nimport { AppState } from \"../types\";\nimport { isTextElement } from \".\";\n\nexport const redrawTextBoundingBox = (\n  element: ExcalidrawTextElement,\n  container: ExcalidrawElement | null,\n  appState: AppState,\n) => {\n  const maxWidth = container\n    ? container.width - BOUND_TEXT_PADDING * 2\n    : undefined;\n  let text = element.text;\n\n  if (container) {\n    text = wrapText(\n      element.originalText,\n      getFontString(element),\n      container.width,\n    );\n  }\n  const metrics = measureText(\n    element.originalText,\n    getFontString(element),\n    maxWidth,\n  );\n\n  let coordY = element.y;\n  // Resize container and vertically center align the text\n  if (container) {\n    let nextHeight = container.height;\n\n    if (element.verticalAlign === VERTICAL_ALIGN.TOP) {\n      coordY = container.y + BOUND_TEXT_PADDING;\n    } else if (element.verticalAlign === VERTICAL_ALIGN.BOTTOM) {\n      coordY =\n        container.y + container.height - metrics.height - BOUND_TEXT_PADDING;\n    } else {\n      coordY = container.y + container.height / 2 - metrics.height / 2;\n      if (metrics.height > container.height - BOUND_TEXT_PADDING * 2) {\n        nextHeight = metrics.height + BOUND_TEXT_PADDING * 2;\n        coordY = container.y + nextHeight / 2 - metrics.height / 2;\n      }\n    }\n    mutateElement(container, { height: nextHeight });\n  }\n\n  mutateElement(element, {\n    width: metrics.width,\n    height: metrics.height,\n    baseline: metrics.baseline,\n    y: coordY,\n    text,\n  });\n};\n\nexport const bindTextToShapeAfterDuplication = (\n  sceneElements: ExcalidrawElement[],\n  oldElements: ExcalidrawElement[],\n  oldIdToDuplicatedId: Map<ExcalidrawElement[\"id\"], ExcalidrawElement[\"id\"]>,\n): void => {\n  const sceneElementMap = arrayToMap(sceneElements) as Map<\n    ExcalidrawElement[\"id\"],\n    ExcalidrawElement\n  >;\n  oldElements.forEach((element) => {\n    const newElementId = oldIdToDuplicatedId.get(element.id) as string;\n    const boundTextElementId = getBoundTextElementId(element);\n\n    if (boundTextElementId) {\n      const newTextElementId = oldIdToDuplicatedId.get(boundTextElementId);\n      if (newTextElementId) {\n        const newContainer = sceneElementMap.get(newElementId);\n        if (newContainer) {\n          mutateElement(newContainer, {\n            boundElements: element.boundElements?.concat({\n              type: \"text\",\n              id: newTextElementId,\n            }),\n          });\n        }\n        const newTextElement = sceneElementMap.get(newTextElementId);\n        if (newTextElement && isTextElement(newTextElement)) {\n          mutateElement(newTextElement, {\n            containerId: newContainer ? newElementId : null,\n          });\n        }\n      }\n    }\n  });\n};\n\nexport const handleBindTextResize = (\n  element: NonDeletedExcalidrawElement,\n  transformHandleType: MaybeTransformHandleType,\n) => {\n  const boundTextElementId = getBoundTextElementId(element);\n  if (boundTextElementId) {\n    const textElement = Scene.getScene(element)!.getElement(\n      boundTextElementId,\n    ) as ExcalidrawTextElement;\n    if (textElement && textElement.text) {\n      if (!element) {\n        return;\n      }\n      let text = textElement.text;\n      let nextHeight = textElement.height;\n      let containerHeight = element.height;\n      let nextBaseLine = textElement.baseline;\n      if (transformHandleType !== \"n\" && transformHandleType !== \"s\") {\n        if (text) {\n          text = wrapText(\n            textElement.originalText,\n            getFontString(textElement),\n            element.width,\n          );\n        }\n\n        const dimensions = measureText(\n          text,\n          getFontString(textElement),\n          element.width,\n        );\n        nextHeight = dimensions.height;\n        nextBaseLine = dimensions.baseline;\n      }\n      // increase height in case text element height exceeds\n      if (nextHeight > element.height - BOUND_TEXT_PADDING * 2) {\n        containerHeight = nextHeight + BOUND_TEXT_PADDING * 2;\n        const diff = containerHeight - element.height;\n        // fix the y coord when resizing from ne/nw/n\n        const updatedY =\n          transformHandleType === \"ne\" ||\n          transformHandleType === \"nw\" ||\n          transformHandleType === \"n\"\n            ? element.y - diff\n            : element.y;\n        mutateElement(element, {\n          height: containerHeight,\n          y: updatedY,\n        });\n      }\n\n      let updatedY;\n      if (textElement.verticalAlign === VERTICAL_ALIGN.TOP) {\n        updatedY = element.y + BOUND_TEXT_PADDING;\n      } else if (textElement.verticalAlign === VERTICAL_ALIGN.BOTTOM) {\n        updatedY = element.y + element.height - nextHeight - BOUND_TEXT_PADDING;\n      } else {\n        updatedY = element.y + element.height / 2 - nextHeight / 2;\n      }\n\n      mutateElement(textElement, {\n        text,\n        // preserve padding and set width correctly\n        width: element.width - BOUND_TEXT_PADDING * 2,\n        height: nextHeight,\n        x: element.x + BOUND_TEXT_PADDING,\n        y: updatedY,\n        baseline: nextBaseLine,\n      });\n    }\n  }\n};\n\n// https://github.com/grassator/canvas-text-editor/blob/master/lib/FontMetrics.js\nexport const measureText = (\n  text: string,\n  font: FontString,\n  maxWidth?: number | null,\n) => {\n  text = text\n    .split(\"\\n\")\n    // replace empty lines with single space because leading/trailing empty\n    // lines would be stripped from computation\n    .map((x) => x || \" \")\n    .join(\"\\n\");\n  const container = document.createElement(\"div\");\n  container.style.position = \"absolute\";\n  container.style.whiteSpace = \"pre\";\n  container.style.font = font;\n  container.style.minHeight = \"1em\";\n  if (maxWidth) {\n    const lineHeight = getApproxLineHeight(font);\n    container.style.width = `${String(maxWidth)}px`;\n    container.style.maxWidth = `${String(maxWidth)}px`;\n    container.style.overflow = \"hidden\";\n    container.style.wordBreak = \"break-word\";\n    container.style.lineHeight = `${String(lineHeight)}px`;\n    container.style.whiteSpace = \"pre-wrap\";\n  }\n  document.body.appendChild(container);\n  container.innerText = text;\n\n  const span = document.createElement(\"span\");\n  span.style.display = \"inline-block\";\n  span.style.overflow = \"hidden\";\n  span.style.width = \"1px\";\n  span.style.height = \"1px\";\n  container.appendChild(span);\n  // Baseline is important for positioning text on canvas\n  const baseline = span.offsetTop + span.offsetHeight;\n  const width = container.offsetWidth;\n\n  const height = container.offsetHeight;\n  document.body.removeChild(container);\n\n  return { width, height, baseline };\n};\n\nconst DUMMY_TEXT = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\".toLocaleUpperCase();\nconst cacheApproxLineHeight: { [key: FontString]: number } = {};\n\nexport const getApproxLineHeight = (font: FontString) => {\n  if (cacheApproxLineHeight[font]) {\n    return cacheApproxLineHeight[font];\n  }\n  cacheApproxLineHeight[font] = measureText(DUMMY_TEXT, font, null).height;\n  return cacheApproxLineHeight[font];\n};\n\nlet canvas: HTMLCanvasElement | undefined;\nconst getTextWidth = (text: string, font: FontString) => {\n  if (!canvas) {\n    canvas = document.createElement(\"canvas\");\n  }\n  const canvas2dContext = canvas.getContext(\"2d\")!;\n  canvas2dContext.font = font;\n\n  const metrics = canvas2dContext.measureText(text);\n  // since in test env the canvas measureText algo\n  // doesn't measure text and instead just returns number of\n  // characters hence we assume that each letteris 10px\n  if (isTestEnv()) {\n    return metrics.width * 10;\n  }\n\n  return metrics.width;\n};\n\nexport const wrapText = (\n  text: string,\n  font: FontString,\n  containerWidth: number,\n) => {\n  const maxWidth = containerWidth - BOUND_TEXT_PADDING * 2;\n\n  const lines: Array<string> = [];\n  const originalLines = text.split(\"\\n\");\n  const spaceWidth = getTextWidth(\" \", font);\n  originalLines.forEach((originalLine) => {\n    const words = originalLine.split(\" \");\n    // This means its newline so push it\n    if (words.length === 1 && words[0] === \"\") {\n      lines.push(words[0]);\n    } else {\n      let currentLine = \"\";\n      let currentLineWidthTillNow = 0;\n\n      let index = 0;\n      while (index < words.length) {\n        const currentWordWidth = getTextWidth(words[index], font);\n\n        // Start breaking longer words exceeding max width\n        if (currentWordWidth >= maxWidth) {\n          // push current line since the current word exceeds the max width\n          // so will be appended in next line\n          if (currentLine) {\n            lines.push(currentLine);\n          }\n          currentLine = \"\";\n          currentLineWidthTillNow = 0;\n          while (words[index].length > 0) {\n            const currentChar = words[index][0];\n            const width = charWidth.calculate(currentChar, font);\n            currentLineWidthTillNow += width;\n            words[index] = words[index].slice(1);\n\n            if (currentLineWidthTillNow >= maxWidth) {\n              // only remove last trailing space which we have added when joining words\n              if (currentLine.slice(-1) === \" \") {\n                currentLine = currentLine.slice(0, -1);\n              }\n              lines.push(currentLine);\n              currentLine = currentChar;\n              currentLineWidthTillNow = width;\n              if (currentLineWidthTillNow === maxWidth) {\n                currentLine = \"\";\n                currentLineWidthTillNow = 0;\n              }\n            } else {\n              currentLine += currentChar;\n            }\n          }\n          // push current line if appending space exceeds max width\n          if (currentLineWidthTillNow + spaceWidth >= maxWidth) {\n            lines.push(currentLine);\n            currentLine = \"\";\n            currentLineWidthTillNow = 0;\n          } else {\n            // space needs to be appended before next word\n            // as currentLine contains chars which couldn't be appended\n            // to previous line\n            currentLine += \" \";\n            currentLineWidthTillNow += spaceWidth;\n          }\n\n          index++;\n        } else {\n          // Start appending words in a line till max width reached\n          while (currentLineWidthTillNow < maxWidth && index < words.length) {\n            const word = words[index];\n            currentLineWidthTillNow = getTextWidth(currentLine + word, font);\n\n            if (currentLineWidthTillNow >= maxWidth) {\n              lines.push(currentLine);\n              currentLineWidthTillNow = 0;\n              currentLine = \"\";\n\n              break;\n            }\n            index++;\n            currentLine += `${word} `;\n\n            // Push the word if appending space exceeds max width\n            if (currentLineWidthTillNow + spaceWidth >= maxWidth) {\n              lines.push(currentLine.slice(0, -1));\n              currentLine = \"\";\n              currentLineWidthTillNow = 0;\n              break;\n            }\n          }\n          if (currentLineWidthTillNow === maxWidth) {\n            currentLine = \"\";\n            currentLineWidthTillNow = 0;\n          }\n        }\n      }\n      if (currentLine) {\n        // only remove last trailing space which we have added when joining words\n        if (currentLine.slice(-1) === \" \") {\n          currentLine = currentLine.slice(0, -1);\n        }\n        lines.push(currentLine);\n      }\n    }\n  });\n  return lines.join(\"\\n\");\n};\n\nexport const charWidth = (() => {\n  const cachedCharWidth: { [key: FontString]: Array<number> } = {};\n\n  const calculate = (char: string, font: FontString) => {\n    const ascii = char.charCodeAt(0);\n    if (!cachedCharWidth[font]) {\n      cachedCharWidth[font] = [];\n    }\n    if (!cachedCharWidth[font][ascii]) {\n      const width = getTextWidth(char, font);\n      cachedCharWidth[font][ascii] = width;\n    }\n\n    return cachedCharWidth[font][ascii];\n  };\n\n  const getCache = (font: FontString) => {\n    return cachedCharWidth[font];\n  };\n  return {\n    calculate,\n    getCache,\n  };\n})();\nexport const getApproxMinLineWidth = (font: FontString) => {\n  const maxCharWidth = getMaxCharWidth(font);\n  if (maxCharWidth === 0) {\n    return (\n      measureText(DUMMY_TEXT.split(\"\").join(\"\\n\"), font).width +\n      BOUND_TEXT_PADDING * 2\n    );\n  }\n  return maxCharWidth + BOUND_TEXT_PADDING * 2;\n};\n\nexport const getApproxMinLineHeight = (font: FontString) => {\n  return getApproxLineHeight(font) + BOUND_TEXT_PADDING * 2;\n};\n\nexport const getMinCharWidth = (font: FontString) => {\n  const cache = charWidth.getCache(font);\n  if (!cache) {\n    return 0;\n  }\n  const cacheWithOutEmpty = cache.filter((val) => val !== undefined);\n\n  return Math.min(...cacheWithOutEmpty);\n};\n\nexport const getMaxCharWidth = (font: FontString) => {\n  const cache = charWidth.getCache(font);\n  if (!cache) {\n    return 0;\n  }\n  const cacheWithOutEmpty = cache.filter((val) => val !== undefined);\n  return Math.max(...cacheWithOutEmpty);\n};\n\nexport const getApproxCharsToFitInWidth = (font: FontString, width: number) => {\n  // Generally lower case is used so converting to lower case\n  const dummyText = DUMMY_TEXT.toLocaleLowerCase();\n  const batchLength = 6;\n  let index = 0;\n  let widthTillNow = 0;\n  let str = \"\";\n  while (widthTillNow <= width) {\n    const batch = dummyText.substr(index, index + batchLength);\n    str += batch;\n    widthTillNow += getTextWidth(str, font);\n    if (index === dummyText.length - 1) {\n      index = 0;\n    }\n    index = index + batchLength;\n  }\n\n  while (widthTillNow > width) {\n    str = str.substr(0, str.length - 1);\n    widthTillNow = getTextWidth(str, font);\n  }\n  return str.length;\n};\n\nexport const getBoundTextElementId = (container: ExcalidrawElement | null) => {\n  return container?.boundElements?.length\n    ? container?.boundElements?.filter((ele) => ele.type === \"text\")[0]?.id ||\n        null\n    : null;\n};\n\nexport const getBoundTextElement = (element: ExcalidrawElement | null) => {\n  if (!element) {\n    return null;\n  }\n  const boundTextElementId = getBoundTextElementId(element);\n  if (boundTextElementId) {\n    return (\n      (Scene.getScene(element)?.getElement(\n        boundTextElementId,\n      ) as ExcalidrawTextElementWithContainer) || null\n    );\n  }\n  return null;\n};\n\nexport const getContainerElement = (\n  element:\n    | (ExcalidrawElement & { containerId: ExcalidrawElement[\"id\"] | null })\n    | null,\n) => {\n  if (!element) {\n    return null;\n  }\n  if (element.containerId) {\n    return Scene.getScene(element)?.getElement(element.containerId) || null;\n  }\n  return null;\n};\n","import {\n  ExcalidrawElement,\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  Arrowhead,\n  NonDeletedExcalidrawElement,\n  ExcalidrawFreeDrawElement,\n  ExcalidrawImageElement,\n} from \"../element/types\";\nimport {\n  isTextElement,\n  isLinearElement,\n  isFreeDrawElement,\n  isInitializedImageElement,\n} from \"../element/typeChecks\";\nimport {\n  getDiamondPoints,\n  getElementAbsoluteCoords,\n  getArrowheadPoints,\n} from \"../element/bounds\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { Drawable, Options } from \"roughjs/bin/core\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport { RoughGenerator } from \"roughjs/bin/generator\";\n\nimport { RenderConfig } from \"../scene/types\";\nimport { distance, getFontString, getFontFamilyString, isRTL } from \"../utils\";\nimport { isPathALoop } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\nimport { AppState, BinaryFiles, Zoom } from \"../types\";\nimport { getDefaultAppState } from \"../appState\";\nimport {\n  BOUND_TEXT_PADDING,\n  MAX_DECIMALS_FOR_SVG_EXPORT,\n  MIME_TYPES,\n  SVG_NS,\n  VERTICAL_ALIGN,\n} from \"../constants\";\nimport { getStroke, StrokeOptions } from \"perfect-freehand\";\nimport { getApproxLineHeight } from \"../element/textElement\";\n\n// using a stronger invert (100% vs our regular 93%) and saturate\n// as a temp hack to make images in dark theme look closer to original\n// color scheme (it's still not quite there and the colors look slightly\n// desatured, alas...)\nconst IMAGE_INVERT_FILTER = \"invert(100%) hue-rotate(180deg) saturate(1.25)\";\n\nconst defaultAppState = getDefaultAppState();\n\nconst isPendingImageElement = (\n  element: ExcalidrawElement,\n  renderConfig: RenderConfig,\n) =>\n  isInitializedImageElement(element) &&\n  !renderConfig.imageCache.has(element.fileId);\n\nconst shouldResetImageFilter = (\n  element: ExcalidrawElement,\n  renderConfig: RenderConfig,\n) => {\n  return (\n    renderConfig.theme === \"dark\" &&\n    isInitializedImageElement(element) &&\n    !isPendingImageElement(element, renderConfig) &&\n    renderConfig.imageCache.get(element.fileId)?.mimeType !== MIME_TYPES.svg\n  );\n};\n\nconst getDashArrayDashed = (strokeWidth: number) => [8, 8 + strokeWidth];\n\nconst getDashArrayDotted = (strokeWidth: number) => [1.5, 6 + strokeWidth];\n\nconst getCanvasPadding = (element: ExcalidrawElement) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nexport interface ExcalidrawElementWithCanvas {\n  element: ExcalidrawElement | ExcalidrawTextElement;\n  canvas: HTMLCanvasElement;\n  theme: RenderConfig[\"theme\"];\n  canvasZoom: Zoom[\"value\"];\n  canvasOffsetX: number;\n  canvasOffsetY: number;\n}\n\nconst generateElementCanvas = (\n  element: NonDeletedExcalidrawElement,\n  zoom: Zoom,\n  renderConfig: RenderConfig,\n): ExcalidrawElementWithCanvas => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\")!;\n  const padding = getCanvasPadding(element);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n\n  if (isLinearElement(element) || isFreeDrawElement(element)) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n\n    canvasOffsetX =\n      element.x > x1\n        ? distance(element.x, x1) * window.devicePixelRatio * zoom.value\n        : 0;\n\n    canvasOffsetY =\n      element.y > y1\n        ? distance(element.y, y1) * window.devicePixelRatio * zoom.value\n        : 0;\n\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n  }\n\n  context.save();\n  context.translate(padding * zoom.value, padding * zoom.value);\n  context.scale(\n    window.devicePixelRatio * zoom.value,\n    window.devicePixelRatio * zoom.value,\n  );\n\n  const rc = rough.canvas(canvas);\n\n  // in dark theme, revert the image color filter\n  if (shouldResetImageFilter(element, renderConfig)) {\n    context.filter = IMAGE_INVERT_FILTER;\n  }\n\n  drawElementOnCanvas(element, rc, context, renderConfig);\n  context.restore();\n\n  return {\n    element,\n    canvas,\n    theme: renderConfig.theme,\n    canvasZoom: zoom.value,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nexport const DEFAULT_LINK_SIZE = 14;\n\nconst IMAGE_PLACEHOLDER_IMG = document.createElement(\"img\");\nIMAGE_PLACEHOLDER_IMG.src = `data:${MIME_TYPES.svg},${encodeURIComponent(\n  `<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"image\" class=\"svg-inline--fa fa-image fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"#888\" d=\"M464 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM112 120c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zM64 384h384V272l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L208 320l-55.515-55.515c-4.686-4.686-12.284-4.686-16.971 0L64 336v48z\"></path></svg>`,\n)}`;\n\nconst IMAGE_ERROR_PLACEHOLDER_IMG = document.createElement(\"img\");\nIMAGE_ERROR_PLACEHOLDER_IMG.src = `data:${MIME_TYPES.svg},${encodeURIComponent(\n  `<svg viewBox=\"0 0 668 668\" xmlns=\"http://www.w3.org/2000/svg\" xml:space=\"preserve\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2\"><path d=\"M464 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48ZM112 120c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56ZM64 384h384V272l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L208 320l-55.515-55.515c-4.686-4.686-12.284-4.686-16.971 0L64 336v48Z\" style=\"fill:#888;fill-rule:nonzero\" transform=\"matrix(.81709 0 0 .81709 124.825 145.825)\"/><path d=\"M256 8C119.034 8 8 119.033 8 256c0 136.967 111.034 248 248 248s248-111.034 248-248S392.967 8 256 8Zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676ZM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676Z\" style=\"fill:#888;fill-rule:nonzero\" transform=\"matrix(.30366 0 0 .30366 506.822 60.065)\"/></svg>`,\n)}`;\n\nconst drawImagePlaceholder = (\n  element: ExcalidrawImageElement,\n  context: CanvasRenderingContext2D,\n  zoomValue: AppState[\"zoom\"][\"value\"],\n) => {\n  context.fillStyle = \"#E7E7E7\";\n  context.fillRect(0, 0, element.width, element.height);\n\n  const imageMinWidthOrHeight = Math.min(element.width, element.height);\n\n  const size = Math.min(\n    imageMinWidthOrHeight,\n    Math.min(imageMinWidthOrHeight * 0.4, 100),\n  );\n\n  context.drawImage(\n    element.status === \"error\"\n      ? IMAGE_ERROR_PLACEHOLDER_IMG\n      : IMAGE_PLACEHOLDER_IMG,\n    element.width / 2 - size / 2,\n    element.height / 2 - size / 2,\n    size,\n    size,\n  );\n};\n\nconst drawElementOnCanvas = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  renderConfig: RenderConfig,\n) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      rc.draw(getShapeForElement(element)!);\n      break;\n    }\n    case \"arrow\":\n    case \"line\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n\n      getShapeForElement(element)!.forEach((shape) => {\n        rc.draw(shape);\n      });\n      break;\n    }\n    case \"freedraw\": {\n      // Draw directly to canvas\n      context.save();\n      context.fillStyle = element.strokeColor;\n\n      const path = getFreeDrawPath2D(element) as Path2D;\n      const fillShape = getShapeForElement(element);\n\n      if (fillShape) {\n        rc.draw(fillShape);\n      }\n\n      context.fillStyle = element.strokeColor;\n      context.fill(path);\n\n      context.restore();\n      break;\n    }\n    case \"image\": {\n      const img = isInitializedImageElement(element)\n        ? renderConfig.imageCache.get(element.fileId)?.image\n        : undefined;\n      if (img != null && !(img instanceof Promise)) {\n        context.drawImage(\n          img,\n          0 /* hardcoded for the selection box*/,\n          0,\n          element.width,\n          element.height,\n        );\n      } else {\n        drawImagePlaceholder(element, context, renderConfig.zoom.value);\n      }\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const rtl = isRTL(element.text);\n        const shouldTemporarilyAttach = rtl && !context.canvas.isConnected;\n        if (shouldTemporarilyAttach) {\n          // to correctly render RTL text mixed with LTR, we have to append it\n          // to the DOM\n          document.body.appendChild(context.canvas);\n        }\n        context.canvas.setAttribute(\"dir\", rtl ? \"rtl\" : \"ltr\");\n        context.save();\n        context.font = getFontString(element);\n        context.fillStyle = element.strokeColor;\n        context.textAlign = element.textAlign as CanvasTextAlign;\n\n        // Canvas does not support multiline text by default\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.containerId\n          ? getApproxLineHeight(getFontString(element))\n          : element.height / lines.length;\n        let verticalOffset = element.height - element.baseline;\n        if (element.verticalAlign === VERTICAL_ALIGN.BOTTOM) {\n          verticalOffset = BOUND_TEXT_PADDING;\n        }\n\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        for (let index = 0; index < lines.length; index++) {\n          context.fillText(\n            lines[index],\n            horizontalOffset,\n            (index + 1) * lineHeight - verticalOffset,\n          );\n        }\n        context.restore();\n        if (shouldTemporarilyAttach) {\n          context.canvas.remove();\n        }\n      } else {\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst elementWithCanvasCache = new WeakMap<\n  ExcalidrawElement,\n  ExcalidrawElementWithCanvas\n>();\n\nconst shapeCache = new WeakMap<ExcalidrawElement, ElementShape>();\n\ntype ElementShape = Drawable | Drawable[] | null;\n\ntype ElementShapes = {\n  freedraw: Drawable | null;\n  arrow: Drawable[];\n  line: Drawable[];\n  text: null;\n  image: null;\n};\n\nexport const getShapeForElement = <T extends ExcalidrawElement>(element: T) =>\n  shapeCache.get(element) as T[\"type\"] extends keyof ElementShapes\n    ? ElementShapes[T[\"type\"]] | undefined\n    : Drawable | null | undefined;\n\nexport const setShapeForElement = <T extends ExcalidrawElement>(\n  element: T,\n  shape: T[\"type\"] extends keyof ElementShapes\n    ? ElementShapes[T[\"type\"]]\n    : Drawable,\n) => shapeCache.set(element, shape);\n\nexport const invalidateShapeForElement = (element: ExcalidrawElement) =>\n  shapeCache.delete(element);\n\nexport const generateRoughOptions = (\n  element: ExcalidrawElement,\n  continuousPath = false,\n): Options => {\n  const options: Options = {\n    seed: element.seed,\n    strokeLineDash:\n      element.strokeStyle === \"dashed\"\n        ? getDashArrayDashed(element.strokeWidth)\n        : element.strokeStyle === \"dotted\"\n        ? getDashArrayDotted(element.strokeWidth)\n        : undefined,\n    // for non-solid strokes, disable multiStroke because it tends to make\n    // dashes/dots overlay each other\n    disableMultiStroke: element.strokeStyle !== \"solid\",\n    // for non-solid strokes, increase the width a bit to make it visually\n    // similar to solid strokes, because we're also disabling multiStroke\n    strokeWidth:\n      element.strokeStyle !== \"solid\"\n        ? element.strokeWidth + 0.5\n        : element.strokeWidth,\n    // when increasing strokeWidth, we must explicitly set fillWeight and\n    // hachureGap because if not specified, roughjs uses strokeWidth to\n    // calculate them (and we don't want the fills to be modified)\n    fillWeight: element.strokeWidth / 2,\n    hachureGap: element.strokeWidth * 4,\n    roughness: element.roughness,\n    stroke: element.strokeColor,\n    preserveVertices: continuousPath,\n  };\n\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      options.fillStyle = element.fillStyle;\n      options.fill =\n        element.backgroundColor === \"transparent\"\n          ? undefined\n          : element.backgroundColor;\n      if (element.type === \"ellipse\") {\n        options.curveFitting = 1;\n      }\n      return options;\n    }\n    case \"line\":\n    case \"freedraw\": {\n      if (isPathALoop(element.points)) {\n        options.fillStyle = element.fillStyle;\n        options.fill =\n          element.backgroundColor === \"transparent\"\n            ? undefined\n            : element.backgroundColor;\n      }\n      return options;\n    }\n    case \"arrow\":\n      return options;\n    default: {\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\n/**\n * Generates the element's shape and puts it into the cache.\n * @param element\n * @param generator\n */\nconst generateElementShape = (\n  element: NonDeletedExcalidrawElement,\n  generator: RoughGenerator,\n) => {\n  let shape = shapeCache.get(element);\n\n  // `null` indicates no rc shape applicable for this element type\n  // (= do not generate anything)\n  if (shape === undefined) {\n    elementWithCanvasCache.delete(element);\n\n    switch (element.type) {\n      case \"rectangle\":\n        if (element.strokeSharpness === \"round\") {\n          const w = element.width;\n          const h = element.height;\n          const r = Math.min(w, h) * 0.25;\n          shape = generator.path(\n            `M ${r} 0 L ${w - r} 0 Q ${w} 0, ${w} ${r} L ${w} ${\n              h - r\n            } Q ${w} ${h}, ${w - r} ${h} L ${r} ${h} Q 0 ${h}, 0 ${\n              h - r\n            } L 0 ${r} Q 0 0, ${r} 0`,\n            generateRoughOptions(element, true),\n          );\n        } else {\n          shape = generator.rectangle(\n            0,\n            0,\n            element.width,\n            element.height,\n            generateRoughOptions(element),\n          );\n        }\n        setShapeForElement(element, shape);\n\n        break;\n      case \"diamond\": {\n        const [topX, topY, rightX, rightY, bottomX, bottomY, leftX, leftY] =\n          getDiamondPoints(element);\n        if (element.strokeSharpness === \"round\") {\n          shape = generator.path(\n            `M ${topX + (rightX - topX) * 0.25} ${\n              topY + (rightY - topY) * 0.25\n            } L ${rightX - (rightX - topX) * 0.25} ${\n              rightY - (rightY - topY) * 0.25\n            }\n            C ${rightX} ${rightY}, ${rightX} ${rightY}, ${\n              rightX - (rightX - bottomX) * 0.25\n            } ${rightY + (bottomY - rightY) * 0.25}\n            L ${bottomX + (rightX - bottomX) * 0.25} ${\n              bottomY - (bottomY - rightY) * 0.25\n            }\n            C ${bottomX} ${bottomY}, ${bottomX} ${bottomY}, ${\n              bottomX - (bottomX - leftX) * 0.25\n            } ${bottomY - (bottomY - leftY) * 0.25}\n            L ${leftX + (bottomX - leftX) * 0.25} ${\n              leftY + (bottomY - leftY) * 0.25\n            }\n            C ${leftX} ${leftY}, ${leftX} ${leftY}, ${\n              leftX + (topX - leftX) * 0.25\n            } ${leftY - (leftY - topY) * 0.25}\n            L ${topX - (topX - leftX) * 0.25} ${topY + (leftY - topY) * 0.25}\n            C ${topX} ${topY}, ${topX} ${topY}, ${\n              topX + (rightX - topX) * 0.25\n            } ${topY + (rightY - topY) * 0.25}`,\n            generateRoughOptions(element, true),\n          );\n        } else {\n          shape = generator.polygon(\n            [\n              [topX, topY],\n              [rightX, rightY],\n              [bottomX, bottomY],\n              [leftX, leftY],\n            ],\n            generateRoughOptions(element),\n          );\n        }\n        setShapeForElement(element, shape);\n\n        break;\n      }\n      case \"ellipse\":\n        shape = generator.ellipse(\n          element.width / 2,\n          element.height / 2,\n          element.width,\n          element.height,\n          generateRoughOptions(element),\n        );\n        setShapeForElement(element, shape);\n\n        break;\n      case \"line\":\n      case \"arrow\": {\n        const options = generateRoughOptions(element);\n\n        // points array can be empty in the beginning, so it is important to add\n        // initial position to it\n        const points = element.points.length ? element.points : [[0, 0]];\n\n        // curve is always the first element\n        // this simplifies finding the curve for an element\n        if (element.strokeSharpness === \"sharp\") {\n          if (options.fill) {\n            shape = [generator.polygon(points as [number, number][], options)];\n          } else {\n            shape = [\n              generator.linearPath(points as [number, number][], options),\n            ];\n          }\n        } else {\n          shape = [generator.curve(points as [number, number][], options)];\n        }\n\n        // add lines only in arrow\n        if (element.type === \"arrow\") {\n          const { startArrowhead = null, endArrowhead = \"arrow\" } = element;\n\n          const getArrowheadShapes = (\n            element: ExcalidrawLinearElement,\n            shape: Drawable[],\n            position: \"start\" | \"end\",\n            arrowhead: Arrowhead,\n          ) => {\n            const arrowheadPoints = getArrowheadPoints(\n              element,\n              shape,\n              position,\n              arrowhead,\n            );\n\n            if (arrowheadPoints === null) {\n              return [];\n            }\n\n            // Other arrowheads here...\n            if (arrowhead === \"dot\") {\n              const [x, y, r] = arrowheadPoints;\n\n              return [\n                generator.circle(x, y, r, {\n                  ...options,\n                  fill: element.strokeColor,\n                  fillStyle: \"solid\",\n                  stroke: \"none\",\n                }),\n              ];\n            }\n\n            if (arrowhead === \"triangle\") {\n              const [x, y, x2, y2, x3, y3] = arrowheadPoints;\n\n              // always use solid stroke for triangle arrowhead\n              delete options.strokeLineDash;\n\n              return [\n                generator.polygon(\n                  [\n                    [x, y],\n                    [x2, y2],\n                    [x3, y3],\n                    [x, y],\n                  ],\n                  {\n                    ...options,\n                    fill: element.strokeColor,\n                    fillStyle: \"solid\",\n                  },\n                ),\n              ];\n            }\n\n            // Arrow arrowheads\n            const [x2, y2, x3, y3, x4, y4] = arrowheadPoints;\n\n            if (element.strokeStyle === \"dotted\") {\n              // for dotted arrows caps, reduce gap to make it more legible\n              const dash = getDashArrayDotted(element.strokeWidth - 1);\n              options.strokeLineDash = [dash[0], dash[1] - 1];\n            } else {\n              // for solid/dashed, keep solid arrow cap\n              delete options.strokeLineDash;\n            }\n            return [\n              generator.line(x3, y3, x2, y2, options),\n              generator.line(x4, y4, x2, y2, options),\n            ];\n          };\n\n          if (startArrowhead !== null) {\n            const shapes = getArrowheadShapes(\n              element,\n              shape,\n              \"start\",\n              startArrowhead,\n            );\n            shape.push(...shapes);\n          }\n\n          if (endArrowhead !== null) {\n            if (endArrowhead === undefined) {\n              // Hey, we have an old arrow here!\n            }\n\n            const shapes = getArrowheadShapes(\n              element,\n              shape,\n              \"end\",\n              endArrowhead,\n            );\n            shape.push(...shapes);\n          }\n        }\n\n        setShapeForElement(element, shape);\n\n        break;\n      }\n      case \"freedraw\": {\n        generateFreeDrawShape(element);\n\n        if (isPathALoop(element.points)) {\n          // generate rough polygon to fill freedraw shape\n          shape = generator.polygon(element.points as [number, number][], {\n            ...generateRoughOptions(element),\n            stroke: \"none\",\n          });\n        } else {\n          shape = null;\n        }\n        setShapeForElement(element, shape);\n        break;\n      }\n      case \"text\":\n      case \"image\": {\n        // just to ensure we don't regenerate element.canvas on rerenders\n        setShapeForElement(element, null);\n        break;\n      }\n    }\n  }\n};\n\nconst generateElementWithCanvas = (\n  element: NonDeletedExcalidrawElement,\n  renderConfig: RenderConfig,\n) => {\n  const zoom: Zoom = renderConfig ? renderConfig.zoom : defaultAppState.zoom;\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  const shouldRegenerateBecauseZoom =\n    prevElementWithCanvas &&\n    prevElementWithCanvas.canvasZoom !== zoom.value &&\n    !renderConfig?.shouldCacheIgnoreZoom;\n\n  if (\n    !prevElementWithCanvas ||\n    shouldRegenerateBecauseZoom ||\n    prevElementWithCanvas.theme !== renderConfig.theme\n  ) {\n    const elementWithCanvas = generateElementCanvas(\n      element,\n      zoom,\n      renderConfig,\n    );\n\n    elementWithCanvasCache.set(element, elementWithCanvas);\n\n    return elementWithCanvas;\n  }\n  return prevElementWithCanvas;\n};\n\nconst drawElementFromCanvas = (\n  elementWithCanvas: ExcalidrawElementWithCanvas,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  renderConfig: RenderConfig,\n) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n\n  // Free draw elements will otherwise \"shuffle\" as the min x and y change\n  if (isFreeDrawElement(element)) {\n    x1 = Math.floor(x1);\n    x2 = Math.ceil(x2);\n    y1 = Math.floor(y1);\n    y2 = Math.ceil(y2);\n  }\n\n  const cx = ((x1 + x2) / 2 + renderConfig.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + renderConfig.scrollY) * window.devicePixelRatio;\n\n  const _isPendingImageElement = isPendingImageElement(element, renderConfig);\n\n  const scaleXFactor =\n    \"scale\" in elementWithCanvas.element && !_isPendingImageElement\n      ? elementWithCanvas.element.scale[0]\n      : 1;\n  const scaleYFactor =\n    \"scale\" in elementWithCanvas.element && !_isPendingImageElement\n      ? elementWithCanvas.element.scale[1]\n      : 1;\n\n  context.save();\n  context.scale(\n    (1 / window.devicePixelRatio) * scaleXFactor,\n    (1 / window.devicePixelRatio) * scaleYFactor,\n  );\n  context.translate(cx * scaleXFactor, cy * scaleYFactor);\n  context.rotate(element.angle * scaleXFactor * scaleYFactor);\n\n  context.drawImage(\n    elementWithCanvas.canvas!,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom) / elementWithCanvas.canvasZoom,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom) / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.width / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.height / elementWithCanvas.canvasZoom,\n  );\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n\nexport const renderElement = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  renderConfig: RenderConfig,\n) => {\n  const generator = rc.generator;\n  switch (element.type) {\n    case \"selection\": {\n      context.save();\n      context.translate(\n        element.x + renderConfig.scrollX,\n        element.y + renderConfig.scrollY,\n      );\n      context.fillStyle = \"rgba(0, 0, 255, 0.10)\";\n      context.fillRect(0, 0, element.width, element.height);\n      context.restore();\n      break;\n    }\n    case \"freedraw\": {\n      generateElementShape(element, generator);\n\n      if (renderConfig.isExporting) {\n        const elementWithCanvas = generateElementWithCanvas(\n          element,\n          renderConfig,\n        );\n        drawElementFromCanvas(elementWithCanvas, rc, context, renderConfig);\n      } else {\n        const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n        const cx = (x1 + x2) / 2 + renderConfig.scrollX;\n        const cy = (y1 + y2) / 2 + renderConfig.scrollY;\n        const shiftX = (x2 - x1) / 2 - (element.x - x1);\n        const shiftY = (y2 - y1) / 2 - (element.y - y1);\n        context.save();\n        context.translate(cx, cy);\n        context.rotate(element.angle);\n        context.translate(-shiftX, -shiftY);\n        drawElementOnCanvas(element, rc, context, renderConfig);\n        context.restore();\n      }\n\n      break;\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\":\n    case \"line\":\n    case \"arrow\":\n    case \"image\":\n    case \"text\": {\n      generateElementShape(element, generator);\n      if (renderConfig.isExporting) {\n        const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n        const cx = (x1 + x2) / 2 + renderConfig.scrollX;\n        const cy = (y1 + y2) / 2 + renderConfig.scrollY;\n        const shiftX = (x2 - x1) / 2 - (element.x - x1);\n        const shiftY = (y2 - y1) / 2 - (element.y - y1);\n        context.save();\n        context.translate(cx, cy);\n        context.rotate(element.angle);\n        context.translate(-shiftX, -shiftY);\n\n        if (shouldResetImageFilter(element, renderConfig)) {\n          context.filter = \"none\";\n        }\n\n        drawElementOnCanvas(element, rc, context, renderConfig);\n        context.restore();\n        // not exporting → optimized rendering (cache & render from element\n        // canvases)\n      } else {\n        const elementWithCanvas = generateElementWithCanvas(\n          element,\n          renderConfig,\n        );\n        drawElementFromCanvas(elementWithCanvas, rc, context, renderConfig);\n      }\n      break;\n    }\n    default: {\n      // @ts-ignore\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\nconst roughSVGDrawWithPrecision = (\n  rsvg: RoughSVG,\n  drawable: Drawable,\n  precision?: number,\n) => {\n  if (typeof precision === \"undefined\") {\n    return rsvg.draw(drawable);\n  }\n  const pshape: Drawable = {\n    sets: drawable.sets,\n    shape: drawable.shape,\n    options: { ...drawable.options, fixedDecimalPlaceDigits: precision },\n  };\n  return rsvg.draw(pshape);\n};\n\nexport const renderElementToSvg = (\n  element: NonDeletedExcalidrawElement,\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  files: BinaryFiles,\n  offsetX?: number,\n  offsetY?: number,\n  exportWithDarkMode?: boolean,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x2 - x1) / 2 - (element.x - x1);\n  const cy = (y2 - y1) / 2 - (element.y - y1);\n  const degree = (180 * element.angle) / Math.PI;\n  const generator = rsvg.generator;\n\n  // element to append node to, most of the time svgRoot\n  let root = svgRoot;\n\n  // if the element has a link, create an anchor tag and make that the new root\n  if (element.link) {\n    const anchorTag = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"a\");\n    anchorTag.setAttribute(\"href\", element.link);\n    root.appendChild(anchorTag);\n    root = anchorTag;\n  }\n\n  switch (element.type) {\n    case \"selection\": {\n      // Since this is used only during editing experience, which is canvas based,\n      // this should not happen\n      throw new Error(\"Selection rendering is not supported for SVG\");\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      generateElementShape(element, generator);\n      const node = roughSVGDrawWithPrecision(\n        rsvg,\n        getShapeForElement(element)!,\n        MAX_DECIMALS_FOR_SVG_EXPORT,\n      );\n      const opacity = element.opacity / 100;\n      if (opacity !== 1) {\n        node.setAttribute(\"stroke-opacity\", `${opacity}`);\n        node.setAttribute(\"fill-opacity\", `${opacity}`);\n      }\n      node.setAttribute(\"stroke-linecap\", \"round\");\n      node.setAttribute(\n        \"transform\",\n        `translate(${offsetX || 0} ${\n          offsetY || 0\n        }) rotate(${degree} ${cx} ${cy})`,\n      );\n      root.appendChild(node);\n      break;\n    }\n    case \"line\":\n    case \"arrow\": {\n      generateElementShape(element, generator);\n      const group = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n      const opacity = element.opacity / 100;\n      group.setAttribute(\"stroke-linecap\", \"round\");\n\n      getShapeForElement(element)!.forEach((shape) => {\n        const node = roughSVGDrawWithPrecision(\n          rsvg,\n          shape,\n          MAX_DECIMALS_FOR_SVG_EXPORT,\n        );\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        if (\n          element.type === \"line\" &&\n          isPathALoop(element.points) &&\n          element.backgroundColor !== \"transparent\"\n        ) {\n          node.setAttribute(\"fill-rule\", \"evenodd\");\n        }\n        group.appendChild(node);\n      });\n      root.appendChild(group);\n      break;\n    }\n    case \"freedraw\": {\n      generateElementShape(element, generator);\n      generateFreeDrawShape(element);\n      const opacity = element.opacity / 100;\n      const shape = getShapeForElement(element);\n      const node = shape\n        ? roughSVGDrawWithPrecision(rsvg, shape, MAX_DECIMALS_FOR_SVG_EXPORT)\n        : svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n      if (opacity !== 1) {\n        node.setAttribute(\"stroke-opacity\", `${opacity}`);\n        node.setAttribute(\"fill-opacity\", `${opacity}`);\n      }\n      node.setAttribute(\n        \"transform\",\n        `translate(${offsetX || 0} ${\n          offsetY || 0\n        }) rotate(${degree} ${cx} ${cy})`,\n      );\n      node.setAttribute(\"stroke\", \"none\");\n      const path = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"path\");\n      path.setAttribute(\"fill\", element.strokeColor);\n      path.setAttribute(\"d\", getFreeDrawSvgPath(element));\n      node.appendChild(path);\n      root.appendChild(node);\n      break;\n    }\n    case \"image\": {\n      const fileData =\n        isInitializedImageElement(element) && files[element.fileId];\n      if (fileData) {\n        const symbolId = `image-${fileData.id}`;\n        let symbol = svgRoot.querySelector(`#${symbolId}`);\n        if (!symbol) {\n          symbol = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"symbol\");\n          symbol.id = symbolId;\n\n          const image = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"image\");\n\n          image.setAttribute(\"width\", \"100%\");\n          image.setAttribute(\"height\", \"100%\");\n          image.setAttribute(\"href\", fileData.dataURL);\n\n          symbol.appendChild(image);\n\n          root.prepend(symbol);\n        }\n\n        const use = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"use\");\n        use.setAttribute(\"href\", `#${symbolId}`);\n\n        // in dark theme, revert the image color filter\n        if (exportWithDarkMode && fileData.mimeType !== MIME_TYPES.svg) {\n          use.setAttribute(\"filter\", IMAGE_INVERT_FILTER);\n        }\n\n        use.setAttribute(\"width\", `${Math.round(element.width)}`);\n        use.setAttribute(\"height\", `${Math.round(element.height)}`);\n\n        use.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n\n        root.appendChild(use);\n      }\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const opacity = element.opacity / 100;\n        const node = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.height / lines.length;\n        const verticalOffset = element.height - element.baseline;\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        const direction = isRTL(element.text) ? \"rtl\" : \"ltr\";\n        const textAnchor =\n          element.textAlign === \"center\"\n            ? \"middle\"\n            : element.textAlign === \"right\" || direction === \"rtl\"\n            ? \"end\"\n            : \"start\";\n        for (let i = 0; i < lines.length; i++) {\n          const text = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"text\");\n          text.textContent = lines[i];\n          text.setAttribute(\"x\", `${horizontalOffset}`);\n          text.setAttribute(\"y\", `${(i + 1) * lineHeight - verticalOffset}`);\n          text.setAttribute(\"font-family\", getFontFamilyString(element));\n          text.setAttribute(\"font-size\", `${element.fontSize}px`);\n          text.setAttribute(\"fill\", element.strokeColor);\n          text.setAttribute(\"text-anchor\", textAnchor);\n          text.setAttribute(\"style\", \"white-space: pre;\");\n          text.setAttribute(\"direction\", direction);\n          node.appendChild(text);\n        }\n        root.appendChild(node);\n      } else {\n        // @ts-ignore\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n};\n\nexport const pathsCache = new WeakMap<ExcalidrawFreeDrawElement, Path2D>([]);\n\nexport function generateFreeDrawShape(element: ExcalidrawFreeDrawElement) {\n  const svgPathData = getFreeDrawSvgPath(element);\n  const path = new Path2D(svgPathData);\n  pathsCache.set(element, path);\n  return path;\n}\n\nexport function getFreeDrawPath2D(element: ExcalidrawFreeDrawElement) {\n  return pathsCache.get(element);\n}\n\nexport function getFreeDrawSvgPath(element: ExcalidrawFreeDrawElement) {\n  // If input points are empty (should they ever be?) return a dot\n  const inputPoints = element.simulatePressure\n    ? element.points\n    : element.points.length\n    ? element.points.map(([x, y], i) => [x, y, element.pressures[i]])\n    : [[0, 0, 0.5]];\n\n  // Consider changing the options for simulated pressure vs real pressure\n  const options: StrokeOptions = {\n    simulatePressure: element.simulatePressure,\n    size: element.strokeWidth * 4.25,\n    thinning: 0.6,\n    smoothing: 0.5,\n    streamline: 0.5,\n    easing: (t) => Math.sin((t * Math.PI) / 2), // https://easings.net/#easeOutSine\n    last: !!element.lastCommittedPoint, // LastCommittedPoint is added on pointerup\n  };\n\n  return getSvgPathFromStroke(getStroke(inputPoints as number[][], options));\n}\n\nfunction med(A: number[], B: number[]) {\n  return [(A[0] + B[0]) / 2, (A[1] + B[1]) / 2];\n}\n\n// Trim SVG path data so number are each two decimal points. This\n// improves SVG exports, and prevents rendering errors on points\n// with long decimals.\nconst TO_FIXED_PRECISION = /(\\s?[A-Z]?,?-?[0-9]*\\.[0-9]{0,2})(([0-9]|e|-)*)/g;\n\nfunction getSvgPathFromStroke(points: number[][]): string {\n  if (!points.length) {\n    return \"\";\n  }\n\n  const max = points.length - 1;\n\n  return points\n    .reduce(\n      (acc, point, i, arr) => {\n        if (i === max) {\n          acc.push(point, med(point, arr[0]), \"L\", arr[0], \"Z\");\n        } else {\n          acc.push(point, med(point, arr[i + 1]));\n        }\n        return acc;\n      },\n      [\"M\", points[0], \"Q\"],\n    )\n    .join(\" \")\n    .replace(TO_FIXED_PRECISION, \"$1\");\n}\n","import { Random } from \"roughjs/bin/math\";\nimport { nanoid } from \"nanoid\";\nimport { isTestEnv } from \"./utils\";\n\nlet random = new Random(Date.now());\nlet testIdBase = 0;\n\nexport const randomInteger = () => Math.floor(random.next() * 2 ** 31);\n\nexport const reseed = (seed: number) => {\n  random = new Random(seed);\n  testIdBase = 0;\n};\n\nexport const randomId = () => (isTestEnv() ? `id${testIdBase++}` : nanoid());\n","import { ExcalidrawElement } from \"./types\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport Scene from \"../scene/Scene\";\nimport { getSizeFromPoints } from \"../points\";\nimport { randomInteger } from \"../random\";\nimport { Point } from \"../types\";\nimport { getUpdatedTimestamp } from \"../utils\";\n\ntype ElementUpdate<TElement extends ExcalidrawElement> = Omit<\n  Partial<TElement>,\n  \"id\" | \"version\" | \"versionNonce\"\n>;\n\n// This function tracks updates of text elements for the purposes for collaboration.\n// The version is used to compare updates when more than one user is working in\n// the same drawing. Note: this will trigger the component to update. Make sure you\n// are calling it either from a React event handler or within unstable_batchedUpdates().\nexport const mutateElement = <TElement extends Mutable<ExcalidrawElement>>(\n  element: TElement,\n  updates: ElementUpdate<TElement>,\n  informMutation = true,\n): TElement => {\n  let didChange = false;\n\n  // casting to any because can't use `in` operator\n  // (see https://github.com/microsoft/TypeScript/issues/21732)\n  const { points, fileId } = updates as any;\n\n  if (typeof points !== \"undefined\") {\n    updates = { ...getSizeFromPoints(points), ...updates };\n  }\n\n  for (const key in updates) {\n    const value = (updates as any)[key];\n    if (typeof value !== \"undefined\") {\n      if (\n        (element as any)[key] === value &&\n        // if object, always update because its attrs could have changed\n        // (except for specific keys we handle below)\n        (typeof value !== \"object\" ||\n          value === null ||\n          key === \"groupIds\" ||\n          key === \"scale\")\n      ) {\n        continue;\n      }\n\n      if (key === \"scale\") {\n        const prevScale = (element as any)[key];\n        const nextScale = value;\n        if (prevScale[0] === nextScale[0] && prevScale[1] === nextScale[1]) {\n          continue;\n        }\n      } else if (key === \"points\") {\n        const prevPoints = (element as any)[key];\n        const nextPoints = value;\n        if (prevPoints.length === nextPoints.length) {\n          let didChangePoints = false;\n          let index = prevPoints.length;\n          while (--index) {\n            const prevPoint: Point = prevPoints[index];\n            const nextPoint: Point = nextPoints[index];\n            if (\n              prevPoint[0] !== nextPoint[0] ||\n              prevPoint[1] !== nextPoint[1]\n            ) {\n              didChangePoints = true;\n              break;\n            }\n          }\n          if (!didChangePoints) {\n            continue;\n          }\n        }\n      }\n\n      (element as any)[key] = value;\n      didChange = true;\n    }\n  }\n  if (!didChange) {\n    return element;\n  }\n\n  if (\n    typeof updates.height !== \"undefined\" ||\n    typeof updates.width !== \"undefined\" ||\n    typeof fileId != \"undefined\" ||\n    typeof points !== \"undefined\"\n  ) {\n    invalidateShapeForElement(element);\n  }\n\n  element.version++;\n  element.versionNonce = randomInteger();\n  element.updated = getUpdatedTimestamp();\n\n  if (informMutation) {\n    Scene.getScene(element)?.informMutation();\n  }\n\n  return element;\n};\n\nexport const newElementWith = <TElement extends ExcalidrawElement>(\n  element: TElement,\n  updates: ElementUpdate<TElement>,\n): TElement => {\n  let didChange = false;\n  for (const key in updates) {\n    const value = (updates as any)[key];\n    if (typeof value !== \"undefined\") {\n      if (\n        (element as any)[key] === value &&\n        // if object, always update because its attrs could have changed\n        (typeof value !== \"object\" || value === null)\n      ) {\n        continue;\n      }\n      didChange = true;\n    }\n  }\n\n  if (!didChange) {\n    return element;\n  }\n\n  return {\n    ...element,\n    ...updates,\n    updated: getUpdatedTimestamp(),\n    version: element.version + 1,\n    versionNonce: randomInteger(),\n  };\n};\n\n/**\n * Mutates element, bumping `version`, `versionNonce`, and `updated`.\n *\n * NOTE: does not trigger re-render.\n */\nexport const bumpVersion = (\n  element: Mutable<ExcalidrawElement>,\n  version?: ExcalidrawElement[\"version\"],\n) => {\n  element.version = (version ?? element.version) + 1;\n  element.versionNonce = randomInteger();\n  element.updated = getUpdatedTimestamp();\n  return element;\n};\n","import { ExcalidrawElement } from \"./types\";\nimport { mutateElement } from \"./mutateElement\";\nimport { isFreeDrawElement, isLinearElement } from \"./typeChecks\";\nimport { SHIFT_LOCKING_ANGLE } from \"../constants\";\n\nexport const isInvisiblySmallElement = (\n  element: ExcalidrawElement,\n): boolean => {\n  if (isLinearElement(element) || isFreeDrawElement(element)) {\n    return element.points.length < 2;\n  }\n  return element.width === 0 && element.height === 0;\n};\n\n/**\n * Makes a perfect shape or diagonal/horizontal/vertical line\n */\nexport const getPerfectElementSize = (\n  elementType: string,\n  width: number,\n  height: number,\n): { width: number; height: number } => {\n  const absWidth = Math.abs(width);\n  const absHeight = Math.abs(height);\n\n  if (\n    elementType === \"line\" ||\n    elementType === \"arrow\" ||\n    elementType === \"freedraw\"\n  ) {\n    const lockedAngle =\n      Math.round(Math.atan(absHeight / absWidth) / SHIFT_LOCKING_ANGLE) *\n      SHIFT_LOCKING_ANGLE;\n    if (lockedAngle === 0) {\n      height = 0;\n    } else if (lockedAngle === Math.PI / 2) {\n      width = 0;\n    } else {\n      height =\n        Math.round(absWidth * Math.tan(lockedAngle)) * Math.sign(height) ||\n        height;\n    }\n  } else if (elementType !== \"selection\") {\n    height = absWidth * Math.sign(height);\n  }\n  return { width, height };\n};\n\nexport const resizePerfectLineForNWHandler = (\n  element: ExcalidrawElement,\n  x: number,\n  y: number,\n) => {\n  const anchorX = element.x + element.width;\n  const anchorY = element.y + element.height;\n  const distanceToAnchorX = x - anchorX;\n  const distanceToAnchorY = y - anchorY;\n  if (Math.abs(distanceToAnchorX) < Math.abs(distanceToAnchorY) / 2) {\n    mutateElement(element, {\n      x: anchorX,\n      width: 0,\n      y,\n      height: -distanceToAnchorY,\n    });\n  } else if (Math.abs(distanceToAnchorY) < Math.abs(element.width) / 2) {\n    mutateElement(element, {\n      y: anchorY,\n      height: 0,\n    });\n  } else {\n    const nextHeight =\n      Math.sign(distanceToAnchorY) *\n      Math.sign(distanceToAnchorX) *\n      element.width;\n    mutateElement(element, {\n      x,\n      y: anchorY - nextHeight,\n      width: -distanceToAnchorX,\n      height: nextHeight,\n    });\n  }\n};\n\nexport const getNormalizedDimensions = (\n  element: Pick<ExcalidrawElement, \"width\" | \"height\" | \"x\" | \"y\">,\n): {\n  width: ExcalidrawElement[\"width\"];\n  height: ExcalidrawElement[\"height\"];\n  x: ExcalidrawElement[\"x\"];\n  y: ExcalidrawElement[\"y\"];\n} => {\n  const ret = {\n    width: element.width,\n    height: element.height,\n    x: element.x,\n    y: element.y,\n  };\n\n  if (element.width < 0) {\n    const nextWidth = Math.abs(element.width);\n    ret.width = nextWidth;\n    ret.x = element.x - nextWidth;\n  }\n\n  if (element.height < 0) {\n    const nextHeight = Math.abs(element.height);\n    ret.height = nextHeight;\n    ret.y = element.y - nextHeight;\n  }\n\n  return ret;\n};\n","import { GroupId, ExcalidrawElement, NonDeleted } from \"./element/types\";\nimport { AppState } from \"./types\";\nimport { getSelectedElements } from \"./scene\";\nimport { getBoundTextElement } from \"./element/textElement\";\n\nexport const selectGroup = (\n  groupId: GroupId,\n  appState: AppState,\n  elements: readonly NonDeleted<ExcalidrawElement>[],\n): AppState => {\n  const elementsInGroup = elements.filter((element) =>\n    element.groupIds.includes(groupId),\n  );\n\n  if (elementsInGroup.length < 2) {\n    if (\n      appState.selectedGroupIds[groupId] ||\n      appState.editingGroupId === groupId\n    ) {\n      return {\n        ...appState,\n        selectedGroupIds: { ...appState.selectedGroupIds, [groupId]: false },\n        editingGroupId: null,\n      };\n    }\n    return appState;\n  }\n\n  return {\n    ...appState,\n    selectedGroupIds: { ...appState.selectedGroupIds, [groupId]: true },\n    selectedElementIds: {\n      ...appState.selectedElementIds,\n      ...Object.fromEntries(\n        elementsInGroup.map((element) => [element.id, true]),\n      ),\n    },\n  };\n};\n\n/**\n * If the element's group is selected, don't render an individual\n * selection border around it.\n */\nexport const isSelectedViaGroup = (\n  appState: AppState,\n  element: ExcalidrawElement,\n) => getSelectedGroupForElement(appState, element) != null;\n\nexport const getSelectedGroupForElement = (\n  appState: AppState,\n  element: ExcalidrawElement,\n) =>\n  element.groupIds\n    .filter((groupId) => groupId !== appState.editingGroupId)\n    .find((groupId) => appState.selectedGroupIds[groupId]);\n\nexport const getSelectedGroupIds = (appState: AppState): GroupId[] =>\n  Object.entries(appState.selectedGroupIds)\n    .filter(([groupId, isSelected]) => isSelected)\n    .map(([groupId, isSelected]) => groupId);\n\n/**\n * When you select an element, you often want to actually select the whole group it's in, unless\n * you're currently editing that group.\n */\nexport const selectGroupsForSelectedElements = (\n  appState: AppState,\n  elements: readonly NonDeleted<ExcalidrawElement>[],\n): AppState => {\n  let nextAppState: AppState = { ...appState, selectedGroupIds: {} };\n\n  const selectedElements = getSelectedElements(elements, appState);\n\n  if (!selectedElements.length) {\n    return { ...nextAppState, editingGroupId: null };\n  }\n\n  for (const selectedElement of selectedElements) {\n    let groupIds = selectedElement.groupIds;\n    if (appState.editingGroupId) {\n      // handle the case where a group is nested within a group\n      const indexOfEditingGroup = groupIds.indexOf(appState.editingGroupId);\n      if (indexOfEditingGroup > -1) {\n        groupIds = groupIds.slice(0, indexOfEditingGroup);\n      }\n    }\n    if (groupIds.length > 0) {\n      const groupId = groupIds[groupIds.length - 1];\n      nextAppState = selectGroup(groupId, nextAppState, elements);\n    }\n  }\n\n  return nextAppState;\n};\n\nexport const editGroupForSelectedElement = (\n  appState: AppState,\n  element: NonDeleted<ExcalidrawElement>,\n): AppState => {\n  return {\n    ...appState,\n    editingGroupId: element.groupIds.length ? element.groupIds[0] : null,\n    selectedGroupIds: {},\n    selectedElementIds: {\n      [element.id]: true,\n    },\n  };\n};\n\nexport const isElementInGroup = (element: ExcalidrawElement, groupId: string) =>\n  element.groupIds.includes(groupId);\n\nexport const getElementsInGroup = (\n  elements: readonly ExcalidrawElement[],\n  groupId: string,\n) => elements.filter((element) => isElementInGroup(element, groupId));\n\nexport const getSelectedGroupIdForElement = (\n  element: ExcalidrawElement,\n  selectedGroupIds: { [groupId: string]: boolean },\n) => element.groupIds.find((groupId) => selectedGroupIds[groupId]);\n\nexport const getNewGroupIdsForDuplication = (\n  groupIds: ExcalidrawElement[\"groupIds\"],\n  editingGroupId: AppState[\"editingGroupId\"],\n  mapper: (groupId: GroupId) => GroupId,\n) => {\n  const copy = [...groupIds];\n  const positionOfEditingGroupId = editingGroupId\n    ? groupIds.indexOf(editingGroupId)\n    : -1;\n  const endIndex =\n    positionOfEditingGroupId > -1 ? positionOfEditingGroupId : groupIds.length;\n  for (let index = 0; index < endIndex; index++) {\n    copy[index] = mapper(copy[index]);\n  }\n\n  return copy;\n};\n\nexport const addToGroup = (\n  prevGroupIds: ExcalidrawElement[\"groupIds\"],\n  newGroupId: GroupId,\n  editingGroupId: AppState[\"editingGroupId\"],\n) => {\n  // insert before the editingGroupId, or push to the end.\n  const groupIds = [...prevGroupIds];\n  const positionOfEditingGroupId = editingGroupId\n    ? groupIds.indexOf(editingGroupId)\n    : -1;\n  const positionToInsert =\n    positionOfEditingGroupId > -1 ? positionOfEditingGroupId : groupIds.length;\n  groupIds.splice(positionToInsert, 0, newGroupId);\n  return groupIds;\n};\n\nexport const removeFromSelectedGroups = (\n  groupIds: ExcalidrawElement[\"groupIds\"],\n  selectedGroupIds: { [groupId: string]: boolean },\n) => groupIds.filter((groupId) => !selectedGroupIds[groupId]);\n\nexport const getMaximumGroups = (\n  elements: ExcalidrawElement[],\n): ExcalidrawElement[][] => {\n  const groups: Map<String, ExcalidrawElement[]> = new Map<\n    String,\n    ExcalidrawElement[]\n  >();\n\n  elements.forEach((element: ExcalidrawElement) => {\n    const groupId =\n      element.groupIds.length === 0\n        ? element.id\n        : element.groupIds[element.groupIds.length - 1];\n\n    const currentGroupMembers = groups.get(groupId) || [];\n\n    // Include bound text if present when grouping\n    const boundTextElement = getBoundTextElement(element);\n    if (boundTextElement) {\n      currentGroupMembers.push(boundTextElement);\n    }\n    groups.set(groupId, [...currentGroupMembers, element]);\n  });\n\n  return Array.from(groups.values());\n};\n","import {\n  ExcalidrawElement,\n  ExcalidrawImageElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n  ExcalidrawGenericElement,\n  NonDeleted,\n  TextAlign,\n  GroupId,\n  VerticalAlign,\n  Arrowhead,\n  ExcalidrawFreeDrawElement,\n  FontFamilyValues,\n  ExcalidrawRectangleElement,\n} from \"../element/types\";\nimport { getFontString, getUpdatedTimestamp, isTestEnv } from \"../utils\";\nimport { randomInteger, randomId } from \"../random\";\nimport { mutateElement, newElementWith } from \"./mutateElement\";\nimport { getNewGroupIdsForDuplication } from \"../groups\";\nimport { AppState } from \"../types\";\nimport { getElementAbsoluteCoords } from \".\";\nimport { adjustXYWithRotation } from \"../math\";\nimport { getResizedElementAbsoluteCoords } from \"./bounds\";\nimport { getContainerElement, measureText, wrapText } from \"./textElement\";\nimport { BOUND_TEXT_PADDING, VERTICAL_ALIGN } from \"../constants\";\n\ntype ElementConstructorOpts = MarkOptional<\n  Omit<ExcalidrawGenericElement, \"id\" | \"type\" | \"isDeleted\" | \"updated\">,\n  | \"width\"\n  | \"height\"\n  | \"angle\"\n  | \"groupIds\"\n  | \"boundElements\"\n  | \"seed\"\n  | \"version\"\n  | \"versionNonce\"\n  | \"link\"\n>;\n\nconst _newElementBase = <T extends ExcalidrawElement>(\n  type: T[\"type\"],\n  {\n    x,\n    y,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    roughness,\n    opacity,\n    width = 0,\n    height = 0,\n    angle = 0,\n    groupIds = [],\n    strokeSharpness,\n    boundElements = null,\n    link = null,\n    ...rest\n  }: ElementConstructorOpts & Omit<Partial<ExcalidrawGenericElement>, \"type\">,\n) => {\n  const element = {\n    id: rest.id || randomId(),\n    type,\n    x,\n    y,\n    width,\n    height,\n    angle,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    roughness,\n    opacity,\n    groupIds,\n    strokeSharpness,\n    seed: rest.seed ?? randomInteger(),\n    version: rest.version || 1,\n    versionNonce: rest.versionNonce ?? 0,\n    isDeleted: false as false,\n    boundElements,\n    updated: getUpdatedTimestamp(),\n    link,\n  };\n  return element;\n};\n\nexport const newElement = (\n  opts: {\n    type: ExcalidrawGenericElement[\"type\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawGenericElement> =>\n  _newElementBase<ExcalidrawGenericElement>(opts.type, opts);\n\n/** computes element x/y offset based on textAlign/verticalAlign */\nconst getTextElementPositionOffsets = (\n  opts: {\n    textAlign: ExcalidrawTextElement[\"textAlign\"];\n    verticalAlign: ExcalidrawTextElement[\"verticalAlign\"];\n  },\n  metrics: {\n    width: number;\n    height: number;\n  },\n) => {\n  return {\n    x:\n      opts.textAlign === \"center\"\n        ? metrics.width / 2\n        : opts.textAlign === \"right\"\n        ? metrics.width\n        : 0,\n    y: opts.verticalAlign === \"middle\" ? metrics.height / 2 : 0,\n  };\n};\n\nexport const newTextElement = (\n  opts: {\n    text: string;\n    fontSize: number;\n    fontFamily: FontFamilyValues;\n    textAlign: TextAlign;\n    verticalAlign: VerticalAlign;\n    containerId?: ExcalidrawRectangleElement[\"id\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawTextElement> => {\n  const metrics = measureText(opts.text, getFontString(opts));\n  const offsets = getTextElementPositionOffsets(opts, metrics);\n  const textElement = newElementWith(\n    {\n      ..._newElementBase<ExcalidrawTextElement>(\"text\", opts),\n      text: opts.text,\n      fontSize: opts.fontSize,\n      fontFamily: opts.fontFamily,\n      textAlign: opts.textAlign,\n      verticalAlign: opts.verticalAlign,\n      x: opts.x - offsets.x,\n      y: opts.y - offsets.y,\n      width: metrics.width,\n      height: metrics.height,\n      baseline: metrics.baseline,\n      containerId: opts.containerId || null,\n      originalText: opts.text,\n    },\n    {},\n  );\n  return textElement;\n};\n\nconst getAdjustedDimensions = (\n  element: ExcalidrawTextElement,\n  nextText: string,\n): {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  baseline: number;\n} => {\n  let maxWidth = null;\n  const container = getContainerElement(element);\n  if (container) {\n    maxWidth = container.width - BOUND_TEXT_PADDING * 2;\n  }\n  const {\n    width: nextWidth,\n    height: nextHeight,\n    baseline: nextBaseline,\n  } = measureText(nextText, getFontString(element), maxWidth);\n  const { textAlign, verticalAlign } = element;\n  let x: number;\n  let y: number;\n  if (\n    textAlign === \"center\" &&\n    verticalAlign === VERTICAL_ALIGN.MIDDLE &&\n    !element.containerId\n  ) {\n    const prevMetrics = measureText(\n      element.text,\n      getFontString(element),\n      maxWidth,\n    );\n    const offsets = getTextElementPositionOffsets(element, {\n      width: nextWidth - prevMetrics.width,\n      height: nextHeight - prevMetrics.height,\n    });\n\n    x = element.x - offsets.x;\n    y = element.y - offsets.y;\n  } else {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n\n    const [nextX1, nextY1, nextX2, nextY2] = getResizedElementAbsoluteCoords(\n      element,\n      nextWidth,\n      nextHeight,\n    );\n    const deltaX1 = (x1 - nextX1) / 2;\n    const deltaY1 = (y1 - nextY1) / 2;\n    const deltaX2 = (x2 - nextX2) / 2;\n    const deltaY2 = (y2 - nextY2) / 2;\n\n    [x, y] = adjustXYWithRotation(\n      {\n        s: true,\n        e: textAlign === \"center\" || textAlign === \"left\",\n        w: textAlign === \"center\" || textAlign === \"right\",\n      },\n      element.x,\n      element.y,\n      element.angle,\n      deltaX1,\n      deltaY1,\n      deltaX2,\n      deltaY2,\n    );\n  }\n\n  // make sure container dimensions are set properly when\n  // text editor overflows beyond viewport dimensions\n  if (container) {\n    let height = container.height;\n    let width = container.width;\n    if (nextHeight > height - BOUND_TEXT_PADDING * 2) {\n      height = nextHeight + BOUND_TEXT_PADDING * 2;\n    }\n    if (nextWidth > width - BOUND_TEXT_PADDING * 2) {\n      width = nextWidth + BOUND_TEXT_PADDING * 2;\n    }\n    if (height !== container.height || width !== container.width) {\n      mutateElement(container, { height, width });\n    }\n  }\n  return {\n    width: nextWidth,\n    height: nextHeight,\n    x: Number.isFinite(x) ? x : element.x,\n    y: Number.isFinite(y) ? y : element.y,\n    baseline: nextBaseline,\n  };\n};\n\nexport const updateTextElement = (\n  element: ExcalidrawTextElement,\n  {\n    text,\n    isDeleted,\n    originalText,\n  }: {\n    text: string;\n    isDeleted?: boolean;\n    originalText: string;\n  },\n): ExcalidrawTextElement => {\n  const container = getContainerElement(element);\n  if (container) {\n    text = wrapText(text, getFontString(element), container.width);\n  }\n  const dimensions = getAdjustedDimensions(element, text);\n  return newElementWith(element, {\n    text,\n    originalText,\n    isDeleted: isDeleted ?? element.isDeleted,\n    ...dimensions,\n  });\n};\n\nexport const newFreeDrawElement = (\n  opts: {\n    type: \"freedraw\";\n    points?: ExcalidrawFreeDrawElement[\"points\"];\n    simulatePressure: boolean;\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawFreeDrawElement> => {\n  return {\n    ..._newElementBase<ExcalidrawFreeDrawElement>(opts.type, opts),\n    points: opts.points || [],\n    pressures: [],\n    simulatePressure: opts.simulatePressure,\n    lastCommittedPoint: null,\n  };\n};\n\nexport const newLinearElement = (\n  opts: {\n    type: ExcalidrawLinearElement[\"type\"];\n    startArrowhead: Arrowhead | null;\n    endArrowhead: Arrowhead | null;\n    points?: ExcalidrawLinearElement[\"points\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawLinearElement> => {\n  return {\n    ..._newElementBase<ExcalidrawLinearElement>(opts.type, opts),\n    points: opts.points || [],\n    lastCommittedPoint: null,\n    startBinding: null,\n    endBinding: null,\n    startArrowhead: opts.startArrowhead,\n    endArrowhead: opts.endArrowhead,\n  };\n};\n\nexport const newImageElement = (\n  opts: {\n    type: ExcalidrawImageElement[\"type\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawImageElement> => {\n  return {\n    ..._newElementBase<ExcalidrawImageElement>(\"image\", opts),\n    // in the future we'll support changing stroke color for some SVG elements,\n    // and `transparent` will likely mean \"use original colors of the image\"\n    strokeColor: \"transparent\",\n    status: \"pending\",\n    fileId: null,\n    scale: [1, 1],\n  };\n};\n\n// Simplified deep clone for the purpose of cloning ExcalidrawElement only\n// (doesn't clone Date, RegExp, Map, Set, Typed arrays etc.)\n//\n// Adapted from https://github.com/lukeed/klona\nexport const deepCopyElement = (val: any, depth: number = 0) => {\n  if (val == null || typeof val !== \"object\") {\n    return val;\n  }\n\n  if (Object.prototype.toString.call(val) === \"[object Object]\") {\n    const tmp =\n      typeof val.constructor === \"function\"\n        ? Object.create(Object.getPrototypeOf(val))\n        : {};\n    for (const key in val) {\n      if (val.hasOwnProperty(key)) {\n        // don't copy top-level shape property, which we want to regenerate\n        if (depth === 0 && (key === \"shape\" || key === \"canvas\")) {\n          continue;\n        }\n        tmp[key] = deepCopyElement(val[key], depth + 1);\n      }\n    }\n    return tmp;\n  }\n\n  if (Array.isArray(val)) {\n    let k = val.length;\n    const arr = new Array(k);\n    while (k--) {\n      arr[k] = deepCopyElement(val[k], depth + 1);\n    }\n    return arr;\n  }\n\n  return val;\n};\n\n/**\n * Duplicate an element, often used in the alt-drag operation.\n * Note that this method has gotten a bit complicated since the\n * introduction of gruoping/ungrouping elements.\n * @param editingGroupId The current group being edited. The new\n *                       element will inherit this group and its\n *                       parents.\n * @param groupIdMapForOperation A Map that maps old group IDs to\n *                               duplicated ones. If you are duplicating\n *                               multiple elements at once, share this map\n *                               amongst all of them\n * @param element Element to duplicate\n * @param overrides Any element properties to override\n */\nexport const duplicateElement = <TElement extends Mutable<ExcalidrawElement>>(\n  editingGroupId: AppState[\"editingGroupId\"],\n  groupIdMapForOperation: Map<GroupId, GroupId>,\n  element: TElement,\n  overrides?: Partial<TElement>,\n): TElement => {\n  let copy: TElement = deepCopyElement(element);\n  if (isTestEnv()) {\n    copy.id = `${copy.id}_copy`;\n    // `window.h` may not be defined in some unit tests\n    if (\n      window.h?.app\n        ?.getSceneElementsIncludingDeleted()\n        .find((el) => el.id === copy.id)\n    ) {\n      copy.id += \"_copy\";\n    }\n  } else {\n    copy.id = randomId();\n  }\n  copy.updated = getUpdatedTimestamp();\n  copy.seed = randomInteger();\n  copy.groupIds = getNewGroupIdsForDuplication(\n    copy.groupIds,\n    editingGroupId,\n    (groupId) => {\n      if (!groupIdMapForOperation.has(groupId)) {\n        groupIdMapForOperation.set(groupId, randomId());\n      }\n      return groupIdMapForOperation.get(groupId)!;\n    },\n  );\n  if (overrides) {\n    copy = Object.assign(copy, overrides);\n  }\n  return copy;\n};\n","import { ExcalidrawElement, PointerType } from \"./types\";\n\nimport { getElementAbsoluteCoords, Bounds } from \"./bounds\";\nimport { rotate } from \"../math\";\nimport { Zoom } from \"../types\";\nimport { isTextElement } from \".\";\n\nexport type TransformHandleDirection =\n  | \"n\"\n  | \"s\"\n  | \"w\"\n  | \"e\"\n  | \"nw\"\n  | \"ne\"\n  | \"sw\"\n  | \"se\";\n\nexport type TransformHandleType = TransformHandleDirection | \"rotation\";\n\nexport type TransformHandle = [number, number, number, number];\nexport type TransformHandles = Partial<{\n  [T in TransformHandleType]: TransformHandle;\n}>;\nexport type MaybeTransformHandleType = TransformHandleType | false;\n\nconst transformHandleSizes: { [k in PointerType]: number } = {\n  mouse: 8,\n  pen: 16,\n  touch: 28,\n};\n\nconst ROTATION_RESIZE_HANDLE_GAP = 16;\n\nexport const OMIT_SIDES_FOR_MULTIPLE_ELEMENTS = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n};\n\nconst OMIT_SIDES_FOR_TEXT_ELEMENT = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n};\n\nconst OMIT_SIDES_FOR_LINE_SLASH = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  nw: true,\n  se: true,\n};\n\nconst OMIT_SIDES_FOR_LINE_BACKSLASH = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  ne: true,\n  sw: true,\n};\n\nconst generateTransformHandle = (\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n): TransformHandle => {\n  const [xx, yy] = rotate(x + width / 2, y + height / 2, cx, cy, angle);\n  return [xx - width / 2, yy - height / 2, width, height];\n};\n\nexport const getTransformHandlesFromCoords = (\n  [x1, y1, x2, y2]: Bounds,\n  angle: number,\n  zoom: Zoom,\n  pointerType: PointerType,\n  omitSides: { [T in TransformHandleType]?: boolean } = {},\n): TransformHandles => {\n  const size = transformHandleSizes[pointerType];\n  const handleWidth = size / zoom.value;\n  const handleHeight = size / zoom.value;\n\n  const handleMarginX = size / zoom.value;\n  const handleMarginY = size / zoom.value;\n\n  const width = x2 - x1;\n  const height = y2 - y1;\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n\n  const dashedLineMargin = 4 / zoom.value;\n\n  const centeringOffset = (size - 8) / (2 * zoom.value);\n\n  const transformHandles: TransformHandles = {\n    nw: omitSides.nw\n      ? undefined\n      : generateTransformHandle(\n          x1 - dashedLineMargin - handleMarginX + centeringOffset,\n          y1 - dashedLineMargin - handleMarginY + centeringOffset,\n          handleWidth,\n          handleHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    ne: omitSides.ne\n      ? undefined\n      : generateTransformHandle(\n          x2 + dashedLineMargin - centeringOffset,\n          y1 - dashedLineMargin - handleMarginY + centeringOffset,\n          handleWidth,\n          handleHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    sw: omitSides.sw\n      ? undefined\n      : generateTransformHandle(\n          x1 - dashedLineMargin - handleMarginX + centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handleWidth,\n          handleHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    se: omitSides.se\n      ? undefined\n      : generateTransformHandle(\n          x2 + dashedLineMargin - centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handleWidth,\n          handleHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    rotation: omitSides.rotation\n      ? undefined\n      : generateTransformHandle(\n          x1 + width / 2 - handleWidth / 2,\n          y1 -\n            dashedLineMargin -\n            handleMarginY +\n            centeringOffset -\n            ROTATION_RESIZE_HANDLE_GAP / zoom.value,\n          handleWidth,\n          handleHeight,\n          cx,\n          cy,\n          angle,\n        ),\n  };\n\n  // We only want to show height handles (all cardinal directions)  above a certain size\n  // Note: we render using \"mouse\" size so we should also use \"mouse\" size for this check\n  const minimumSizeForEightHandles =\n    (5 * transformHandleSizes.mouse) / zoom.value;\n  if (Math.abs(width) > minimumSizeForEightHandles) {\n    if (!omitSides.n) {\n      transformHandles.n = generateTransformHandle(\n        x1 + width / 2 - handleWidth / 2,\n        y1 - dashedLineMargin - handleMarginY + centeringOffset,\n        handleWidth,\n        handleHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides.s) {\n      transformHandles.s = generateTransformHandle(\n        x1 + width / 2 - handleWidth / 2,\n        y2 + dashedLineMargin - centeringOffset,\n        handleWidth,\n        handleHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n  if (Math.abs(height) > minimumSizeForEightHandles) {\n    if (!omitSides.w) {\n      transformHandles.w = generateTransformHandle(\n        x1 - dashedLineMargin - handleMarginX + centeringOffset,\n        y1 + height / 2 - handleHeight / 2,\n        handleWidth,\n        handleHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides.e) {\n      transformHandles.e = generateTransformHandle(\n        x2 + dashedLineMargin - centeringOffset,\n        y1 + height / 2 - handleHeight / 2,\n        handleWidth,\n        handleHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n\n  return transformHandles;\n};\n\nexport const getTransformHandles = (\n  element: ExcalidrawElement,\n  zoom: Zoom,\n  pointerType: PointerType = \"mouse\",\n): TransformHandles => {\n  let omitSides: { [T in TransformHandleType]?: boolean } = {};\n  if (\n    element.type === \"arrow\" ||\n    element.type === \"line\" ||\n    element.type === \"freedraw\"\n  ) {\n    if (element.points.length === 2) {\n      // only check the last point because starting point is always (0,0)\n      const [, p1] = element.points;\n      if (p1[0] === 0 || p1[1] === 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      } else if (p1[0] > 0 && p1[1] < 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_SLASH;\n      } else if (p1[0] > 0 && p1[1] > 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      } else if (p1[0] < 0 && p1[1] > 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_SLASH;\n      } else if (p1[0] < 0 && p1[1] < 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      }\n    }\n  } else if (isTextElement(element)) {\n    omitSides = OMIT_SIDES_FOR_TEXT_ELEMENT;\n  }\n\n  return getTransformHandlesFromCoords(\n    getElementAbsoluteCoords(element),\n    element.angle,\n    zoom,\n    pointerType,\n    omitSides,\n  );\n};\n","/**\n * This is a 2D Projective Geometric Algebra implementation.\n *\n * For wider context on geometric algebra visit see https://bivector.net.\n *\n * For this specific algebra see cheatsheet https://bivector.net/2DPGA.pdf.\n *\n * Converted from generator written by enki, with a ton of added on top.\n *\n * This library uses 8-vectors to represent points, directions and lines\n * in 2D space.\n *\n * An array `[a, b, c, d, e, f, g, h]` represents a n(8)vector:\n *   a + b*e0 + c*e1 + d*e2 + e*e01 + f*e20 + g*e12 + h*e012\n *\n * See GAPoint, GALine, GADirection and GATransform modules for common\n * operations.\n */\n\nexport type Point = NVector;\nexport type Direction = NVector;\nexport type Line = NVector;\nexport type Transform = NVector;\n\nexport const point = (x: number, y: number): Point => [0, 0, 0, 0, y, x, 1, 0];\n\nexport const origin = (): Point => [0, 0, 0, 0, 0, 0, 1, 0];\n\nexport const direction = (x: number, y: number): Direction => {\n  const norm = Math.hypot(x, y); // same as `inorm(direction(x, y))`\n  return [0, 0, 0, 0, y / norm, x / norm, 0, 0];\n};\n\nexport const offset = (x: number, y: number): Direction => [\n  0,\n  0,\n  0,\n  0,\n  y,\n  x,\n  0,\n  0,\n];\n\n/// This is the \"implementation\" part of the library\n\ntype NVector = readonly [\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n];\n\n// These are labels for what each number in an nvector represents\nconst NVECTOR_BASE = [\"1\", \"e0\", \"e1\", \"e2\", \"e01\", \"e20\", \"e12\", \"e012\"];\n\n// Used to represent points, lines and transformations\nexport const nvector = (value: number = 0, index: number = 0): NVector => {\n  const result = [0, 0, 0, 0, 0, 0, 0, 0];\n  if (index < 0 || index > 7) {\n    throw new Error(`Expected \\`index\\` between 0 and 7, got \\`${index}\\``);\n  }\n  if (value !== 0) {\n    result[index] = value;\n  }\n  return result as unknown as NVector;\n};\n\nconst STRING_EPSILON = 0.000001;\nexport const toString = (nvector: NVector): string => {\n  const result = nvector\n    .map((value, index) =>\n      Math.abs(value) > STRING_EPSILON\n        ? value.toFixed(7).replace(/(\\.|0+)$/, \"\") +\n          (index > 0 ? NVECTOR_BASE[index] : \"\")\n        : null,\n    )\n    .filter((representation) => representation != null)\n    .join(\" + \");\n  return result === \"\" ? \"0\" : result;\n};\n\n// Reverse the order of the basis blades.\nexport const reverse = (nvector: NVector): NVector => [\n  nvector[0],\n  nvector[1],\n  nvector[2],\n  nvector[3],\n  -nvector[4],\n  -nvector[5],\n  -nvector[6],\n  -nvector[7],\n];\n\n// Poincare duality operator.\nexport const dual = (nvector: NVector): NVector => [\n  nvector[7],\n  nvector[6],\n  nvector[5],\n  nvector[4],\n  nvector[3],\n  nvector[2],\n  nvector[1],\n  nvector[0],\n];\n\n// Clifford Conjugation\nexport const conjugate = (nvector: NVector): NVector => [\n  nvector[0],\n  -nvector[1],\n  -nvector[2],\n  -nvector[3],\n  -nvector[4],\n  -nvector[5],\n  -nvector[6],\n  nvector[7],\n];\n\n// Main involution\nexport const involute = (nvector: NVector): NVector => [\n  nvector[0],\n  -nvector[1],\n  -nvector[2],\n  -nvector[3],\n  nvector[4],\n  nvector[5],\n  nvector[6],\n  -nvector[7],\n];\n\n// Multivector addition\nexport const add = (a: NVector, b: NVector | number): NVector => {\n  if (isNumber(b)) {\n    return [a[0] + b, a[1], a[2], a[3], a[4], a[5], a[6], a[7]];\n  }\n  return [\n    a[0] + b[0],\n    a[1] + b[1],\n    a[2] + b[2],\n    a[3] + b[3],\n    a[4] + b[4],\n    a[5] + b[5],\n    a[6] + b[6],\n    a[7] + b[7],\n  ];\n};\n\n// Multivector subtraction\nexport const sub = (a: NVector, b: NVector | number): NVector => {\n  if (isNumber(b)) {\n    return [a[0] - b, a[1], a[2], a[3], a[4], a[5], a[6], a[7]];\n  }\n  return [\n    a[0] - b[0],\n    a[1] - b[1],\n    a[2] - b[2],\n    a[3] - b[3],\n    a[4] - b[4],\n    a[5] - b[5],\n    a[6] - b[6],\n    a[7] - b[7],\n  ];\n};\n\n// The geometric product.\nexport const mul = (a: NVector, b: NVector | number): NVector => {\n  if (isNumber(b)) {\n    return [\n      a[0] * b,\n      a[1] * b,\n      a[2] * b,\n      a[3] * b,\n      a[4] * b,\n      a[5] * b,\n      a[6] * b,\n      a[7] * b,\n    ];\n  }\n  return [\n    mulScalar(a, b),\n    b[1] * a[0] +\n      b[0] * a[1] -\n      b[4] * a[2] +\n      b[5] * a[3] +\n      b[2] * a[4] -\n      b[3] * a[5] -\n      b[7] * a[6] -\n      b[6] * a[7],\n    b[2] * a[0] + b[0] * a[2] - b[6] * a[3] + b[3] * a[6],\n    b[3] * a[0] + b[6] * a[2] + b[0] * a[3] - b[2] * a[6],\n    b[4] * a[0] +\n      b[2] * a[1] -\n      b[1] * a[2] +\n      b[7] * a[3] +\n      b[0] * a[4] +\n      b[6] * a[5] -\n      b[5] * a[6] +\n      b[3] * a[7],\n    b[5] * a[0] -\n      b[3] * a[1] +\n      b[7] * a[2] +\n      b[1] * a[3] -\n      b[6] * a[4] +\n      b[0] * a[5] +\n      b[4] * a[6] +\n      b[2] * a[7],\n    b[6] * a[0] + b[3] * a[2] - b[2] * a[3] + b[0] * a[6],\n    b[7] * a[0] +\n      b[6] * a[1] +\n      b[5] * a[2] +\n      b[4] * a[3] +\n      b[3] * a[4] +\n      b[2] * a[5] +\n      b[1] * a[6] +\n      b[0] * a[7],\n  ];\n};\n\nexport const mulScalar = (a: NVector, b: NVector): number =>\n  b[0] * a[0] + b[2] * a[2] + b[3] * a[3] - b[6] * a[6];\n\n// The outer/exterior/wedge product.\nexport const meet = (a: NVector, b: NVector): NVector => [\n  b[0] * a[0],\n  b[1] * a[0] + b[0] * a[1],\n  b[2] * a[0] + b[0] * a[2],\n  b[3] * a[0] + b[0] * a[3],\n  b[4] * a[0] + b[2] * a[1] - b[1] * a[2] + b[0] * a[4],\n  b[5] * a[0] - b[3] * a[1] + b[1] * a[3] + b[0] * a[5],\n  b[6] * a[0] + b[3] * a[2] - b[2] * a[3] + b[0] * a[6],\n  b[7] * a[0] +\n    b[6] * a[1] +\n    b[5] * a[2] +\n    b[4] * a[3] +\n    b[3] * a[4] +\n    b[2] * a[5] +\n    b[1] * a[6],\n];\n\n// The regressive product.\nexport const join = (a: NVector, b: NVector): NVector => [\n  joinScalar(a, b),\n  a[1] * b[7] + a[4] * b[5] - a[5] * b[4] + a[7] * b[1],\n  a[2] * b[7] - a[4] * b[6] + a[6] * b[4] + a[7] * b[2],\n  a[3] * b[7] + a[5] * b[6] - a[6] * b[5] + a[7] * b[3],\n  a[4] * b[7] + a[7] * b[4],\n  a[5] * b[7] + a[7] * b[5],\n  a[6] * b[7] + a[7] * b[6],\n  a[7] * b[7],\n];\n\nexport const joinScalar = (a: NVector, b: NVector): number =>\n  a[0] * b[7] +\n  a[1] * b[6] +\n  a[2] * b[5] +\n  a[3] * b[4] +\n  a[4] * b[3] +\n  a[5] * b[2] +\n  a[6] * b[1] +\n  a[7] * b[0];\n\n// The inner product.\nexport const dot = (a: NVector, b: NVector): NVector => [\n  b[0] * a[0] + b[2] * a[2] + b[3] * a[3] - b[6] * a[6],\n  b[1] * a[0] +\n    b[0] * a[1] -\n    b[4] * a[2] +\n    b[5] * a[3] +\n    b[2] * a[4] -\n    b[3] * a[5] -\n    b[7] * a[6] -\n    b[6] * a[7],\n  b[2] * a[0] + b[0] * a[2] - b[6] * a[3] + b[3] * a[6],\n  b[3] * a[0] + b[6] * a[2] + b[0] * a[3] - b[2] * a[6],\n  b[4] * a[0] + b[7] * a[3] + b[0] * a[4] + b[3] * a[7],\n  b[5] * a[0] + b[7] * a[2] + b[0] * a[5] + b[2] * a[7],\n  b[6] * a[0] + b[0] * a[6],\n  b[7] * a[0] + b[0] * a[7],\n];\n\nexport const norm = (a: NVector): number =>\n  Math.sqrt(Math.abs(a[0] * a[0] - a[2] * a[2] - a[3] * a[3] + a[6] * a[6]));\n\nexport const inorm = (a: NVector): number =>\n  Math.sqrt(Math.abs(a[7] * a[7] - a[5] * a[5] - a[4] * a[4] + a[1] * a[1]));\n\nexport const normalized = (a: NVector): NVector => {\n  const n = norm(a);\n  if (n === 0 || n === 1) {\n    return a;\n  }\n  const sign = a[6] < 0 ? -1 : 1;\n  return mul(a, sign / n);\n};\n\nexport const inormalized = (a: NVector): NVector => {\n  const n = inorm(a);\n  if (n === 0 || n === 1) {\n    return a;\n  }\n  return mul(a, 1 / n);\n};\n\nconst isNumber = (a: any): a is number => typeof a === \"number\";\n\nexport const E0: NVector = nvector(1, 1);\nexport const E1: NVector = nvector(1, 2);\nexport const E2: NVector = nvector(1, 3);\nexport const E01: NVector = nvector(1, 4);\nexport const E20: NVector = nvector(1, 5);\nexport const E12: NVector = nvector(1, 6);\nexport const E012: NVector = nvector(1, 7);\nexport const I = E012;\n","import * as GA from \"./ga\";\nimport { Line, Point } from \"./ga\";\n\n/**\n * A line is stored as an array `[0, c, a, b, 0, 0, 0, 0]` representing:\n *   c * e0 + a * e1 + b*e2\n *\n * This maps to a standard formula `a * x + b * y + c`.\n *\n * `(-b, a)` corresponds to a 2D vector parallel to the line. The lines\n * have a natural orientation, corresponding to that vector.\n *\n * The magnitude (\"norm\") of the line is `sqrt(a ^ 2 + b ^ 2)`.\n * `c / norm(line)` is the oriented distance from line to origin.\n */\n\n// Returns line with direction (x, y) through origin\nexport const vector = (x: number, y: number): Line =>\n  GA.normalized([0, 0, -y, x, 0, 0, 0, 0]);\n\n// For equation ax + by + c = 0.\nexport const equation = (a: number, b: number, c: number): Line =>\n  GA.normalized([0, c, a, b, 0, 0, 0, 0]);\n\nexport const through = (from: Point, to: Point): Line =>\n  GA.normalized(GA.join(to, from));\n\nexport const orthogonal = (line: Line, point: Point): Line =>\n  GA.dot(line, point);\n\n// Returns a line perpendicular to the line through `against` and `intersection`\n// going through `intersection`.\nexport const orthogonalThrough = (against: Point, intersection: Point): Line =>\n  orthogonal(through(against, intersection), intersection);\n\nexport const parallel = (line: Line, distance: number): Line => {\n  const result = line.slice();\n  result[1] -= distance;\n  return result as unknown as Line;\n};\n\nexport const parallelThrough = (line: Line, point: Point): Line =>\n  orthogonal(orthogonal(point, line), point);\n\nexport const distance = (line1: Line, line2: Line): number =>\n  GA.inorm(GA.meet(line1, line2));\n\nexport const angle = (line1: Line, line2: Line): number =>\n  Math.acos(GA.dot(line1, line2)[0]);\n\n// The orientation of the line\nexport const sign = (line: Line): number => Math.sign(line[1]);\n","import * as GA from \"./ga\";\nimport * as GALine from \"./galines\";\nimport { Point, Line, join } from \"./ga\";\n\nexport const from = ([x, y]: readonly [number, number]): Point => [\n  0,\n  0,\n  0,\n  0,\n  y,\n  x,\n  1,\n  0,\n];\n\nexport const toTuple = (point: Point): [number, number] => [point[5], point[4]];\n\nexport const abs = (point: Point): Point => [\n  0,\n  0,\n  0,\n  0,\n  Math.abs(point[4]),\n  Math.abs(point[5]),\n  1,\n  0,\n];\n\nexport const intersect = (line1: Line, line2: Line): Point =>\n  GA.normalized(GA.meet(line1, line2));\n\n// Projects `point` onto the `line`.\n// The returned point is the closest point on the `line` to the `point`.\nexport const project = (point: Point, line: Line): Point =>\n  intersect(GALine.orthogonal(line, point), line);\n\nexport const distance = (point1: Point, point2: Point): number =>\n  GA.norm(join(point1, point2));\n\nexport const distanceToLine = (point: Point, line: Line): number =>\n  GA.joinScalar(point, line);\n","import * as GA from \"./ga\";\nimport { Line, Direction, Point } from \"./ga\";\n\n/**\n * A direction is stored as an array `[0, 0, 0, 0, y, x, 0, 0]` representing\n * vector `(x, y)`.\n */\n\nexport const from = (point: Point): Point => [\n  0,\n  0,\n  0,\n  0,\n  point[4],\n  point[5],\n  0,\n  0,\n];\n\nexport const fromTo = (from: Point, to: Point): Direction =>\n  GA.inormalized([0, 0, 0, 0, to[4] - from[4], to[5] - from[5], 0, 0]);\n\nexport const orthogonal = (direction: Direction): Direction =>\n  GA.inormalized([0, 0, 0, 0, -direction[5], direction[4], 0, 0]);\n\nexport const orthogonalToLine = (line: Line): Direction => GA.mul(line, GA.I);\n","import * as GA from \"./ga\";\nimport { Line, Direction, Point, Transform } from \"./ga\";\nimport * as GADirection from \"./gadirections\";\n\n/**\n * TODO: docs\n */\n\nexport const rotation = (pivot: Point, angle: number): Transform =>\n  GA.add(GA.mul(pivot, Math.sin(angle / 2)), Math.cos(angle / 2));\n\nexport const translation = (direction: Direction): Transform => [\n  1,\n  0,\n  0,\n  0,\n  -(0.5 * direction[5]),\n  0.5 * direction[4],\n  0,\n  0,\n];\n\nexport const translationOrthogonal = (\n  direction: Direction,\n  distance: number,\n): Transform => {\n  const scale = 0.5 * distance;\n  return [1, 0, 0, 0, scale * direction[4], scale * direction[5], 0, 0];\n};\n\nexport const translationAlong = (line: Line, distance: number): Transform =>\n  GA.add(GA.mul(GADirection.orthogonalToLine(line), 0.5 * distance), 1);\n\nexport const compose = (motor1: Transform, motor2: Transform): Transform =>\n  GA.mul(motor2, motor1);\n\nexport const apply = (\n  motor: Transform,\n  nvector: Point | Direction | Line,\n): Point | Direction | Line =>\n  GA.normalized(GA.mul(GA.mul(motor, nvector), GA.reverse(motor)));\n","import * as GA from \"../ga\";\nimport * as GAPoint from \"../gapoints\";\nimport * as GADirection from \"../gadirections\";\nimport * as GALine from \"../galines\";\nimport * as GATransform from \"../gatransforms\";\n\nimport {\n  distance2d,\n  rotatePoint,\n  isPathALoop,\n  isPointInPolygon,\n  rotate,\n} from \"../math\";\nimport { pointsOnBezierCurves } from \"points-on-curve\";\n\nimport {\n  NonDeletedExcalidrawElement,\n  ExcalidrawBindableElement,\n  ExcalidrawElement,\n  ExcalidrawRectangleElement,\n  ExcalidrawDiamondElement,\n  ExcalidrawTextElement,\n  ExcalidrawEllipseElement,\n  NonDeleted,\n  ExcalidrawFreeDrawElement,\n  ExcalidrawImageElement,\n  ExcalidrawLinearElement,\n} from \"./types\";\n\nimport { getElementAbsoluteCoords, getCurvePathOps, Bounds } from \"./bounds\";\nimport { Point } from \"../types\";\nimport { Drawable } from \"roughjs/bin/core\";\nimport { AppState } from \"../types\";\nimport { getShapeForElement } from \"../renderer/renderElement\";\nimport { hasBoundTextElement, isImageElement } from \"./typeChecks\";\nimport { isTextElement } from \".\";\nimport { isTransparent } from \"../utils\";\n\nconst isElementDraggableFromInside = (\n  element: NonDeletedExcalidrawElement,\n): boolean => {\n  if (element.type === \"arrow\") {\n    return false;\n  }\n\n  if (element.type === \"freedraw\") {\n    return true;\n  }\n  const isDraggableFromInside =\n    !isTransparent(element.backgroundColor) || hasBoundTextElement(element);\n  if (element.type === \"line\") {\n    return isDraggableFromInside && isPathALoop(element.points);\n  }\n  return isDraggableFromInside || isImageElement(element);\n};\n\nexport const hitTest = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n): boolean => {\n  // How many pixels off the shape boundary we still consider a hit\n  const threshold = 10 / appState.zoom.value;\n  const point: Point = [x, y];\n\n  if (isElementSelected(appState, element)) {\n    return isPointHittingElementBoundingBox(element, point, threshold);\n  }\n\n  return isHittingElementNotConsideringBoundingBox(element, appState, point);\n};\n\nexport const isHittingElementBoundingBoxWithoutHittingElement = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n): boolean => {\n  const threshold = 10 / appState.zoom.value;\n\n  return (\n    !isHittingElementNotConsideringBoundingBox(element, appState, [x, y]) &&\n    isPointHittingElementBoundingBox(element, [x, y], threshold)\n  );\n};\n\nexport const isHittingElementNotConsideringBoundingBox = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  point: Point,\n): boolean => {\n  const threshold = 10 / appState.zoom.value;\n\n  const check = isTextElement(element)\n    ? isStrictlyInside\n    : isElementDraggableFromInside(element)\n    ? isInsideCheck\n    : isNearCheck;\n  return hitTestPointAgainstElement({ element, point, threshold, check });\n};\n\nconst isElementSelected = (\n  appState: AppState,\n  element: NonDeleted<ExcalidrawElement>,\n) => appState.selectedElementIds[element.id];\n\nexport const isPointHittingElementBoundingBox = (\n  element: NonDeleted<ExcalidrawElement>,\n  [x, y]: Point,\n  threshold: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const elementCenterX = (x1 + x2) / 2;\n  const elementCenterY = (y1 + y2) / 2;\n  // reverse rotate to take element's angle into account.\n  const [rotatedX, rotatedY] = rotate(\n    x,\n    y,\n    elementCenterX,\n    elementCenterY,\n    -element.angle,\n  );\n\n  return (\n    rotatedX > x1 - threshold &&\n    rotatedX < x2 + threshold &&\n    rotatedY > y1 - threshold &&\n    rotatedY < y2 + threshold\n  );\n};\n\nexport const bindingBorderTest = (\n  element: NonDeleted<ExcalidrawBindableElement>,\n  { x, y }: { x: number; y: number },\n): boolean => {\n  const threshold = maxBindingGap(element, element.width, element.height);\n  const check = isOutsideCheck;\n  const point: Point = [x, y];\n  return hitTestPointAgainstElement({ element, point, threshold, check });\n};\n\nexport const maxBindingGap = (\n  element: ExcalidrawElement,\n  elementWidth: number,\n  elementHeight: number,\n): number => {\n  // Aligns diamonds with rectangles\n  const shapeRatio = element.type === \"diamond\" ? 1 / Math.sqrt(2) : 1;\n  const smallerDimension = shapeRatio * Math.min(elementWidth, elementHeight);\n  // We make the bindable boundary bigger for bigger elements\n  return Math.max(16, Math.min(0.25 * smallerDimension, 32));\n};\n\ntype HitTestArgs = {\n  element: NonDeletedExcalidrawElement;\n  point: Point;\n  threshold: number;\n  check: (distance: number, threshold: number) => boolean;\n};\n\nconst hitTestPointAgainstElement = (args: HitTestArgs): boolean => {\n  switch (args.element.type) {\n    case \"rectangle\":\n    case \"image\":\n    case \"text\":\n    case \"diamond\":\n    case \"ellipse\":\n      const distance = distanceToBindableElement(args.element, args.point);\n      return args.check(distance, args.threshold);\n    case \"freedraw\": {\n      if (\n        !args.check(\n          distanceToRectangle(args.element, args.point),\n          args.threshold,\n        )\n      ) {\n        return false;\n      }\n\n      return hitTestFreeDrawElement(args.element, args.point, args.threshold);\n    }\n    case \"arrow\":\n    case \"line\":\n      return hitTestLinear(args);\n    case \"selection\":\n      console.warn(\n        \"This should not happen, we need to investigate why it does.\",\n      );\n      return false;\n  }\n};\n\nexport const distanceToBindableElement = (\n  element: ExcalidrawBindableElement,\n  point: Point,\n): number => {\n  switch (element.type) {\n    case \"rectangle\":\n    case \"image\":\n    case \"text\":\n      return distanceToRectangle(element, point);\n    case \"diamond\":\n      return distanceToDiamond(element, point);\n    case \"ellipse\":\n      return distanceToEllipse(element, point);\n  }\n};\n\nconst isStrictlyInside = (distance: number, threshold: number): boolean => {\n  return distance < 0;\n};\n\nconst isInsideCheck = (distance: number, threshold: number): boolean => {\n  return distance < threshold;\n};\n\nconst isNearCheck = (distance: number, threshold: number): boolean => {\n  return Math.abs(distance) < threshold;\n};\n\nconst isOutsideCheck = (distance: number, threshold: number): boolean => {\n  return 0 <= distance && distance < threshold;\n};\n\nconst distanceToRectangle = (\n  element:\n    | ExcalidrawRectangleElement\n    | ExcalidrawTextElement\n    | ExcalidrawFreeDrawElement\n    | ExcalidrawImageElement,\n  point: Point,\n): number => {\n  const [, pointRel, hwidth, hheight] = pointRelativeToElement(element, point);\n  return Math.max(\n    GAPoint.distanceToLine(pointRel, GALine.equation(0, 1, -hheight)),\n    GAPoint.distanceToLine(pointRel, GALine.equation(1, 0, -hwidth)),\n  );\n};\n\nconst distanceToDiamond = (\n  element: ExcalidrawDiamondElement,\n  point: Point,\n): number => {\n  const [, pointRel, hwidth, hheight] = pointRelativeToElement(element, point);\n  const side = GALine.equation(hheight, hwidth, -hheight * hwidth);\n  return GAPoint.distanceToLine(pointRel, side);\n};\n\nconst distanceToEllipse = (\n  element: ExcalidrawEllipseElement,\n  point: Point,\n): number => {\n  const [pointRel, tangent] = ellipseParamsForTest(element, point);\n  return -GALine.sign(tangent) * GAPoint.distanceToLine(pointRel, tangent);\n};\n\nconst ellipseParamsForTest = (\n  element: ExcalidrawEllipseElement,\n  point: Point,\n): [GA.Point, GA.Line] => {\n  const [, pointRel, hwidth, hheight] = pointRelativeToElement(element, point);\n  const [px, py] = GAPoint.toTuple(pointRel);\n\n  // We're working in positive quadrant, so start with `t = 45deg`, `tx=cos(t)`\n  let tx = 0.707;\n  let ty = 0.707;\n\n  const a = hwidth;\n  const b = hheight;\n\n  // This is a numerical method to find the params tx, ty at which\n  // the ellipse has the closest point to the given point\n  [0, 1, 2, 3].forEach((_) => {\n    const xx = a * tx;\n    const yy = b * ty;\n\n    const ex = ((a * a - b * b) * tx ** 3) / a;\n    const ey = ((b * b - a * a) * ty ** 3) / b;\n\n    const rx = xx - ex;\n    const ry = yy - ey;\n\n    const qx = px - ex;\n    const qy = py - ey;\n\n    const r = Math.hypot(ry, rx);\n    const q = Math.hypot(qy, qx);\n\n    tx = Math.min(1, Math.max(0, ((qx * r) / q + ex) / a));\n    ty = Math.min(1, Math.max(0, ((qy * r) / q + ey) / b));\n    const t = Math.hypot(ty, tx);\n    tx /= t;\n    ty /= t;\n  });\n\n  const closestPoint = GA.point(a * tx, b * ty);\n\n  const tangent = GALine.orthogonalThrough(pointRel, closestPoint);\n  return [pointRel, tangent];\n};\n\nconst hitTestFreeDrawElement = (\n  element: ExcalidrawFreeDrawElement,\n  point: Point,\n  threshold: number,\n): boolean => {\n  // Check point-distance-to-line-segment for every segment in the\n  // element's points (its input points, not its outline points).\n  // This is... okay? It's plenty fast, but the GA library may\n  // have a faster option.\n\n  let x: number;\n  let y: number;\n\n  if (element.angle === 0) {\n    x = point[0] - element.x;\n    y = point[1] - element.y;\n  } else {\n    // Counter-rotate the point around center before testing\n    const [minX, minY, maxX, maxY] = getElementAbsoluteCoords(element);\n    const rotatedPoint = rotatePoint(\n      point,\n      [minX + (maxX - minX) / 2, minY + (maxY - minY) / 2],\n      -element.angle,\n    );\n    x = rotatedPoint[0] - element.x;\n    y = rotatedPoint[1] - element.y;\n  }\n\n  let [A, B] = element.points;\n  let P: readonly [number, number];\n\n  // For freedraw dots\n  if (\n    distance2d(A[0], A[1], x, y) < threshold ||\n    distance2d(B[0], B[1], x, y) < threshold\n  ) {\n    return true;\n  }\n\n  // For freedraw lines\n  for (let i = 0; i < element.points.length; i++) {\n    const delta = [B[0] - A[0], B[1] - A[1]];\n    const length = Math.hypot(delta[1], delta[0]);\n\n    const U = [delta[0] / length, delta[1] / length];\n    const C = [x - A[0], y - A[1]];\n    const d = (C[0] * U[0] + C[1] * U[1]) / Math.hypot(U[1], U[0]);\n    P = [A[0] + U[0] * d, A[1] + U[1] * d];\n\n    const da = distance2d(P[0], P[1], A[0], A[1]);\n    const db = distance2d(P[0], P[1], B[0], B[1]);\n\n    P = db < da && da > length ? B : da < db && db > length ? A : P;\n\n    if (Math.hypot(y - P[1], x - P[0]) < threshold) {\n      return true;\n    }\n\n    A = B;\n    B = element.points[i + 1];\n  }\n\n  const shape = getShapeForElement(element);\n\n  // for filled freedraw shapes, support\n  // selecting from inside\n  if (shape && shape.sets.length) {\n    return hitTestRoughShape(shape, x, y, threshold);\n  }\n\n  return false;\n};\n\nconst hitTestLinear = (args: HitTestArgs): boolean => {\n  const { element, threshold } = args;\n  if (!getShapeForElement(element)) {\n    return false;\n  }\n  const [point, pointAbs, hwidth, hheight] = pointRelativeToElement(\n    args.element,\n    args.point,\n  );\n  const side1 = GALine.equation(0, 1, -hheight);\n  const side2 = GALine.equation(1, 0, -hwidth);\n  if (\n    !isInsideCheck(GAPoint.distanceToLine(pointAbs, side1), threshold) ||\n    !isInsideCheck(GAPoint.distanceToLine(pointAbs, side2), threshold)\n  ) {\n    return false;\n  }\n  const [relX, relY] = GAPoint.toTuple(point);\n\n  const shape = getShapeForElement(element as ExcalidrawLinearElement);\n\n  if (!shape) {\n    return false;\n  }\n\n  if (args.check === isInsideCheck) {\n    const hit = shape.some((subshape) =>\n      hitTestCurveInside(subshape, relX, relY, element.strokeSharpness),\n    );\n    if (hit) {\n      return true;\n    }\n  }\n\n  // hit test all \"subshapes\" of the linear element\n  return shape.some((subshape) =>\n    hitTestRoughShape(subshape, relX, relY, threshold),\n  );\n};\n\n// Returns:\n//   1. the point relative to the elements (x, y) position\n//   2. the point relative to the element's center with positive (x, y)\n//   3. half element width\n//   4. half element height\n//\n// Note that for linear elements the (x, y) position is not at the\n// top right corner of their boundary.\n//\n// Rectangles, diamonds and ellipses are symmetrical over axes,\n// and other elements have a rectangular boundary,\n// so we only need to perform hit tests for the positive quadrant.\nconst pointRelativeToElement = (\n  element: ExcalidrawElement,\n  pointTuple: Point,\n): [GA.Point, GA.Point, number, number] => {\n  const point = GAPoint.from(pointTuple);\n  const elementCoords = getElementAbsoluteCoords(element);\n  const center = coordsCenter(elementCoords);\n  // GA has angle orientation opposite to `rotate`\n  const rotate = GATransform.rotation(center, element.angle);\n  const pointRotated = GATransform.apply(rotate, point);\n  const pointRelToCenter = GA.sub(pointRotated, GADirection.from(center));\n  const pointRelToCenterAbs = GAPoint.abs(pointRelToCenter);\n  const elementPos = GA.offset(element.x, element.y);\n  const pointRelToPos = GA.sub(pointRotated, elementPos);\n  const [ax, ay, bx, by] = elementCoords;\n  const halfWidth = (bx - ax) / 2;\n  const halfHeight = (by - ay) / 2;\n  return [pointRelToPos, pointRelToCenterAbs, halfWidth, halfHeight];\n};\n\n// Returns point in absolute coordinates\nexport const pointInAbsoluteCoords = (\n  element: ExcalidrawElement,\n  // Point relative to the element position\n  point: Point,\n): Point => {\n  const [x, y] = point;\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x2 - x1) / 2;\n  const cy = (y2 - y1) / 2;\n  const [rotatedX, rotatedY] = rotate(x, y, cx, cy, element.angle);\n  return [element.x + rotatedX, element.y + rotatedY];\n};\n\nconst relativizationToElementCenter = (\n  element: ExcalidrawElement,\n): GA.Transform => {\n  const elementCoords = getElementAbsoluteCoords(element);\n  const center = coordsCenter(elementCoords);\n  // GA has angle orientation opposite to `rotate`\n  const rotate = GATransform.rotation(center, element.angle);\n  const translate = GA.reverse(\n    GATransform.translation(GADirection.from(center)),\n  );\n  return GATransform.compose(rotate, translate);\n};\n\nconst coordsCenter = ([ax, ay, bx, by]: Bounds): GA.Point => {\n  return GA.point((ax + bx) / 2, (ay + by) / 2);\n};\n\n// The focus distance is the oriented ratio between the size of\n// the `element` and the \"focus image\" of the element on which\n// all focus points lie, so it's a number between -1 and 1.\n// The line going through `a` and `b` is a tangent to the \"focus image\"\n// of the element.\nexport const determineFocusDistance = (\n  element: ExcalidrawBindableElement,\n  // Point on the line, in absolute coordinates\n  a: Point,\n  // Another point on the line, in absolute coordinates (closer to element)\n  b: Point,\n): number => {\n  const relateToCenter = relativizationToElementCenter(element);\n  const aRel = GATransform.apply(relateToCenter, GAPoint.from(a));\n  const bRel = GATransform.apply(relateToCenter, GAPoint.from(b));\n  const line = GALine.through(aRel, bRel);\n  const q = element.height / element.width;\n  const hwidth = element.width / 2;\n  const hheight = element.height / 2;\n  const n = line[2];\n  const m = line[3];\n  const c = line[1];\n  const mabs = Math.abs(m);\n  const nabs = Math.abs(n);\n  switch (element.type) {\n    case \"rectangle\":\n    case \"image\":\n    case \"text\":\n      return c / (hwidth * (nabs + q * mabs));\n    case \"diamond\":\n      return mabs < nabs ? c / (nabs * hwidth) : c / (mabs * hheight);\n    case \"ellipse\":\n      return c / (hwidth * Math.sqrt(n ** 2 + q ** 2 * m ** 2));\n  }\n};\n\nexport const determineFocusPoint = (\n  element: ExcalidrawBindableElement,\n  // The oriented, relative distance from the center of `element` of the\n  // returned focusPoint\n  focus: number,\n  adjecentPoint: Point,\n): Point => {\n  if (focus === 0) {\n    const elementCoords = getElementAbsoluteCoords(element);\n    const center = coordsCenter(elementCoords);\n    return GAPoint.toTuple(center);\n  }\n  const relateToCenter = relativizationToElementCenter(element);\n  const adjecentPointRel = GATransform.apply(\n    relateToCenter,\n    GAPoint.from(adjecentPoint),\n  );\n  const reverseRelateToCenter = GA.reverse(relateToCenter);\n  let point;\n  switch (element.type) {\n    case \"rectangle\":\n    case \"image\":\n    case \"text\":\n    case \"diamond\":\n      point = findFocusPointForRectangulars(element, focus, adjecentPointRel);\n      break;\n    case \"ellipse\":\n      point = findFocusPointForEllipse(element, focus, adjecentPointRel);\n      break;\n  }\n  return GAPoint.toTuple(GATransform.apply(reverseRelateToCenter, point));\n};\n\n// Returns 2 or 0 intersection points between line going through `a` and `b`\n// and the `element`, in ascending order of distance from `a`.\nexport const intersectElementWithLine = (\n  element: ExcalidrawBindableElement,\n  // Point on the line, in absolute coordinates\n  a: Point,\n  // Another point on the line, in absolute coordinates\n  b: Point,\n  // If given, the element is inflated by this value\n  gap: number = 0,\n): Point[] => {\n  const relateToCenter = relativizationToElementCenter(element);\n  const aRel = GATransform.apply(relateToCenter, GAPoint.from(a));\n  const bRel = GATransform.apply(relateToCenter, GAPoint.from(b));\n  const line = GALine.through(aRel, bRel);\n  const reverseRelateToCenter = GA.reverse(relateToCenter);\n  const intersections = getSortedElementLineIntersections(\n    element,\n    line,\n    aRel,\n    gap,\n  );\n  return intersections.map((point) =>\n    GAPoint.toTuple(GATransform.apply(reverseRelateToCenter, point)),\n  );\n};\n\nconst getSortedElementLineIntersections = (\n  element: ExcalidrawBindableElement,\n  // Relative to element center\n  line: GA.Line,\n  // Relative to element center\n  nearPoint: GA.Point,\n  gap: number = 0,\n): GA.Point[] => {\n  let intersections: GA.Point[];\n  switch (element.type) {\n    case \"rectangle\":\n    case \"image\":\n    case \"text\":\n    case \"diamond\":\n      const corners = getCorners(element);\n      intersections = corners\n        .flatMap((point, i) => {\n          const edge: [GA.Point, GA.Point] = [point, corners[(i + 1) % 4]];\n          return intersectSegment(line, offsetSegment(edge, gap));\n        })\n        .concat(\n          corners.flatMap((point) => getCircleIntersections(point, gap, line)),\n        );\n      break;\n    case \"ellipse\":\n      intersections = getEllipseIntersections(element, gap, line);\n      break;\n  }\n  if (intersections.length < 2) {\n    // Ignore the \"edge\" case of only intersecting with a single corner\n    return [];\n  }\n  const sortedIntersections = intersections.sort(\n    (i1, i2) =>\n      GAPoint.distance(i1, nearPoint) - GAPoint.distance(i2, nearPoint),\n  );\n  return [\n    sortedIntersections[0],\n    sortedIntersections[sortedIntersections.length - 1],\n  ];\n};\n\nconst getCorners = (\n  element:\n    | ExcalidrawRectangleElement\n    | ExcalidrawImageElement\n    | ExcalidrawDiamondElement\n    | ExcalidrawTextElement,\n  scale: number = 1,\n): GA.Point[] => {\n  const hx = (scale * element.width) / 2;\n  const hy = (scale * element.height) / 2;\n  switch (element.type) {\n    case \"rectangle\":\n    case \"image\":\n    case \"text\":\n      return [\n        GA.point(hx, hy),\n        GA.point(hx, -hy),\n        GA.point(-hx, -hy),\n        GA.point(-hx, hy),\n      ];\n    case \"diamond\":\n      return [\n        GA.point(0, hy),\n        GA.point(hx, 0),\n        GA.point(0, -hy),\n        GA.point(-hx, 0),\n      ];\n  }\n};\n\n// Returns intersection of `line` with `segment`, with `segment` moved by\n// `gap` in its polar direction.\n// If intersection coincides with second segment point returns empty array.\nconst intersectSegment = (\n  line: GA.Line,\n  segment: [GA.Point, GA.Point],\n): GA.Point[] => {\n  const [a, b] = segment;\n  const aDist = GAPoint.distanceToLine(a, line);\n  const bDist = GAPoint.distanceToLine(b, line);\n  if (aDist * bDist >= 0) {\n    // The intersection is outside segment `(a, b)`\n    return [];\n  }\n  return [GAPoint.intersect(line, GALine.through(a, b))];\n};\n\nconst offsetSegment = (\n  segment: [GA.Point, GA.Point],\n  distance: number,\n): [GA.Point, GA.Point] => {\n  const [a, b] = segment;\n  const offset = GATransform.translationOrthogonal(\n    GADirection.fromTo(a, b),\n    distance,\n  );\n  return [GATransform.apply(offset, a), GATransform.apply(offset, b)];\n};\n\nconst getEllipseIntersections = (\n  element: ExcalidrawEllipseElement,\n  gap: number,\n  line: GA.Line,\n): GA.Point[] => {\n  const a = element.width / 2 + gap;\n  const b = element.height / 2 + gap;\n  const m = line[2];\n  const n = line[3];\n  const c = line[1];\n  const squares = a * a * m * m + b * b * n * n;\n  const discr = squares - c * c;\n  if (squares === 0 || discr <= 0) {\n    return [];\n  }\n  const discrRoot = Math.sqrt(discr);\n  const xn = -a * a * m * c;\n  const yn = -b * b * n * c;\n  return [\n    GA.point(\n      (xn + a * b * n * discrRoot) / squares,\n      (yn - a * b * m * discrRoot) / squares,\n    ),\n    GA.point(\n      (xn - a * b * n * discrRoot) / squares,\n      (yn + a * b * m * discrRoot) / squares,\n    ),\n  ];\n};\n\nexport const getCircleIntersections = (\n  center: GA.Point,\n  radius: number,\n  line: GA.Line,\n): GA.Point[] => {\n  if (radius === 0) {\n    return GAPoint.distanceToLine(line, center) === 0 ? [center] : [];\n  }\n  const m = line[2];\n  const n = line[3];\n  const c = line[1];\n  const [a, b] = GAPoint.toTuple(center);\n  const r = radius;\n  const squares = m * m + n * n;\n  const discr = r * r * squares - (m * a + n * b + c) ** 2;\n  if (squares === 0 || discr <= 0) {\n    return [];\n  }\n  const discrRoot = Math.sqrt(discr);\n  const xn = a * n * n - b * m * n - m * c;\n  const yn = b * m * m - a * m * n - n * c;\n\n  return [\n    GA.point((xn + n * discrRoot) / squares, (yn - m * discrRoot) / squares),\n    GA.point((xn - n * discrRoot) / squares, (yn + m * discrRoot) / squares),\n  ];\n};\n\n// The focus point is the tangent point of the \"focus image\" of the\n// `element`, where the tangent goes through `point`.\nexport const findFocusPointForEllipse = (\n  ellipse: ExcalidrawEllipseElement,\n  // Between -1 and 1 (not 0) the relative size of the \"focus image\" of\n  // the element on which the focus point lies\n  relativeDistance: number,\n  // The point for which we're trying to find the focus point, relative\n  // to the ellipse center.\n  point: GA.Point,\n): GA.Point => {\n  const relativeDistanceAbs = Math.abs(relativeDistance);\n  const a = (ellipse.width * relativeDistanceAbs) / 2;\n  const b = (ellipse.height * relativeDistanceAbs) / 2;\n\n  const orientation = Math.sign(relativeDistance);\n  const [px, pyo] = GAPoint.toTuple(point);\n\n  // The calculation below can't handle py = 0\n  const py = pyo === 0 ? 0.0001 : pyo;\n\n  const squares = px ** 2 * b ** 2 + py ** 2 * a ** 2;\n  // Tangent mx + ny + 1 = 0\n  const m =\n    (-px * b ** 2 +\n      orientation * py * Math.sqrt(Math.max(0, squares - a ** 2 * b ** 2))) /\n    squares;\n\n  const n = (-m * px - 1) / py;\n\n  const x = -(a ** 2 * m) / (n ** 2 * b ** 2 + m ** 2 * a ** 2);\n  return GA.point(x, (-m * x - 1) / n);\n};\n\nexport const findFocusPointForRectangulars = (\n  element:\n    | ExcalidrawRectangleElement\n    | ExcalidrawImageElement\n    | ExcalidrawDiamondElement\n    | ExcalidrawTextElement,\n  // Between -1 and 1 for how far away should the focus point be relative\n  // to the size of the element. Sign determines orientation.\n  relativeDistance: number,\n  // The point for which we're trying to find the focus point, relative\n  // to the element center.\n  point: GA.Point,\n): GA.Point => {\n  const relativeDistanceAbs = Math.abs(relativeDistance);\n  const orientation = Math.sign(relativeDistance);\n  const corners = getCorners(element, relativeDistanceAbs);\n\n  let maxDistance = 0;\n  let tangentPoint: null | GA.Point = null;\n  corners.forEach((corner) => {\n    const distance = orientation * GALine.through(point, corner)[1];\n    if (distance > maxDistance) {\n      maxDistance = distance;\n      tangentPoint = corner;\n    }\n  });\n  return tangentPoint!;\n};\n\nconst pointInBezierEquation = (\n  p0: Point,\n  p1: Point,\n  p2: Point,\n  p3: Point,\n  [mx, my]: Point,\n  lineThreshold: number,\n) => {\n  // B(t) = p0 * (1-t)^3 + 3p1 * t * (1-t)^2 + 3p2 * t^2 * (1-t) + p3 * t^3\n  const equation = (t: number, idx: number) =>\n    Math.pow(1 - t, 3) * p3[idx] +\n    3 * t * Math.pow(1 - t, 2) * p2[idx] +\n    3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n    p0[idx] * Math.pow(t, 3);\n\n  // go through t in increments of 0.01\n  let t = 0;\n  while (t <= 1.0) {\n    const tx = equation(t, 0);\n    const ty = equation(t, 1);\n\n    const diff = Math.sqrt(Math.pow(tx - mx, 2) + Math.pow(ty - my, 2));\n\n    if (diff < lineThreshold) {\n      return true;\n    }\n\n    t += 0.01;\n  }\n\n  return false;\n};\n\nconst hitTestCurveInside = (\n  drawable: Drawable,\n  x: number,\n  y: number,\n  sharpness: ExcalidrawElement[\"strokeSharpness\"],\n) => {\n  const ops = getCurvePathOps(drawable);\n  const points: Mutable<Point>[] = [];\n  let odd = false; // select one line out of double lines\n  for (const operation of ops) {\n    if (operation.op === \"move\") {\n      odd = !odd;\n      if (odd) {\n        points.push([operation.data[0], operation.data[1]]);\n      }\n    } else if (operation.op === \"bcurveTo\") {\n      if (odd) {\n        points.push([operation.data[0], operation.data[1]]);\n        points.push([operation.data[2], operation.data[3]]);\n        points.push([operation.data[4], operation.data[5]]);\n      }\n    } else if (operation.op === \"lineTo\") {\n      if (odd) {\n        points.push([operation.data[0], operation.data[1]]);\n      }\n    }\n  }\n  if (points.length >= 4) {\n    if (sharpness === \"sharp\") {\n      return isPointInPolygon(points, x, y);\n    }\n    const polygonPoints = pointsOnBezierCurves(points, 10, 5);\n    return isPointInPolygon(polygonPoints, x, y);\n  }\n  return false;\n};\n\nconst hitTestRoughShape = (\n  drawable: Drawable,\n  x: number,\n  y: number,\n  lineThreshold: number,\n) => {\n  // read operations from first opSet\n  const ops = getCurvePathOps(drawable);\n\n  // set start position as (0,0) just in case\n  // move operation does not exist (unlikely but it is worth safekeeping it)\n  let currentP: Point = [0, 0];\n\n  return ops.some(({ op, data }, idx) => {\n    // There are only four operation types:\n    // move, bcurveTo, lineTo, and curveTo\n    if (op === \"move\") {\n      // change starting point\n      currentP = data as unknown as Point;\n      // move operation does not draw anything; so, it always\n      // returns false\n    } else if (op === \"bcurveTo\") {\n      // create points from bezier curve\n      // bezier curve stores data as a flattened array of three positions\n      // [x1, y1, x2, y2, x3, y3]\n      const p1 = [data[0], data[1]] as Point;\n      const p2 = [data[2], data[3]] as Point;\n      const p3 = [data[4], data[5]] as Point;\n\n      const p0 = currentP;\n      currentP = p3;\n\n      // check if points are on the curve\n      // cubic bezier curves require four parameters\n      // the first parameter is the last stored position (p0)\n      const retVal = pointInBezierEquation(\n        p0,\n        p1,\n        p2,\n        p3,\n        [x, y],\n        lineThreshold,\n      );\n\n      // set end point of bezier curve as the new starting point for\n      // upcoming operations as each operation is based on the last drawn\n      // position of the previous operation\n      return retVal;\n    } else if (op === \"lineTo\") {\n      return hitTestCurveInside(drawable, x, y, \"sharp\");\n    } else if (op === \"qcurveTo\") {\n      // TODO: Implement this\n      console.warn(\"qcurveTo is not implemented yet\");\n    }\n\n    return false;\n  });\n};\n","import {\n  ExcalidrawElement,\n  PointerType,\n  NonDeletedExcalidrawElement,\n} from \"./types\";\n\nimport {\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  getTransformHandlesFromCoords,\n  getTransformHandles,\n  TransformHandleType,\n  TransformHandle,\n  MaybeTransformHandleType,\n} from \"./transformHandles\";\nimport { AppState, Zoom } from \"../types\";\n\nconst isInsideTransformHandle = (\n  transformHandle: TransformHandle,\n  x: number,\n  y: number,\n) =>\n  x >= transformHandle[0] &&\n  x <= transformHandle[0] + transformHandle[2] &&\n  y >= transformHandle[1] &&\n  y <= transformHandle[1] + transformHandle[3];\n\nexport const resizeTest = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: Zoom,\n  pointerType: PointerType,\n): MaybeTransformHandleType => {\n  if (!appState.selectedElementIds[element.id]) {\n    return false;\n  }\n\n  const { rotation: rotationTransformHandle, ...transformHandles } =\n    getTransformHandles(element, zoom, pointerType);\n\n  if (\n    rotationTransformHandle &&\n    isInsideTransformHandle(rotationTransformHandle, x, y)\n  ) {\n    return \"rotation\" as TransformHandleType;\n  }\n\n  const filter = Object.keys(transformHandles).filter((key) => {\n    const transformHandle =\n      transformHandles[key as Exclude<TransformHandleType, \"rotation\">]!;\n    if (!transformHandle) {\n      return false;\n    }\n    return isInsideTransformHandle(transformHandle, x, y);\n  });\n\n  if (filter.length > 0) {\n    return filter[0] as TransformHandleType;\n  }\n\n  return false;\n};\n\nexport const getElementWithTransformHandleType = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  scenePointerX: number,\n  scenePointerY: number,\n  zoom: Zoom,\n  pointerType: PointerType,\n) => {\n  return elements.reduce((result, element) => {\n    if (result) {\n      return result;\n    }\n    const transformHandleType = resizeTest(\n      element,\n      appState,\n      scenePointerX,\n      scenePointerY,\n      zoom,\n      pointerType,\n    );\n    return transformHandleType ? { element, transformHandleType } : null;\n  }, null as { element: NonDeletedExcalidrawElement; transformHandleType: MaybeTransformHandleType } | null);\n};\n\nexport const getTransformHandleTypeFromCoords = (\n  [x1, y1, x2, y2]: readonly [number, number, number, number],\n  scenePointerX: number,\n  scenePointerY: number,\n  zoom: Zoom,\n  pointerType: PointerType,\n): MaybeTransformHandleType => {\n  const transformHandles = getTransformHandlesFromCoords(\n    [x1, y1, x2, y2],\n    0,\n    zoom,\n    pointerType,\n    OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  );\n\n  const found = Object.keys(transformHandles).find((key) => {\n    const transformHandle =\n      transformHandles[key as Exclude<TransformHandleType, \"rotation\">]!;\n    return (\n      transformHandle &&\n      isInsideTransformHandle(transformHandle, scenePointerX, scenePointerY)\n    );\n  });\n  return (found || false) as MaybeTransformHandleType;\n};\n\nconst RESIZE_CURSORS = [\"ns\", \"nesw\", \"ew\", \"nwse\"];\nconst rotateResizeCursor = (cursor: string, angle: number) => {\n  const index = RESIZE_CURSORS.indexOf(cursor);\n  if (index >= 0) {\n    const a = Math.round(angle / (Math.PI / 4));\n    cursor = RESIZE_CURSORS[(index + a) % RESIZE_CURSORS.length];\n  }\n  return cursor;\n};\n\n/*\n * Returns bi-directional cursor for the element being resized\n */\nexport const getCursorForResizingElement = (resizingElement: {\n  element?: ExcalidrawElement;\n  transformHandleType: MaybeTransformHandleType;\n}): string => {\n  const { element, transformHandleType } = resizingElement;\n  const shouldSwapCursors =\n    element && Math.sign(element.height) * Math.sign(element.width) === -1;\n  let cursor = null;\n\n  switch (transformHandleType) {\n    case \"n\":\n    case \"s\":\n      cursor = \"ns\";\n      break;\n    case \"w\":\n    case \"e\":\n      cursor = \"ew\";\n      break;\n    case \"nw\":\n    case \"se\":\n      if (shouldSwapCursors) {\n        cursor = \"nesw\";\n      } else {\n        cursor = \"nwse\";\n      }\n      break;\n    case \"ne\":\n    case \"sw\":\n      if (shouldSwapCursors) {\n        cursor = \"nwse\";\n      } else {\n        cursor = \"nesw\";\n      }\n      break;\n    case \"rotation\":\n      return \"grab\";\n  }\n\n  if (cursor && element) {\n    cursor = rotateResizeCursor(cursor, element.angle);\n  }\n\n  return cursor ? `${cursor}-resize` : \"\";\n};\n","import {\n  NonDeleted,\n  ExcalidrawLinearElement,\n  ExcalidrawElement,\n  PointBinding,\n  ExcalidrawBindableElement,\n} from \"./types\";\nimport { distance2d, rotate, isPathALoop, getGridPoint } from \"../math\";\nimport { getElementAbsoluteCoords } from \".\";\nimport { getElementPointsCoords } from \"./bounds\";\nimport { Point, AppState } from \"../types\";\nimport { mutateElement } from \"./mutateElement\";\nimport History from \"../history\";\n\nimport Scene from \"../scene/Scene\";\nimport {\n  bindOrUnbindLinearElement,\n  getHoveredElementForBinding,\n  isBindingEnabled,\n} from \"./binding\";\nimport { tupleToCoors } from \"../utils\";\nimport { isBindingElement } from \"./typeChecks\";\n\nexport class LinearElementEditor {\n  public elementId: ExcalidrawElement[\"id\"] & {\n    _brand: \"excalidrawLinearElementId\";\n  };\n  /** indices */\n  public selectedPointsIndices: readonly number[] | null;\n\n  public pointerDownState: Readonly<{\n    prevSelectedPointsIndices: readonly number[] | null;\n    /** index */\n    lastClickedPoint: number;\n  }>;\n\n  /** whether you're dragging a point */\n  public isDragging: boolean;\n  public lastUncommittedPoint: Point | null;\n  public pointerOffset: Readonly<{ x: number; y: number }>;\n  public startBindingElement: ExcalidrawBindableElement | null | \"keep\";\n  public endBindingElement: ExcalidrawBindableElement | null | \"keep\";\n\n  constructor(element: NonDeleted<ExcalidrawLinearElement>, scene: Scene) {\n    this.elementId = element.id as string & {\n      _brand: \"excalidrawLinearElementId\";\n    };\n    Scene.mapElementToScene(this.elementId, scene);\n    LinearElementEditor.normalizePoints(element);\n\n    this.selectedPointsIndices = null;\n    this.lastUncommittedPoint = null;\n    this.isDragging = false;\n    this.pointerOffset = { x: 0, y: 0 };\n    this.startBindingElement = \"keep\";\n    this.endBindingElement = \"keep\";\n    this.pointerDownState = {\n      prevSelectedPointsIndices: null,\n      lastClickedPoint: -1,\n    };\n  }\n\n  // ---------------------------------------------------------------------------\n  // static methods\n  // ---------------------------------------------------------------------------\n\n  static POINT_HANDLE_SIZE = 20;\n\n  /**\n   * @param id the `elementId` from the instance of this class (so that we can\n   *  statically guarantee this method returns an ExcalidrawLinearElement)\n   */\n  static getElement(id: InstanceType<typeof LinearElementEditor>[\"elementId\"]) {\n    const element = Scene.getScene(id)?.getNonDeletedElement(id);\n    if (element) {\n      return element as NonDeleted<ExcalidrawLinearElement>;\n    }\n    return null;\n  }\n\n  static handleBoxSelection(\n    event: PointerEvent,\n    appState: AppState,\n    setState: React.Component<any, AppState>[\"setState\"],\n  ) {\n    if (\n      !appState.editingLinearElement ||\n      appState.draggingElement?.type !== \"selection\"\n    ) {\n      return false;\n    }\n    const { editingLinearElement } = appState;\n    const { selectedPointsIndices, elementId } = editingLinearElement;\n\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return false;\n    }\n\n    const [selectionX1, selectionY1, selectionX2, selectionY2] =\n      getElementAbsoluteCoords(appState.draggingElement);\n\n    const pointsSceneCoords =\n      LinearElementEditor.getPointsGlobalCoordinates(element);\n\n    const nextSelectedPoints = pointsSceneCoords.reduce(\n      (acc: number[], point, index) => {\n        if (\n          (point[0] >= selectionX1 &&\n            point[0] <= selectionX2 &&\n            point[1] >= selectionY1 &&\n            point[1] <= selectionY2) ||\n          (event.shiftKey && selectedPointsIndices?.includes(index))\n        ) {\n          acc.push(index);\n        }\n\n        return acc;\n      },\n      [],\n    );\n\n    setState({\n      editingLinearElement: {\n        ...editingLinearElement,\n        selectedPointsIndices: nextSelectedPoints.length\n          ? nextSelectedPoints\n          : null,\n      },\n    });\n  }\n\n  /** @returns whether point was dragged */\n  static handlePointDragging(\n    appState: AppState,\n    setState: React.Component<any, AppState>[\"setState\"],\n    scenePointerX: number,\n    scenePointerY: number,\n    maybeSuggestBinding: (\n      element: NonDeleted<ExcalidrawLinearElement>,\n      pointSceneCoords: { x: number; y: number }[],\n    ) => void,\n  ): boolean {\n    if (!appState.editingLinearElement) {\n      return false;\n    }\n    const { editingLinearElement } = appState;\n    const { selectedPointsIndices, elementId, isDragging } =\n      editingLinearElement;\n\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return false;\n    }\n\n    // point that's being dragged (out of all selected points)\n    const draggingPoint = element.points[\n      editingLinearElement.pointerDownState.lastClickedPoint\n    ] as [number, number] | undefined;\n\n    if (selectedPointsIndices && draggingPoint) {\n      if (isDragging === false) {\n        setState({\n          editingLinearElement: {\n            ...editingLinearElement,\n            isDragging: true,\n          },\n        });\n      }\n\n      const newDraggingPointPosition = LinearElementEditor.createPointAt(\n        element,\n        scenePointerX - editingLinearElement.pointerOffset.x,\n        scenePointerY - editingLinearElement.pointerOffset.y,\n        appState.gridSize,\n      );\n\n      const deltaX = newDraggingPointPosition[0] - draggingPoint[0];\n      const deltaY = newDraggingPointPosition[1] - draggingPoint[1];\n\n      LinearElementEditor.movePoints(\n        element,\n        selectedPointsIndices.map((pointIndex) => {\n          const newPointPosition =\n            pointIndex ===\n            editingLinearElement.pointerDownState.lastClickedPoint\n              ? LinearElementEditor.createPointAt(\n                  element,\n                  scenePointerX - editingLinearElement.pointerOffset.x,\n                  scenePointerY - editingLinearElement.pointerOffset.y,\n                  appState.gridSize,\n                )\n              : ([\n                  element.points[pointIndex][0] + deltaX,\n                  element.points[pointIndex][1] + deltaY,\n                ] as const);\n          return {\n            index: pointIndex,\n            point: newPointPosition,\n            isDragging:\n              pointIndex ===\n              editingLinearElement.pointerDownState.lastClickedPoint,\n          };\n        }),\n      );\n\n      // suggest bindings for first and last point if selected\n      if (isBindingElement(element)) {\n        const coords: { x: number; y: number }[] = [];\n\n        const firstSelectedIndex = selectedPointsIndices[0];\n        if (firstSelectedIndex === 0) {\n          coords.push(\n            tupleToCoors(\n              LinearElementEditor.getPointGlobalCoordinates(\n                element,\n                element.points[0],\n              ),\n            ),\n          );\n        }\n\n        const lastSelectedIndex =\n          selectedPointsIndices[selectedPointsIndices.length - 1];\n        if (lastSelectedIndex === element.points.length - 1) {\n          coords.push(\n            tupleToCoors(\n              LinearElementEditor.getPointGlobalCoordinates(\n                element,\n                element.points[lastSelectedIndex],\n              ),\n            ),\n          );\n        }\n\n        if (coords.length) {\n          maybeSuggestBinding(element, coords);\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  static handlePointerUp(\n    event: PointerEvent,\n    editingLinearElement: LinearElementEditor,\n    appState: AppState,\n  ): LinearElementEditor {\n    const { elementId, selectedPointsIndices, isDragging, pointerDownState } =\n      editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return editingLinearElement;\n    }\n\n    const bindings: Partial<\n      Pick<\n        InstanceType<typeof LinearElementEditor>,\n        \"startBindingElement\" | \"endBindingElement\"\n      >\n    > = {};\n\n    if (isDragging && selectedPointsIndices) {\n      for (const selectedPoint of selectedPointsIndices) {\n        if (\n          selectedPoint === 0 ||\n          selectedPoint === element.points.length - 1\n        ) {\n          if (isPathALoop(element.points, appState.zoom.value)) {\n            LinearElementEditor.movePoints(element, [\n              {\n                index: selectedPoint,\n                point:\n                  selectedPoint === 0\n                    ? element.points[element.points.length - 1]\n                    : element.points[0],\n              },\n            ]);\n          }\n\n          const bindingElement = isBindingEnabled(appState)\n            ? getHoveredElementForBinding(\n                tupleToCoors(\n                  LinearElementEditor.getPointAtIndexGlobalCoordinates(\n                    element,\n                    selectedPoint!,\n                  ),\n                ),\n                Scene.getScene(element)!,\n              )\n            : null;\n\n          bindings[\n            selectedPoint === 0 ? \"startBindingElement\" : \"endBindingElement\"\n          ] = bindingElement;\n        }\n      }\n    }\n\n    return {\n      ...editingLinearElement,\n      ...bindings,\n      // if clicking without previously dragging a point(s), and not holding\n      // shift, deselect all points except the one clicked. If holding shift,\n      // toggle the point.\n      selectedPointsIndices:\n        isDragging || event.shiftKey\n          ? !isDragging &&\n            event.shiftKey &&\n            pointerDownState.prevSelectedPointsIndices?.includes(\n              pointerDownState.lastClickedPoint,\n            )\n            ? selectedPointsIndices &&\n              selectedPointsIndices.filter(\n                (pointIndex) =>\n                  pointIndex !== pointerDownState.lastClickedPoint,\n              )\n            : selectedPointsIndices\n          : selectedPointsIndices?.includes(pointerDownState.lastClickedPoint)\n          ? [pointerDownState.lastClickedPoint]\n          : selectedPointsIndices,\n      isDragging: false,\n      pointerOffset: { x: 0, y: 0 },\n    };\n  }\n\n  static handlePointerDown(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    appState: AppState,\n    setState: React.Component<any, AppState>[\"setState\"],\n    history: History,\n    scenePointer: { x: number; y: number },\n  ): {\n    didAddPoint: boolean;\n    hitElement: NonDeleted<ExcalidrawElement> | null;\n  } {\n    const ret: ReturnType<typeof LinearElementEditor[\"handlePointerDown\"]> = {\n      didAddPoint: false,\n      hitElement: null,\n    };\n\n    if (!appState.editingLinearElement) {\n      return ret;\n    }\n\n    const { elementId } = appState.editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n\n    if (!element) {\n      return ret;\n    }\n\n    if (event.altKey) {\n      if (appState.editingLinearElement.lastUncommittedPoint == null) {\n        mutateElement(element, {\n          points: [\n            ...element.points,\n            LinearElementEditor.createPointAt(\n              element,\n              scenePointer.x,\n              scenePointer.y,\n              appState.gridSize,\n            ),\n          ],\n        });\n      }\n      history.resumeRecording();\n      setState({\n        editingLinearElement: {\n          ...appState.editingLinearElement,\n          pointerDownState: {\n            prevSelectedPointsIndices:\n              appState.editingLinearElement.selectedPointsIndices,\n            lastClickedPoint: -1,\n          },\n          selectedPointsIndices: [element.points.length - 1],\n          lastUncommittedPoint: null,\n          endBindingElement: getHoveredElementForBinding(\n            scenePointer,\n            Scene.getScene(element)!,\n          ),\n        },\n      });\n      ret.didAddPoint = true;\n      return ret;\n    }\n\n    const clickedPointIndex = LinearElementEditor.getPointIndexUnderCursor(\n      element,\n      appState.zoom,\n      scenePointer.x,\n      scenePointer.y,\n    );\n\n    // if we clicked on a point, set the element as hitElement otherwise\n    // it would get deselected if the point is outside the hitbox area\n    if (clickedPointIndex > -1) {\n      ret.hitElement = element;\n    } else {\n      // You might be wandering why we are storing the binding elements on\n      // LinearElementEditor and passing them in, instead of calculating them\n      // from the end points of the `linearElement` - this is to allow disabling\n      // binding (which needs to happen at the point the user finishes moving\n      // the point).\n      const { startBindingElement, endBindingElement } =\n        appState.editingLinearElement;\n      if (isBindingEnabled(appState) && isBindingElement(element)) {\n        bindOrUnbindLinearElement(\n          element,\n          startBindingElement,\n          endBindingElement,\n        );\n      }\n    }\n\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    const targetPoint =\n      clickedPointIndex > -1 &&\n      rotate(\n        element.x + element.points[clickedPointIndex][0],\n        element.y + element.points[clickedPointIndex][1],\n        cx,\n        cy,\n        element.angle,\n      );\n\n    const nextSelectedPointsIndices =\n      clickedPointIndex > -1 || event.shiftKey\n        ? event.shiftKey ||\n          appState.editingLinearElement.selectedPointsIndices?.includes(\n            clickedPointIndex,\n          )\n          ? normalizeSelectedPoints([\n              ...(appState.editingLinearElement.selectedPointsIndices || []),\n              clickedPointIndex,\n            ])\n          : [clickedPointIndex]\n        : null;\n\n    setState({\n      editingLinearElement: {\n        ...appState.editingLinearElement,\n        pointerDownState: {\n          prevSelectedPointsIndices:\n            appState.editingLinearElement.selectedPointsIndices,\n          lastClickedPoint: clickedPointIndex,\n        },\n        selectedPointsIndices: nextSelectedPointsIndices,\n        pointerOffset: targetPoint\n          ? {\n              x: scenePointer.x - targetPoint[0],\n              y: scenePointer.y - targetPoint[1],\n            }\n          : { x: 0, y: 0 },\n      },\n    });\n    return ret;\n  }\n\n  static handlePointerMove(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    scenePointerX: number,\n    scenePointerY: number,\n    editingLinearElement: LinearElementEditor,\n    gridSize: number | null,\n  ): LinearElementEditor {\n    const { elementId, lastUncommittedPoint } = editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return editingLinearElement;\n    }\n\n    const { points } = element;\n    const lastPoint = points[points.length - 1];\n\n    if (!event.altKey) {\n      if (lastPoint === lastUncommittedPoint) {\n        LinearElementEditor.deletePoints(element, [points.length - 1]);\n      }\n      return { ...editingLinearElement, lastUncommittedPoint: null };\n    }\n\n    const newPoint = LinearElementEditor.createPointAt(\n      element,\n      scenePointerX - editingLinearElement.pointerOffset.x,\n      scenePointerY - editingLinearElement.pointerOffset.y,\n      gridSize,\n    );\n\n    if (lastPoint === lastUncommittedPoint) {\n      LinearElementEditor.movePoints(element, [\n        {\n          index: element.points.length - 1,\n          point: newPoint,\n        },\n      ]);\n    } else {\n      LinearElementEditor.addPoints(element, [{ point: newPoint }]);\n    }\n\n    return {\n      ...editingLinearElement,\n      lastUncommittedPoint: element.points[element.points.length - 1],\n    };\n  }\n\n  /** scene coords */\n  static getPointGlobalCoordinates(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    point: Point,\n  ) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n\n    let { x, y } = element;\n    [x, y] = rotate(x + point[0], y + point[1], cx, cy, element.angle);\n    return [x, y] as const;\n  }\n\n  /** scene coords */\n  static getPointsGlobalCoordinates(\n    element: NonDeleted<ExcalidrawLinearElement>,\n  ) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    return element.points.map((point) => {\n      let { x, y } = element;\n      [x, y] = rotate(x + point[0], y + point[1], cx, cy, element.angle);\n      return [x, y];\n    });\n  }\n\n  static getPointAtIndexGlobalCoordinates(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    indexMaybeFromEnd: number, // -1 for last element\n  ): Point {\n    const index =\n      indexMaybeFromEnd < 0\n        ? element.points.length + indexMaybeFromEnd\n        : indexMaybeFromEnd;\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n\n    const point = element.points[index];\n    const { x, y } = element;\n    return rotate(x + point[0], y + point[1], cx, cy, element.angle);\n  }\n\n  static pointFromAbsoluteCoords(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    absoluteCoords: Point,\n  ): Point {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    const [x, y] = rotate(\n      absoluteCoords[0],\n      absoluteCoords[1],\n      cx,\n      cy,\n      -element.angle,\n    );\n    return [x - element.x, y - element.y];\n  }\n\n  static getPointIndexUnderCursor(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    zoom: AppState[\"zoom\"],\n    x: number,\n    y: number,\n  ) {\n    const pointHandles = this.getPointsGlobalCoordinates(element);\n    let idx = pointHandles.length;\n    // loop from right to left because points on the right are rendered over\n    // points on the left, thus should take precedence when clicking, if they\n    // overlap\n    while (--idx > -1) {\n      const point = pointHandles[idx];\n      if (\n        distance2d(x, y, point[0], point[1]) * zoom.value <\n        // +1px to account for outline stroke\n        this.POINT_HANDLE_SIZE / 2 + 1\n      ) {\n        return idx;\n      }\n    }\n    return -1;\n  }\n\n  static createPointAt(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    scenePointerX: number,\n    scenePointerY: number,\n    gridSize: number | null,\n  ): Point {\n    const pointerOnGrid = getGridPoint(scenePointerX, scenePointerY, gridSize);\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    const [rotatedX, rotatedY] = rotate(\n      pointerOnGrid[0],\n      pointerOnGrid[1],\n      cx,\n      cy,\n      -element.angle,\n    );\n\n    return [rotatedX - element.x, rotatedY - element.y];\n  }\n\n  /**\n   * Normalizes line points so that the start point is at [0,0]. This is\n   * expected in various parts of the codebase. Also returns new x/y to account\n   * for the potential normalization.\n   */\n  static getNormalizedPoints(element: ExcalidrawLinearElement) {\n    const { points } = element;\n\n    const offsetX = points[0][0];\n    const offsetY = points[0][1];\n\n    return {\n      points: points.map((point, _idx) => {\n        return [point[0] - offsetX, point[1] - offsetY] as const;\n      }),\n      x: element.x + offsetX,\n      y: element.y + offsetY,\n    };\n  }\n\n  // element-mutating methods\n  // ---------------------------------------------------------------------------\n\n  static normalizePoints(element: NonDeleted<ExcalidrawLinearElement>) {\n    mutateElement(element, LinearElementEditor.getNormalizedPoints(element));\n  }\n\n  static duplicateSelectedPoints(appState: AppState) {\n    if (!appState.editingLinearElement) {\n      return false;\n    }\n\n    const { selectedPointsIndices, elementId } = appState.editingLinearElement;\n\n    const element = LinearElementEditor.getElement(elementId);\n\n    if (!element || selectedPointsIndices === null) {\n      return false;\n    }\n\n    const { points } = element;\n\n    const nextSelectedIndices: number[] = [];\n\n    let pointAddedToEnd = false;\n    let indexCursor = -1;\n    const nextPoints = points.reduce((acc: Point[], point, index) => {\n      ++indexCursor;\n      acc.push(point);\n\n      const isSelected = selectedPointsIndices.includes(index);\n      if (isSelected) {\n        const nextPoint = points[index + 1];\n\n        if (!nextPoint) {\n          pointAddedToEnd = true;\n        }\n        acc.push(\n          nextPoint\n            ? [(point[0] + nextPoint[0]) / 2, (point[1] + nextPoint[1]) / 2]\n            : [point[0], point[1]],\n        );\n\n        nextSelectedIndices.push(indexCursor + 1);\n        ++indexCursor;\n      }\n\n      return acc;\n    }, []);\n\n    mutateElement(element, { points: nextPoints });\n\n    // temp hack to ensure the line doesn't move when adding point to the end,\n    // potentially expanding the bounding box\n    if (pointAddedToEnd) {\n      const lastPoint = element.points[element.points.length - 1];\n      LinearElementEditor.movePoints(element, [\n        {\n          index: element.points.length - 1,\n          point: [lastPoint[0] + 30, lastPoint[1] + 30],\n        },\n      ]);\n    }\n\n    return {\n      appState: {\n        ...appState,\n        editingLinearElement: {\n          ...appState.editingLinearElement,\n          selectedPointsIndices: nextSelectedIndices,\n        },\n      },\n    };\n  }\n\n  static deletePoints(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    pointIndices: readonly number[],\n  ) {\n    let offsetX = 0;\n    let offsetY = 0;\n\n    const isDeletingOriginPoint = pointIndices.includes(0);\n\n    // if deleting first point, make the next to be [0,0] and recalculate\n    // positions of the rest with respect to it\n    if (isDeletingOriginPoint) {\n      const firstNonDeletedPoint = element.points.find((point, idx) => {\n        return !pointIndices.includes(idx);\n      });\n      if (firstNonDeletedPoint) {\n        offsetX = firstNonDeletedPoint[0];\n        offsetY = firstNonDeletedPoint[1];\n      }\n    }\n\n    const nextPoints = element.points.reduce((acc: Point[], point, idx) => {\n      if (!pointIndices.includes(idx)) {\n        acc.push(\n          !acc.length ? [0, 0] : [point[0] - offsetX, point[1] - offsetY],\n        );\n      }\n      return acc;\n    }, []);\n\n    LinearElementEditor._updatePoints(element, nextPoints, offsetX, offsetY);\n  }\n\n  static addPoints(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    targetPoints: { point: Point }[],\n  ) {\n    const offsetX = 0;\n    const offsetY = 0;\n\n    const nextPoints = [...element.points, ...targetPoints.map((x) => x.point)];\n\n    LinearElementEditor._updatePoints(element, nextPoints, offsetX, offsetY);\n  }\n\n  static movePoints(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    targetPoints: { index: number; point: Point; isDragging?: boolean }[],\n    otherUpdates?: { startBinding?: PointBinding; endBinding?: PointBinding },\n  ) {\n    const { points } = element;\n\n    // in case we're moving start point, instead of modifying its position\n    // which would break the invariant of it being at [0,0], we move\n    // all the other points in the opposite direction by delta to\n    // offset it. We do the same with actual element.x/y position, so\n    // this hacks are completely transparent to the user.\n    let offsetX = 0;\n    let offsetY = 0;\n\n    const selectedOriginPoint = targetPoints.find(({ index }) => index === 0);\n\n    if (selectedOriginPoint) {\n      offsetX =\n        selectedOriginPoint.point[0] - points[selectedOriginPoint.index][0];\n      offsetY =\n        selectedOriginPoint.point[1] - points[selectedOriginPoint.index][1];\n    }\n\n    const nextPoints = points.map((point, idx) => {\n      const selectedPointData = targetPoints.find((p) => p.index === idx);\n      if (selectedPointData) {\n        if (selectedOriginPoint) {\n          return point;\n        }\n\n        const deltaX =\n          selectedPointData.point[0] - points[selectedPointData.index][0];\n        const deltaY =\n          selectedPointData.point[1] - points[selectedPointData.index][1];\n\n        return [point[0] + deltaX, point[1] + deltaY] as const;\n      }\n      return offsetX || offsetY\n        ? ([point[0] - offsetX, point[1] - offsetY] as const)\n        : point;\n    });\n\n    LinearElementEditor._updatePoints(\n      element,\n      nextPoints,\n      offsetX,\n      offsetY,\n      otherUpdates,\n    );\n  }\n\n  private static _updatePoints(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    nextPoints: readonly Point[],\n    offsetX: number,\n    offsetY: number,\n    otherUpdates?: { startBinding?: PointBinding; endBinding?: PointBinding },\n  ) {\n    const nextCoords = getElementPointsCoords(\n      element,\n      nextPoints,\n      element.strokeSharpness || \"round\",\n    );\n    const prevCoords = getElementPointsCoords(\n      element,\n      element.points,\n      element.strokeSharpness || \"round\",\n    );\n    const nextCenterX = (nextCoords[0] + nextCoords[2]) / 2;\n    const nextCenterY = (nextCoords[1] + nextCoords[3]) / 2;\n    const prevCenterX = (prevCoords[0] + prevCoords[2]) / 2;\n    const prevCenterY = (prevCoords[1] + prevCoords[3]) / 2;\n    const dX = prevCenterX - nextCenterX;\n    const dY = prevCenterY - nextCenterY;\n    const rotated = rotate(offsetX, offsetY, dX, dY, element.angle);\n\n    mutateElement(element, {\n      ...otherUpdates,\n      points: nextPoints,\n      x: element.x + rotated[0],\n      y: element.y + rotated[1],\n    });\n  }\n}\n\nconst normalizeSelectedPoints = (\n  points: (number | null)[],\n): number[] | null => {\n  let nextPoints = [\n    ...new Set(points.filter((p) => p !== null && p !== -1)),\n  ] as number[];\n  nextPoints = nextPoints.sort((a, b) => a - b);\n  return nextPoints.length ? nextPoints : null;\n};\n","import {\n  ExcalidrawLinearElement,\n  ExcalidrawBindableElement,\n  NonDeleted,\n  NonDeletedExcalidrawElement,\n  PointBinding,\n  ExcalidrawElement,\n} from \"./types\";\nimport { getElementAtPosition } from \"../scene\";\nimport { AppState } from \"../types\";\nimport {\n  isBindableElement,\n  isBindingElement,\n  isLinearElement,\n} from \"./typeChecks\";\nimport {\n  bindingBorderTest,\n  distanceToBindableElement,\n  maxBindingGap,\n  determineFocusDistance,\n  intersectElementWithLine,\n  determineFocusPoint,\n} from \"./collision\";\nimport { mutateElement } from \"./mutateElement\";\nimport Scene from \"../scene/Scene\";\nimport { LinearElementEditor } from \"./linearElementEditor\";\nimport { arrayToMap, tupleToCoors } from \"../utils\";\nimport { KEYS } from \"../keys\";\n\nexport type SuggestedBinding =\n  | NonDeleted<ExcalidrawBindableElement>\n  | SuggestedPointBinding;\n\nexport type SuggestedPointBinding = [\n  NonDeleted<ExcalidrawLinearElement>,\n  \"start\" | \"end\" | \"both\",\n  NonDeleted<ExcalidrawBindableElement>,\n];\n\nexport const shouldEnableBindingForPointerEvent = (\n  event: React.PointerEvent<HTMLCanvasElement>,\n) => {\n  return !event[KEYS.CTRL_OR_CMD];\n};\n\nexport const isBindingEnabled = (appState: AppState): boolean => {\n  return appState.isBindingEnabled;\n};\n\nexport const bindOrUnbindLinearElement = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  startBindingElement: ExcalidrawBindableElement | null | \"keep\",\n  endBindingElement: ExcalidrawBindableElement | null | \"keep\",\n): void => {\n  const boundToElementIds: Set<ExcalidrawBindableElement[\"id\"]> = new Set();\n  const unboundFromElementIds: Set<ExcalidrawBindableElement[\"id\"]> = new Set();\n  bindOrUnbindLinearElementEdge(\n    linearElement,\n    startBindingElement,\n    endBindingElement,\n    \"start\",\n    boundToElementIds,\n    unboundFromElementIds,\n  );\n  bindOrUnbindLinearElementEdge(\n    linearElement,\n    endBindingElement,\n    startBindingElement,\n    \"end\",\n    boundToElementIds,\n    unboundFromElementIds,\n  );\n\n  const onlyUnbound = Array.from(unboundFromElementIds).filter(\n    (id) => !boundToElementIds.has(id),\n  );\n  Scene.getScene(linearElement)!\n    .getNonDeletedElements(onlyUnbound)\n    .forEach((element) => {\n      mutateElement(element, {\n        boundElements: element.boundElements?.filter(\n          (element) =>\n            element.type !== \"arrow\" || element.id !== linearElement.id,\n        ),\n      });\n    });\n};\n\nconst bindOrUnbindLinearElementEdge = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  bindableElement: ExcalidrawBindableElement | null | \"keep\",\n  otherEdgeBindableElement: ExcalidrawBindableElement | null | \"keep\",\n  startOrEnd: \"start\" | \"end\",\n  // Is mutated\n  boundToElementIds: Set<ExcalidrawBindableElement[\"id\"]>,\n  // Is mutated\n  unboundFromElementIds: Set<ExcalidrawBindableElement[\"id\"]>,\n): void => {\n  if (bindableElement !== \"keep\") {\n    if (bindableElement != null) {\n      // Don't bind if we're trying to bind or are already bound to the same\n      // element on the other edge already (\"start\" edge takes precedence).\n      if (\n        otherEdgeBindableElement == null ||\n        (otherEdgeBindableElement === \"keep\"\n          ? !isLinearElementSimpleAndAlreadyBoundOnOppositeEdge(\n              linearElement,\n              bindableElement,\n              startOrEnd,\n            )\n          : startOrEnd === \"start\" ||\n            otherEdgeBindableElement.id !== bindableElement.id)\n      ) {\n        bindLinearElement(linearElement, bindableElement, startOrEnd);\n        boundToElementIds.add(bindableElement.id);\n      }\n    } else {\n      const unbound = unbindLinearElement(linearElement, startOrEnd);\n      if (unbound != null) {\n        unboundFromElementIds.add(unbound);\n      }\n    }\n  }\n};\n\nexport const bindOrUnbindSelectedElements = (\n  elements: NonDeleted<ExcalidrawElement>[],\n): void => {\n  elements.forEach((element) => {\n    if (isBindingElement(element)) {\n      bindOrUnbindLinearElement(\n        element,\n        getElligibleElementForBindingElement(element, \"start\"),\n        getElligibleElementForBindingElement(element, \"end\"),\n      );\n    } else if (isBindableElement(element)) {\n      maybeBindBindableElement(element);\n    }\n  });\n};\n\nconst maybeBindBindableElement = (\n  bindableElement: NonDeleted<ExcalidrawBindableElement>,\n): void => {\n  getElligibleElementsForBindableElementAndWhere(bindableElement).forEach(\n    ([linearElement, where]) =>\n      bindOrUnbindLinearElement(\n        linearElement,\n        where === \"end\" ? \"keep\" : bindableElement,\n        where === \"start\" ? \"keep\" : bindableElement,\n      ),\n  );\n};\n\nexport const maybeBindLinearElement = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  appState: AppState,\n  scene: Scene,\n  pointerCoords: { x: number; y: number },\n): void => {\n  if (appState.startBoundElement != null) {\n    bindLinearElement(linearElement, appState.startBoundElement, \"start\");\n  }\n  const hoveredElement = getHoveredElementForBinding(pointerCoords, scene);\n  if (\n    hoveredElement != null &&\n    !isLinearElementSimpleAndAlreadyBoundOnOppositeEdge(\n      linearElement,\n      hoveredElement,\n      \"end\",\n    )\n  ) {\n    bindLinearElement(linearElement, hoveredElement, \"end\");\n  }\n};\n\nconst bindLinearElement = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  hoveredElement: ExcalidrawBindableElement,\n  startOrEnd: \"start\" | \"end\",\n): void => {\n  mutateElement(linearElement, {\n    [startOrEnd === \"start\" ? \"startBinding\" : \"endBinding\"]: {\n      elementId: hoveredElement.id,\n      ...calculateFocusAndGap(linearElement, hoveredElement, startOrEnd),\n    } as PointBinding,\n  });\n\n  const boundElementsMap = arrayToMap(hoveredElement.boundElements || []);\n  if (!boundElementsMap.has(linearElement.id)) {\n    mutateElement(hoveredElement, {\n      boundElements: (hoveredElement.boundElements || []).concat({\n        id: linearElement.id,\n        type: \"arrow\",\n      }),\n    });\n  }\n};\n\n// Don't bind both ends of a simple segment\nconst isLinearElementSimpleAndAlreadyBoundOnOppositeEdge = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  bindableElement: ExcalidrawBindableElement,\n  startOrEnd: \"start\" | \"end\",\n): boolean => {\n  const otherBinding =\n    linearElement[startOrEnd === \"start\" ? \"endBinding\" : \"startBinding\"];\n  return isLinearElementSimpleAndAlreadyBound(\n    linearElement,\n    otherBinding?.elementId,\n    bindableElement,\n  );\n};\n\nexport const isLinearElementSimpleAndAlreadyBound = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  alreadyBoundToId: ExcalidrawBindableElement[\"id\"] | undefined,\n  bindableElement: ExcalidrawBindableElement,\n): boolean => {\n  return (\n    alreadyBoundToId === bindableElement.id && linearElement.points.length < 3\n  );\n};\n\nexport const unbindLinearElements = (\n  elements: NonDeleted<ExcalidrawElement>[],\n): void => {\n  elements.forEach((element) => {\n    if (isBindingElement(element)) {\n      bindOrUnbindLinearElement(element, null, null);\n    }\n  });\n};\n\nconst unbindLinearElement = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  startOrEnd: \"start\" | \"end\",\n): ExcalidrawBindableElement[\"id\"] | null => {\n  const field = startOrEnd === \"start\" ? \"startBinding\" : \"endBinding\";\n  const binding = linearElement[field];\n  if (binding == null) {\n    return null;\n  }\n  mutateElement(linearElement, { [field]: null });\n  return binding.elementId;\n};\n\nexport const getHoveredElementForBinding = (\n  pointerCoords: {\n    x: number;\n    y: number;\n  },\n  scene: Scene,\n): NonDeleted<ExcalidrawBindableElement> | null => {\n  const hoveredElement = getElementAtPosition(\n    scene.getElements(),\n    (element) =>\n      isBindableElement(element) && bindingBorderTest(element, pointerCoords),\n  );\n  return hoveredElement as NonDeleted<ExcalidrawBindableElement> | null;\n};\n\nconst calculateFocusAndGap = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  hoveredElement: ExcalidrawBindableElement,\n  startOrEnd: \"start\" | \"end\",\n): { focus: number; gap: number } => {\n  const direction = startOrEnd === \"start\" ? -1 : 1;\n  const edgePointIndex = direction === -1 ? 0 : linearElement.points.length - 1;\n  const adjacentPointIndex = edgePointIndex - direction;\n  const edgePoint = LinearElementEditor.getPointAtIndexGlobalCoordinates(\n    linearElement,\n    edgePointIndex,\n  );\n  const adjacentPoint = LinearElementEditor.getPointAtIndexGlobalCoordinates(\n    linearElement,\n    adjacentPointIndex,\n  );\n  return {\n    focus: determineFocusDistance(hoveredElement, adjacentPoint, edgePoint),\n    gap: Math.max(1, distanceToBindableElement(hoveredElement, edgePoint)),\n  };\n};\n\n// Supports translating, rotating and scaling `changedElement` with bound\n// linear elements.\n// Because scaling involves moving the focus points as well, it is\n// done before the `changedElement` is updated, and the `newSize` is passed\n// in explicitly.\nexport const updateBoundElements = (\n  changedElement: NonDeletedExcalidrawElement,\n  options?: {\n    simultaneouslyUpdated?: readonly ExcalidrawElement[];\n    newSize?: { width: number; height: number };\n  },\n) => {\n  const boundLinearElements = (changedElement.boundElements ?? []).filter(\n    (el) => el.type === \"arrow\",\n  );\n  if (boundLinearElements.length === 0) {\n    return;\n  }\n  const { newSize, simultaneouslyUpdated } = options ?? {};\n  const simultaneouslyUpdatedElementIds = getSimultaneouslyUpdatedElementIds(\n    simultaneouslyUpdated,\n  );\n  Scene.getScene(changedElement)!\n    .getNonDeletedElements(boundLinearElements.map((el) => el.id))\n    .forEach((element) => {\n      if (!isLinearElement(element)) {\n        return;\n      }\n\n      const bindableElement = changedElement as ExcalidrawBindableElement;\n      // In case the boundElements are stale\n      if (!doesNeedUpdate(element, bindableElement)) {\n        return;\n      }\n      const startBinding = maybeCalculateNewGapWhenScaling(\n        bindableElement,\n        element.startBinding,\n        newSize,\n      );\n      const endBinding = maybeCalculateNewGapWhenScaling(\n        bindableElement,\n        element.endBinding,\n        newSize,\n      );\n      // `linearElement` is being moved/scaled already, just update the binding\n      if (simultaneouslyUpdatedElementIds.has(element.id)) {\n        mutateElement(element, { startBinding, endBinding });\n        return;\n      }\n      updateBoundPoint(\n        element,\n        \"start\",\n        startBinding,\n        changedElement as ExcalidrawBindableElement,\n      );\n      updateBoundPoint(\n        element,\n        \"end\",\n        endBinding,\n        changedElement as ExcalidrawBindableElement,\n      );\n    });\n};\n\nconst doesNeedUpdate = (\n  boundElement: NonDeleted<ExcalidrawLinearElement>,\n  changedElement: ExcalidrawBindableElement,\n) => {\n  return (\n    boundElement.startBinding?.elementId === changedElement.id ||\n    boundElement.endBinding?.elementId === changedElement.id\n  );\n};\n\nconst getSimultaneouslyUpdatedElementIds = (\n  simultaneouslyUpdated: readonly ExcalidrawElement[] | undefined,\n): Set<ExcalidrawElement[\"id\"]> => {\n  return new Set((simultaneouslyUpdated || []).map((element) => element.id));\n};\n\nconst updateBoundPoint = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  startOrEnd: \"start\" | \"end\",\n  binding: PointBinding | null | undefined,\n  changedElement: ExcalidrawBindableElement,\n): void => {\n  if (\n    binding == null ||\n    // We only need to update the other end if this is a 2 point line element\n    (binding.elementId !== changedElement.id && linearElement.points.length > 2)\n  ) {\n    return;\n  }\n  const bindingElement = Scene.getScene(linearElement)!.getElement(\n    binding.elementId,\n  ) as ExcalidrawBindableElement | null;\n  if (bindingElement == null) {\n    // We're not cleaning up after deleted elements atm., so handle this case\n    return;\n  }\n  const direction = startOrEnd === \"start\" ? -1 : 1;\n  const edgePointIndex = direction === -1 ? 0 : linearElement.points.length - 1;\n  const adjacentPointIndex = edgePointIndex - direction;\n  const adjacentPoint = LinearElementEditor.getPointAtIndexGlobalCoordinates(\n    linearElement,\n    adjacentPointIndex,\n  );\n  const focusPointAbsolute = determineFocusPoint(\n    bindingElement,\n    binding.focus,\n    adjacentPoint,\n  );\n  let newEdgePoint;\n  // The linear element was not originally pointing inside the bound shape,\n  // we can point directly at the focus point\n  if (binding.gap === 0) {\n    newEdgePoint = focusPointAbsolute;\n  } else {\n    const intersections = intersectElementWithLine(\n      bindingElement,\n      adjacentPoint,\n      focusPointAbsolute,\n      binding.gap,\n    );\n    if (intersections.length === 0) {\n      // This should never happen, since focusPoint should always be\n      // inside the element, but just in case, bail out\n      newEdgePoint = focusPointAbsolute;\n    } else {\n      // Guaranteed to intersect because focusPoint is always inside the shape\n      newEdgePoint = intersections[0];\n    }\n  }\n  LinearElementEditor.movePoints(\n    linearElement,\n    [\n      {\n        index: edgePointIndex,\n        point: LinearElementEditor.pointFromAbsoluteCoords(\n          linearElement,\n          newEdgePoint,\n        ),\n      },\n    ],\n    { [startOrEnd === \"start\" ? \"startBinding\" : \"endBinding\"]: binding },\n  );\n};\n\nconst maybeCalculateNewGapWhenScaling = (\n  changedElement: ExcalidrawBindableElement,\n  currentBinding: PointBinding | null | undefined,\n  newSize: { width: number; height: number } | undefined,\n): PointBinding | null | undefined => {\n  if (currentBinding == null || newSize == null) {\n    return currentBinding;\n  }\n  const { gap, focus, elementId } = currentBinding;\n  const { width: newWidth, height: newHeight } = newSize;\n  const { width, height } = changedElement;\n  const newGap = Math.max(\n    1,\n    Math.min(\n      maxBindingGap(changedElement, newWidth, newHeight),\n      gap * (newWidth < newHeight ? newWidth / width : newHeight / height),\n    ),\n  );\n  return { elementId, gap: newGap, focus };\n};\n\nexport const getEligibleElementsForBinding = (\n  elements: NonDeleted<ExcalidrawElement>[],\n): SuggestedBinding[] => {\n  const includedElementIds = new Set(elements.map(({ id }) => id));\n  return elements.flatMap((element) =>\n    isBindingElement(element)\n      ? (getElligibleElementsForBindingElement(\n          element as NonDeleted<ExcalidrawLinearElement>,\n        ).filter(\n          (element) => !includedElementIds.has(element.id),\n        ) as SuggestedBinding[])\n      : isBindableElement(element)\n      ? getElligibleElementsForBindableElementAndWhere(element).filter(\n          (binding) => !includedElementIds.has(binding[0].id),\n        )\n      : [],\n  );\n};\n\nconst getElligibleElementsForBindingElement = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n): NonDeleted<ExcalidrawBindableElement>[] => {\n  return [\n    getElligibleElementForBindingElement(linearElement, \"start\"),\n    getElligibleElementForBindingElement(linearElement, \"end\"),\n  ].filter(\n    (element): element is NonDeleted<ExcalidrawBindableElement> =>\n      element != null,\n  );\n};\n\nconst getElligibleElementForBindingElement = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  startOrEnd: \"start\" | \"end\",\n): NonDeleted<ExcalidrawBindableElement> | null => {\n  return getHoveredElementForBinding(\n    getLinearElementEdgeCoors(linearElement, startOrEnd),\n    Scene.getScene(linearElement)!,\n  );\n};\n\nconst getLinearElementEdgeCoors = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  startOrEnd: \"start\" | \"end\",\n): { x: number; y: number } => {\n  const index = startOrEnd === \"start\" ? 0 : -1;\n  return tupleToCoors(\n    LinearElementEditor.getPointAtIndexGlobalCoordinates(linearElement, index),\n  );\n};\n\nconst getElligibleElementsForBindableElementAndWhere = (\n  bindableElement: NonDeleted<ExcalidrawBindableElement>,\n): SuggestedPointBinding[] => {\n  return Scene.getScene(bindableElement)!\n    .getElements()\n    .map((element) => {\n      if (!isBindingElement(element)) {\n        return null;\n      }\n      const canBindStart = isLinearElementEligibleForNewBindingByBindable(\n        element,\n        \"start\",\n        bindableElement,\n      );\n      const canBindEnd = isLinearElementEligibleForNewBindingByBindable(\n        element,\n        \"end\",\n        bindableElement,\n      );\n      if (!canBindStart && !canBindEnd) {\n        return null;\n      }\n      return [\n        element,\n        canBindStart && canBindEnd ? \"both\" : canBindStart ? \"start\" : \"end\",\n        bindableElement,\n      ];\n    })\n    .filter((maybeElement) => maybeElement != null) as SuggestedPointBinding[];\n};\n\nconst isLinearElementEligibleForNewBindingByBindable = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  startOrEnd: \"start\" | \"end\",\n  bindableElement: NonDeleted<ExcalidrawBindableElement>,\n): boolean => {\n  const existingBinding =\n    linearElement[startOrEnd === \"start\" ? \"startBinding\" : \"endBinding\"];\n  return (\n    existingBinding == null &&\n    !isLinearElementSimpleAndAlreadyBoundOnOppositeEdge(\n      linearElement,\n      bindableElement,\n      startOrEnd,\n    ) &&\n    bindingBorderTest(\n      bindableElement,\n      getLinearElementEdgeCoors(linearElement, startOrEnd),\n    )\n  );\n};\n\n// We need to:\n// 1: Update elements not selected to point to duplicated elements\n// 2: Update duplicated elements to point to other duplicated elements\nexport const fixBindingsAfterDuplication = (\n  sceneElements: readonly ExcalidrawElement[],\n  oldElements: readonly ExcalidrawElement[],\n  oldIdToDuplicatedId: Map<ExcalidrawElement[\"id\"], ExcalidrawElement[\"id\"]>,\n  // There are three copying mechanisms: Copy-paste, duplication and alt-drag.\n  // Only when alt-dragging the new \"duplicates\" act as the \"old\", while\n  // the \"old\" elements act as the \"new copy\" - essentially working reverse\n  // to the other two.\n  duplicatesServeAsOld?: \"duplicatesServeAsOld\" | undefined,\n): void => {\n  // First collect all the binding/bindable elements, so we only update\n  // each once, regardless of whether they were duplicated or not.\n  const allBoundElementIds: Set<ExcalidrawElement[\"id\"]> = new Set();\n  const allBindableElementIds: Set<ExcalidrawElement[\"id\"]> = new Set();\n  const shouldReverseRoles = duplicatesServeAsOld === \"duplicatesServeAsOld\";\n  oldElements.forEach((oldElement) => {\n    const { boundElements } = oldElement;\n    if (boundElements != null && boundElements.length > 0) {\n      boundElements.forEach((boundElement) => {\n        if (shouldReverseRoles && !oldIdToDuplicatedId.has(boundElement.id)) {\n          allBoundElementIds.add(boundElement.id);\n        }\n      });\n      allBindableElementIds.add(oldIdToDuplicatedId.get(oldElement.id)!);\n    }\n    if (isBindingElement(oldElement)) {\n      if (oldElement.startBinding != null) {\n        const { elementId } = oldElement.startBinding;\n        if (shouldReverseRoles && !oldIdToDuplicatedId.has(elementId)) {\n          allBindableElementIds.add(elementId);\n        }\n      }\n      if (oldElement.endBinding != null) {\n        const { elementId } = oldElement.endBinding;\n        if (shouldReverseRoles && !oldIdToDuplicatedId.has(elementId)) {\n          allBindableElementIds.add(elementId);\n        }\n      }\n      if (oldElement.startBinding != null || oldElement.endBinding != null) {\n        allBoundElementIds.add(oldIdToDuplicatedId.get(oldElement.id)!);\n      }\n    }\n  });\n\n  // Update the linear elements\n  (\n    sceneElements.filter(({ id }) =>\n      allBoundElementIds.has(id),\n    ) as ExcalidrawLinearElement[]\n  ).forEach((element) => {\n    const { startBinding, endBinding } = element;\n    mutateElement(element, {\n      startBinding: newBindingAfterDuplication(\n        startBinding,\n        oldIdToDuplicatedId,\n      ),\n      endBinding: newBindingAfterDuplication(endBinding, oldIdToDuplicatedId),\n    });\n  });\n\n  // Update the bindable shapes\n  sceneElements\n    .filter(({ id }) => allBindableElementIds.has(id))\n    .forEach((bindableElement) => {\n      const { boundElements } = bindableElement;\n      if (boundElements != null && boundElements.length > 0) {\n        mutateElement(bindableElement, {\n          boundElements: boundElements.map((boundElement) =>\n            oldIdToDuplicatedId.has(boundElement.id)\n              ? {\n                  id: oldIdToDuplicatedId.get(boundElement.id)!,\n                  type: boundElement.type,\n                }\n              : boundElement,\n          ),\n        });\n      }\n    });\n};\n\nconst newBindingAfterDuplication = (\n  binding: PointBinding | null,\n  oldIdToDuplicatedId: Map<ExcalidrawElement[\"id\"], ExcalidrawElement[\"id\"]>,\n): PointBinding | null => {\n  if (binding == null) {\n    return null;\n  }\n  const { elementId, focus, gap } = binding;\n  return {\n    focus,\n    gap,\n    elementId: oldIdToDuplicatedId.get(elementId) ?? elementId,\n  };\n};\n\nexport const fixBindingsAfterDeletion = (\n  sceneElements: readonly ExcalidrawElement[],\n  deletedElements: readonly ExcalidrawElement[],\n): void => {\n  const deletedElementIds = new Set(\n    deletedElements.map((element) => element.id),\n  );\n  // Non deleted and need an update\n  const boundElementIds: Set<ExcalidrawElement[\"id\"]> = new Set();\n  deletedElements.forEach((deletedElement) => {\n    if (isBindableElement(deletedElement)) {\n      deletedElement.boundElements?.forEach((element) => {\n        if (!deletedElementIds.has(element.id)) {\n          boundElementIds.add(element.id);\n        }\n      });\n    }\n  });\n  (\n    sceneElements.filter(({ id }) =>\n      boundElementIds.has(id),\n    ) as ExcalidrawLinearElement[]\n  ).forEach((element: ExcalidrawLinearElement) => {\n    const { startBinding, endBinding } = element;\n    mutateElement(element, {\n      startBinding: newBindingAfterDeletion(startBinding, deletedElementIds),\n      endBinding: newBindingAfterDeletion(endBinding, deletedElementIds),\n    });\n  });\n};\n\nconst newBindingAfterDeletion = (\n  binding: PointBinding | null,\n  deletedElementIds: Set<ExcalidrawElement[\"id\"]>,\n): PointBinding | null => {\n  if (binding == null || deletedElementIds.has(binding.elementId)) {\n    return null;\n  }\n  return binding;\n};\n","import { BOUND_TEXT_PADDING, SHIFT_LOCKING_ANGLE } from \"../constants\";\nimport { rescalePoints } from \"../points\";\n\nimport {\n  rotate,\n  adjustXYWithRotation,\n  centerPoint,\n  rotatePoint,\n} from \"../math\";\nimport {\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"./types\";\nimport {\n  getElementAbsoluteCoords,\n  getCommonBounds,\n  getResizedElementAbsoluteCoords,\n} from \"./bounds\";\nimport {\n  isFreeDrawElement,\n  isLinearElement,\n  isTextElement,\n} from \"./typeChecks\";\nimport { mutateElement } from \"./mutateElement\";\nimport { getPerfectElementSize } from \"./sizeHelpers\";\nimport { getFontString } from \"../utils\";\nimport { updateBoundElements } from \"./binding\";\nimport {\n  TransformHandleType,\n  MaybeTransformHandleType,\n  TransformHandleDirection,\n} from \"./transformHandles\";\nimport { Point, PointerDownState } from \"../types\";\nimport Scene from \"../scene/Scene\";\nimport {\n  getApproxMinLineHeight,\n  getApproxMinLineWidth,\n  getBoundTextElement,\n  getBoundTextElementId,\n  handleBindTextResize,\n  measureText,\n} from \"./textElement\";\n\nexport const normalizeAngle = (angle: number): number => {\n  if (angle >= 2 * Math.PI) {\n    return angle - 2 * Math.PI;\n  }\n  return angle;\n};\n\n// Returns true when transform (resizing/rotation) happened\nexport const transformElements = (\n  pointerDownState: PointerDownState,\n  transformHandleType: MaybeTransformHandleType,\n  selectedElements: readonly NonDeletedExcalidrawElement[],\n  resizeArrowDirection: \"origin\" | \"end\",\n  shouldRotateWithDiscreteAngle: boolean,\n  shouldResizeFromCenter: boolean,\n  shouldMaintainAspectRatio: boolean,\n  pointerX: number,\n  pointerY: number,\n  centerX: number,\n  centerY: number,\n) => {\n  if (selectedElements.length === 1) {\n    const [element] = selectedElements;\n    if (transformHandleType === \"rotation\") {\n      rotateSingleElement(\n        element,\n        pointerX,\n        pointerY,\n        shouldRotateWithDiscreteAngle,\n      );\n      updateBoundElements(element);\n    } else if (\n      isLinearElement(element) &&\n      element.points.length === 2 &&\n      (transformHandleType === \"nw\" ||\n        transformHandleType === \"ne\" ||\n        transformHandleType === \"sw\" ||\n        transformHandleType === \"se\")\n    ) {\n      reshapeSingleTwoPointElement(\n        element,\n        resizeArrowDirection,\n        shouldRotateWithDiscreteAngle,\n        pointerX,\n        pointerY,\n      );\n    } else if (\n      isTextElement(element) &&\n      (transformHandleType === \"nw\" ||\n        transformHandleType === \"ne\" ||\n        transformHandleType === \"sw\" ||\n        transformHandleType === \"se\")\n    ) {\n      resizeSingleTextElement(\n        element,\n        transformHandleType,\n        shouldResizeFromCenter,\n        pointerX,\n        pointerY,\n      );\n      updateBoundElements(element);\n    } else if (transformHandleType) {\n      resizeSingleElement(\n        pointerDownState.originalElements,\n        shouldMaintainAspectRatio,\n        element,\n        transformHandleType,\n        shouldResizeFromCenter,\n        pointerX,\n        pointerY,\n      );\n    }\n\n    return true;\n  } else if (selectedElements.length > 1) {\n    if (transformHandleType === \"rotation\") {\n      rotateMultipleElements(\n        pointerDownState,\n        selectedElements,\n        pointerX,\n        pointerY,\n        shouldRotateWithDiscreteAngle,\n        centerX,\n        centerY,\n      );\n      return true;\n    } else if (\n      transformHandleType === \"nw\" ||\n      transformHandleType === \"ne\" ||\n      transformHandleType === \"sw\" ||\n      transformHandleType === \"se\"\n    ) {\n      resizeMultipleElements(\n        selectedElements,\n        transformHandleType,\n        pointerX,\n        pointerY,\n      );\n      return true;\n    }\n  }\n  return false;\n};\n\nconst rotateSingleElement = (\n  element: NonDeletedExcalidrawElement,\n  pointerX: number,\n  pointerY: number,\n  shouldRotateWithDiscreteAngle: boolean,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  let angle = (5 * Math.PI) / 2 + Math.atan2(pointerY - cy, pointerX - cx);\n  if (shouldRotateWithDiscreteAngle) {\n    angle += SHIFT_LOCKING_ANGLE / 2;\n    angle -= angle % SHIFT_LOCKING_ANGLE;\n  }\n  angle = normalizeAngle(angle);\n  mutateElement(element, { angle });\n  const boundTextElementId = getBoundTextElementId(element);\n  if (boundTextElementId) {\n    const textElement = Scene.getScene(element)!.getElement(boundTextElementId);\n    mutateElement(textElement!, { angle });\n  }\n};\n\n// used in DEV only\nconst validateTwoPointElementNormalized = (\n  element: NonDeleted<ExcalidrawLinearElement>,\n) => {\n  if (\n    element.points.length !== 2 ||\n    element.points[0][0] !== 0 ||\n    element.points[0][1] !== 0 ||\n    Math.abs(element.points[1][0]) !== element.width ||\n    Math.abs(element.points[1][1]) !== element.height\n  ) {\n    throw new Error(\"Two-point element is not normalized\");\n  }\n};\n\nconst getPerfectElementSizeWithRotation = (\n  elementType: string,\n  width: number,\n  height: number,\n  angle: number,\n): [number, number] => {\n  const size = getPerfectElementSize(\n    elementType,\n    ...rotate(width, height, 0, 0, angle),\n  );\n  return rotate(size.width, size.height, 0, 0, -angle);\n};\n\nexport const reshapeSingleTwoPointElement = (\n  element: NonDeleted<ExcalidrawLinearElement>,\n  resizeArrowDirection: \"origin\" | \"end\",\n  shouldRotateWithDiscreteAngle: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateTwoPointElementNormalized(element);\n  }\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // rotation pointer with reverse angle\n  const [rotatedX, rotatedY] = rotate(\n    pointerX,\n    pointerY,\n    cx,\n    cy,\n    -element.angle,\n  );\n  let [width, height] =\n    resizeArrowDirection === \"end\"\n      ? [rotatedX - element.x, rotatedY - element.y]\n      : [\n          element.x + element.points[1][0] - rotatedX,\n          element.y + element.points[1][1] - rotatedY,\n        ];\n  if (shouldRotateWithDiscreteAngle) {\n    [width, height] = getPerfectElementSizeWithRotation(\n      element.type,\n      width,\n      height,\n      element.angle,\n    );\n  }\n  const [nextElementX, nextElementY] = adjustXYWithRotation(\n    resizeArrowDirection === \"end\"\n      ? { s: true, e: true }\n      : { n: true, w: true },\n    element.x,\n    element.y,\n    element.angle,\n    0,\n    0,\n    (element.points[1][0] - width) / 2,\n    (element.points[1][1] - height) / 2,\n  );\n  mutateElement(element, {\n    x: nextElementX,\n    y: nextElementY,\n    points: [\n      [0, 0],\n      [width, height],\n    ],\n  });\n};\n\nconst rescalePointsInElement = (\n  element: NonDeletedExcalidrawElement,\n  width: number,\n  height: number,\n) =>\n  isLinearElement(element) || isFreeDrawElement(element)\n    ? {\n        points: rescalePoints(\n          0,\n          width,\n          rescalePoints(1, height, element.points),\n        ),\n      }\n    : {};\n\nconst MIN_FONT_SIZE = 1;\n\nconst measureFontSizeFromWH = (\n  element: NonDeleted<ExcalidrawTextElement>,\n  nextWidth: number,\n  nextHeight: number,\n): { size: number; baseline: number } | null => {\n  // We only use width to scale font on resize\n  const nextFontSize = element.fontSize * (nextWidth / element.width);\n  if (nextFontSize < MIN_FONT_SIZE) {\n    return null;\n  }\n  const metrics = measureText(\n    element.text,\n    getFontString({ fontSize: nextFontSize, fontFamily: element.fontFamily }),\n    element.containerId ? element.width : null,\n  );\n  return {\n    size: nextFontSize,\n    baseline: metrics.baseline + (nextHeight - metrics.height),\n  };\n};\n\nconst getSidesForTransformHandle = (\n  transformHandleType: TransformHandleType,\n  shouldResizeFromCenter: boolean,\n) => {\n  return {\n    n:\n      /^(n|ne|nw)$/.test(transformHandleType) ||\n      (shouldResizeFromCenter && /^(s|se|sw)$/.test(transformHandleType)),\n    s:\n      /^(s|se|sw)$/.test(transformHandleType) ||\n      (shouldResizeFromCenter && /^(n|ne|nw)$/.test(transformHandleType)),\n    w:\n      /^(w|nw|sw)$/.test(transformHandleType) ||\n      (shouldResizeFromCenter && /^(e|ne|se)$/.test(transformHandleType)),\n    e:\n      /^(e|ne|se)$/.test(transformHandleType) ||\n      (shouldResizeFromCenter && /^(w|nw|sw)$/.test(transformHandleType)),\n  };\n};\n\nconst resizeSingleTextElement = (\n  element: NonDeleted<ExcalidrawTextElement>,\n  transformHandleType: \"nw\" | \"ne\" | \"sw\" | \"se\",\n  shouldResizeFromCenter: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // rotation pointer with reverse angle\n  const [rotatedX, rotatedY] = rotate(\n    pointerX,\n    pointerY,\n    cx,\n    cy,\n    -element.angle,\n  );\n  let scale: number;\n  switch (transformHandleType) {\n    case \"se\":\n      scale = Math.max(\n        (rotatedX - x1) / (x2 - x1),\n        (rotatedY - y1) / (y2 - y1),\n      );\n      break;\n    case \"nw\":\n      scale = Math.max(\n        (x2 - rotatedX) / (x2 - x1),\n        (y2 - rotatedY) / (y2 - y1),\n      );\n      break;\n    case \"ne\":\n      scale = Math.max(\n        (rotatedX - x1) / (x2 - x1),\n        (y2 - rotatedY) / (y2 - y1),\n      );\n      break;\n    case \"sw\":\n      scale = Math.max(\n        (x2 - rotatedX) / (x2 - x1),\n        (rotatedY - y1) / (y2 - y1),\n      );\n      break;\n  }\n  if (scale > 0) {\n    const nextWidth = element.width * scale;\n    const nextHeight = element.height * scale;\n    const nextFont = measureFontSizeFromWH(element, nextWidth, nextHeight);\n    if (nextFont === null) {\n      return;\n    }\n    const [nextX1, nextY1, nextX2, nextY2] = getResizedElementAbsoluteCoords(\n      element,\n      nextWidth,\n      nextHeight,\n    );\n    const deltaX1 = (x1 - nextX1) / 2;\n    const deltaY1 = (y1 - nextY1) / 2;\n    const deltaX2 = (x2 - nextX2) / 2;\n    const deltaY2 = (y2 - nextY2) / 2;\n    const [nextElementX, nextElementY] = adjustXYWithRotation(\n      getSidesForTransformHandle(transformHandleType, shouldResizeFromCenter),\n      element.x,\n      element.y,\n      element.angle,\n      deltaX1,\n      deltaY1,\n      deltaX2,\n      deltaY2,\n    );\n    mutateElement(element, {\n      fontSize: nextFont.size,\n      width: nextWidth,\n      height: nextHeight,\n      baseline: nextFont.baseline,\n      x: nextElementX,\n      y: nextElementY,\n    });\n  }\n};\n\nexport const resizeSingleElement = (\n  originalElements: PointerDownState[\"originalElements\"],\n  shouldMaintainAspectRatio: boolean,\n  element: NonDeletedExcalidrawElement,\n  transformHandleDirection: TransformHandleDirection,\n  shouldResizeFromCenter: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const stateAtResizeStart = originalElements.get(element.id)!;\n  // Gets bounds corners\n  const [x1, y1, x2, y2] = getResizedElementAbsoluteCoords(\n    stateAtResizeStart,\n    stateAtResizeStart.width,\n    stateAtResizeStart.height,\n  );\n  const startTopLeft: Point = [x1, y1];\n  const startBottomRight: Point = [x2, y2];\n  const startCenter: Point = centerPoint(startTopLeft, startBottomRight);\n\n  // Calculate new dimensions based on cursor position\n  const rotatedPointer = rotatePoint(\n    [pointerX, pointerY],\n    startCenter,\n    -stateAtResizeStart.angle,\n  );\n\n  // Get bounds corners rendered on screen\n  const [esx1, esy1, esx2, esy2] = getResizedElementAbsoluteCoords(\n    element,\n    element.width,\n    element.height,\n  );\n\n  const boundsCurrentWidth = esx2 - esx1;\n  const boundsCurrentHeight = esy2 - esy1;\n\n  // It's important we set the initial scale value based on the width and height at resize start,\n  // otherwise previous dimensions affected by modifiers will be taken into account.\n  const atStartBoundsWidth = startBottomRight[0] - startTopLeft[0];\n  const atStartBoundsHeight = startBottomRight[1] - startTopLeft[1];\n  let scaleX = atStartBoundsWidth / boundsCurrentWidth;\n  let scaleY = atStartBoundsHeight / boundsCurrentHeight;\n\n  let boundTextFont: { fontSize?: number; baseline?: number } = {};\n  const boundTextElement = getBoundTextElement(element);\n\n  if (transformHandleDirection.includes(\"e\")) {\n    scaleX = (rotatedPointer[0] - startTopLeft[0]) / boundsCurrentWidth;\n  }\n  if (transformHandleDirection.includes(\"s\")) {\n    scaleY = (rotatedPointer[1] - startTopLeft[1]) / boundsCurrentHeight;\n  }\n  if (transformHandleDirection.includes(\"w\")) {\n    scaleX = (startBottomRight[0] - rotatedPointer[0]) / boundsCurrentWidth;\n  }\n  if (transformHandleDirection.includes(\"n\")) {\n    scaleY = (startBottomRight[1] - rotatedPointer[1]) / boundsCurrentHeight;\n  }\n\n  // Linear elements dimensions differ from bounds dimensions\n  const eleInitialWidth = stateAtResizeStart.width;\n  const eleInitialHeight = stateAtResizeStart.height;\n  // We have to use dimensions of element on screen, otherwise the scaling of the\n  // dimensions won't match the cursor for linear elements.\n  let eleNewWidth = element.width * scaleX;\n  let eleNewHeight = element.height * scaleY;\n\n  // adjust dimensions for resizing from center\n  if (shouldResizeFromCenter) {\n    eleNewWidth = 2 * eleNewWidth - eleInitialWidth;\n    eleNewHeight = 2 * eleNewHeight - eleInitialHeight;\n  }\n\n  // adjust dimensions to keep sides ratio\n  if (shouldMaintainAspectRatio) {\n    const widthRatio = Math.abs(eleNewWidth) / eleInitialWidth;\n    const heightRatio = Math.abs(eleNewHeight) / eleInitialHeight;\n    if (transformHandleDirection.length === 1) {\n      eleNewHeight *= widthRatio;\n      eleNewWidth *= heightRatio;\n    }\n    if (transformHandleDirection.length === 2) {\n      const ratio = Math.max(widthRatio, heightRatio);\n      eleNewWidth = eleInitialWidth * ratio * Math.sign(eleNewWidth);\n      eleNewHeight = eleInitialHeight * ratio * Math.sign(eleNewHeight);\n    }\n  }\n\n  if (boundTextElement) {\n    const stateOfBoundTextElementAtResize = originalElements.get(\n      boundTextElement.id,\n    ) as typeof boundTextElement | undefined;\n    if (stateOfBoundTextElementAtResize) {\n      boundTextFont = {\n        fontSize: stateOfBoundTextElementAtResize.fontSize,\n        baseline: stateOfBoundTextElementAtResize.baseline,\n      };\n    }\n    if (shouldMaintainAspectRatio) {\n      const nextFont = measureFontSizeFromWH(\n        boundTextElement,\n        eleNewWidth - BOUND_TEXT_PADDING * 2,\n        eleNewHeight - BOUND_TEXT_PADDING * 2,\n      );\n      if (nextFont === null) {\n        return;\n      }\n      boundTextFont = {\n        fontSize: nextFont.size,\n        baseline: nextFont.baseline,\n      };\n    } else {\n      const minWidth = getApproxMinLineWidth(getFontString(boundTextElement));\n      const minHeight = getApproxMinLineHeight(getFontString(boundTextElement));\n      eleNewWidth = Math.ceil(Math.max(eleNewWidth, minWidth));\n      eleNewHeight = Math.ceil(Math.max(eleNewHeight, minHeight));\n    }\n  }\n\n  const [newBoundsX1, newBoundsY1, newBoundsX2, newBoundsY2] =\n    getResizedElementAbsoluteCoords(\n      stateAtResizeStart,\n      eleNewWidth,\n      eleNewHeight,\n    );\n  const newBoundsWidth = newBoundsX2 - newBoundsX1;\n  const newBoundsHeight = newBoundsY2 - newBoundsY1;\n\n  // Calculate new topLeft based on fixed corner during resize\n  let newTopLeft = [...startTopLeft] as [number, number];\n  if ([\"n\", \"w\", \"nw\"].includes(transformHandleDirection)) {\n    newTopLeft = [\n      startBottomRight[0] - Math.abs(newBoundsWidth),\n      startBottomRight[1] - Math.abs(newBoundsHeight),\n    ];\n  }\n  if (transformHandleDirection === \"ne\") {\n    const bottomLeft = [startTopLeft[0], startBottomRight[1]];\n    newTopLeft = [bottomLeft[0], bottomLeft[1] - Math.abs(newBoundsHeight)];\n  }\n  if (transformHandleDirection === \"sw\") {\n    const topRight = [startBottomRight[0], startTopLeft[1]];\n    newTopLeft = [topRight[0] - Math.abs(newBoundsWidth), topRight[1]];\n  }\n\n  // Keeps opposite handle fixed during resize\n  if (shouldMaintainAspectRatio) {\n    if ([\"s\", \"n\"].includes(transformHandleDirection)) {\n      newTopLeft[0] = startCenter[0] - newBoundsWidth / 2;\n    }\n    if ([\"e\", \"w\"].includes(transformHandleDirection)) {\n      newTopLeft[1] = startCenter[1] - newBoundsHeight / 2;\n    }\n  }\n\n  // Flip horizontally\n  if (eleNewWidth < 0) {\n    if (transformHandleDirection.includes(\"e\")) {\n      newTopLeft[0] -= Math.abs(newBoundsWidth);\n    }\n    if (transformHandleDirection.includes(\"w\")) {\n      newTopLeft[0] += Math.abs(newBoundsWidth);\n    }\n  }\n  // Flip vertically\n  if (eleNewHeight < 0) {\n    if (transformHandleDirection.includes(\"s\")) {\n      newTopLeft[1] -= Math.abs(newBoundsHeight);\n    }\n    if (transformHandleDirection.includes(\"n\")) {\n      newTopLeft[1] += Math.abs(newBoundsHeight);\n    }\n  }\n\n  if (shouldResizeFromCenter) {\n    newTopLeft[0] = startCenter[0] - Math.abs(newBoundsWidth) / 2;\n    newTopLeft[1] = startCenter[1] - Math.abs(newBoundsHeight) / 2;\n  }\n\n  // adjust topLeft to new rotation point\n  const angle = stateAtResizeStart.angle;\n  const rotatedTopLeft = rotatePoint(newTopLeft, startCenter, angle);\n  const newCenter: Point = [\n    newTopLeft[0] + Math.abs(newBoundsWidth) / 2,\n    newTopLeft[1] + Math.abs(newBoundsHeight) / 2,\n  ];\n  const rotatedNewCenter = rotatePoint(newCenter, startCenter, angle);\n  newTopLeft = rotatePoint(rotatedTopLeft, rotatedNewCenter, -angle);\n\n  // Readjust points for linear elements\n  const rescaledPoints = rescalePointsInElement(\n    stateAtResizeStart,\n    eleNewWidth,\n    eleNewHeight,\n  );\n  // For linear elements (x,y) are the coordinates of the first drawn point not the top-left corner\n  // So we need to readjust (x,y) to be where the first point should be\n  const newOrigin = [...newTopLeft];\n  newOrigin[0] += stateAtResizeStart.x - newBoundsX1;\n  newOrigin[1] += stateAtResizeStart.y - newBoundsY1;\n\n  const resizedElement = {\n    width: Math.abs(eleNewWidth),\n    height: Math.abs(eleNewHeight),\n    x: newOrigin[0],\n    y: newOrigin[1],\n    ...rescaledPoints,\n  };\n\n  if (\"scale\" in element && \"scale\" in stateAtResizeStart) {\n    mutateElement(element, {\n      scale: [\n        // defaulting because scaleX/Y can be 0/-0\n        (Math.sign(scaleX) || stateAtResizeStart.scale[0]) *\n          stateAtResizeStart.scale[0],\n        (Math.sign(scaleY) || stateAtResizeStart.scale[1]) *\n          stateAtResizeStart.scale[1],\n      ],\n    });\n  }\n\n  if (\n    resizedElement.width !== 0 &&\n    resizedElement.height !== 0 &&\n    Number.isFinite(resizedElement.x) &&\n    Number.isFinite(resizedElement.y)\n  ) {\n    updateBoundElements(element, {\n      newSize: { width: resizedElement.width, height: resizedElement.height },\n    });\n    mutateElement(element, resizedElement);\n    if (boundTextElement && boundTextFont) {\n      mutateElement(boundTextElement, { fontSize: boundTextFont.fontSize });\n    }\n    handleBindTextResize(element, transformHandleDirection);\n  }\n};\n\nconst resizeMultipleElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  transformHandleType: \"nw\" | \"ne\" | \"sw\" | \"se\",\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getCommonBounds(elements);\n  let scale: number;\n  let getNextXY: (\n    element: NonDeletedExcalidrawElement,\n    origCoords: readonly [number, number, number, number],\n    finalCoords: readonly [number, number, number, number],\n  ) => { x: number; y: number };\n  switch (transformHandleType) {\n    case \"se\":\n      scale = Math.max(\n        (pointerX - x1) / (x2 - x1),\n        (pointerY - y1) / (y2 - y1),\n      );\n      getNextXY = (element, [origX1, origY1], [finalX1, finalY1]) => {\n        const x = element.x + (origX1 - x1) * (scale - 1) + origX1 - finalX1;\n        const y = element.y + (origY1 - y1) * (scale - 1) + origY1 - finalY1;\n        return { x, y };\n      };\n      break;\n    case \"nw\":\n      scale = Math.max(\n        (x2 - pointerX) / (x2 - x1),\n        (y2 - pointerY) / (y2 - y1),\n      );\n      getNextXY = (element, [, , origX2, origY2], [, , finalX2, finalY2]) => {\n        const x = element.x - (x2 - origX2) * (scale - 1) + origX2 - finalX2;\n        const y = element.y - (y2 - origY2) * (scale - 1) + origY2 - finalY2;\n        return { x, y };\n      };\n      break;\n    case \"ne\":\n      scale = Math.max(\n        (pointerX - x1) / (x2 - x1),\n        (y2 - pointerY) / (y2 - y1),\n      );\n      getNextXY = (element, [origX1, , , origY2], [finalX1, , , finalY2]) => {\n        const x = element.x + (origX1 - x1) * (scale - 1) + origX1 - finalX1;\n        const y = element.y - (y2 - origY2) * (scale - 1) + origY2 - finalY2;\n        return { x, y };\n      };\n      break;\n    case \"sw\":\n      scale = Math.max(\n        (x2 - pointerX) / (x2 - x1),\n        (pointerY - y1) / (y2 - y1),\n      );\n      getNextXY = (element, [, origY1, origX2], [, finalY1, finalX2]) => {\n        const x = element.x - (x2 - origX2) * (scale - 1) + origX2 - finalX2;\n        const y = element.y + (origY1 - y1) * (scale - 1) + origY1 - finalY1;\n        return { x, y };\n      };\n      break;\n  }\n  if (scale > 0) {\n    const updates = elements.reduce(\n      (prev, element) => {\n        if (!prev) {\n          return prev;\n        }\n        const width = element.width * scale;\n        const height = element.height * scale;\n        const boundTextElement = getBoundTextElement(element);\n        let font: { fontSize?: number; baseline?: number } = {};\n\n        if (boundTextElement) {\n          const nextFont = measureFontSizeFromWH(\n            boundTextElement,\n            width - BOUND_TEXT_PADDING * 2,\n            height - BOUND_TEXT_PADDING * 2,\n          );\n\n          if (nextFont === null) {\n            return null;\n          }\n          font = {\n            fontSize: nextFont.size,\n            baseline: nextFont.baseline,\n          };\n        }\n\n        if (isTextElement(element)) {\n          const nextFont = measureFontSizeFromWH(element, width, height);\n          if (nextFont === null) {\n            return null;\n          }\n          font = { fontSize: nextFont.size, baseline: nextFont.baseline };\n        }\n        const origCoords = getElementAbsoluteCoords(element);\n\n        const rescaledPoints = rescalePointsInElement(element, width, height);\n\n        updateBoundElements(element, {\n          newSize: { width, height },\n          simultaneouslyUpdated: elements,\n        });\n\n        const finalCoords = getResizedElementAbsoluteCoords(\n          {\n            ...element,\n            ...rescaledPoints,\n          },\n          width,\n          height,\n        );\n\n        const { x, y } = getNextXY(element, origCoords, finalCoords);\n        return [...prev, { width, height, x, y, ...rescaledPoints, ...font }];\n      },\n      [] as\n        | {\n            width: number;\n            height: number;\n            x: number;\n            y: number;\n            points?: (readonly [number, number])[];\n            fontSize?: number;\n            baseline?: number;\n          }[]\n        | null,\n    );\n    if (updates) {\n      elements.forEach((element, index) => {\n        mutateElement(element, updates[index]);\n        const boundTextElement = getBoundTextElement(element);\n\n        if (boundTextElement) {\n          mutateElement(boundTextElement, {\n            fontSize: updates[index].fontSize,\n            baseline: updates[index].baseline,\n          });\n          handleBindTextResize(element, transformHandleType);\n        }\n      });\n    }\n  }\n};\n\nconst rotateMultipleElements = (\n  pointerDownState: PointerDownState,\n  elements: readonly NonDeletedExcalidrawElement[],\n  pointerX: number,\n  pointerY: number,\n  shouldRotateWithDiscreteAngle: boolean,\n  centerX: number,\n  centerY: number,\n) => {\n  let centerAngle =\n    (5 * Math.PI) / 2 + Math.atan2(pointerY - centerY, pointerX - centerX);\n  if (shouldRotateWithDiscreteAngle) {\n    centerAngle += SHIFT_LOCKING_ANGLE / 2;\n    centerAngle -= centerAngle % SHIFT_LOCKING_ANGLE;\n  }\n  elements.forEach((element, index) => {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    const origAngle =\n      pointerDownState.originalElements.get(element.id)?.angle ?? element.angle;\n    const [rotatedCX, rotatedCY] = rotate(\n      cx,\n      cy,\n      centerX,\n      centerY,\n      centerAngle + origAngle - element.angle,\n    );\n    mutateElement(element, {\n      x: element.x + (rotatedCX - cx),\n      y: element.y + (rotatedCY - cy),\n      angle: normalizeAngle(centerAngle + origAngle),\n    });\n    const boundTextElementId = getBoundTextElementId(element);\n    if (boundTextElementId) {\n      const textElement =\n        Scene.getScene(element)!.getElement(boundTextElementId)!;\n      mutateElement(textElement, {\n        x: textElement.x + (rotatedCX - cx),\n        y: textElement.y + (rotatedCY - cy),\n        angle: normalizeAngle(centerAngle + origAngle),\n      });\n    }\n  });\n};\n\nexport const getResizeOffsetXY = (\n  transformHandleType: MaybeTransformHandleType,\n  selectedElements: NonDeletedExcalidrawElement[],\n  x: number,\n  y: number,\n): [number, number] => {\n  const [x1, y1, x2, y2] =\n    selectedElements.length === 1\n      ? getElementAbsoluteCoords(selectedElements[0])\n      : getCommonBounds(selectedElements);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  const angle = selectedElements.length === 1 ? selectedElements[0].angle : 0;\n  [x, y] = rotate(x, y, cx, cy, -angle);\n  switch (transformHandleType) {\n    case \"n\":\n      return rotate(x - (x1 + x2) / 2, y - y1, 0, 0, angle);\n    case \"s\":\n      return rotate(x - (x1 + x2) / 2, y - y2, 0, 0, angle);\n    case \"w\":\n      return rotate(x - x1, y - (y1 + y2) / 2, 0, 0, angle);\n    case \"e\":\n      return rotate(x - x2, y - (y1 + y2) / 2, 0, 0, angle);\n    case \"nw\":\n      return rotate(x - x1, y - y1, 0, 0, angle);\n    case \"ne\":\n      return rotate(x - x2, y - y1, 0, 0, angle);\n    case \"sw\":\n      return rotate(x - x1, y - y2, 0, 0, angle);\n    case \"se\":\n      return rotate(x - x2, y - y2, 0, 0, angle);\n    default:\n      return [0, 0];\n  }\n};\n\nexport const getResizeArrowDirection = (\n  transformHandleType: MaybeTransformHandleType,\n  element: NonDeleted<ExcalidrawLinearElement>,\n): \"origin\" | \"end\" => {\n  const [, [px, py]] = element.points;\n  const isResizeEnd =\n    (transformHandleType === \"nw\" && (px < 0 || py < 0)) ||\n    (transformHandleType === \"ne\" && px >= 0) ||\n    (transformHandleType === \"sw\" && px <= 0) ||\n    (transformHandleType === \"se\" && (px > 0 || py > 0));\n  return isResizeEnd ? \"end\" : \"origin\";\n};\n","import { updateBoundElements } from \"./binding\";\nimport { getCommonBounds } from \"./bounds\";\nimport { mutateElement } from \"./mutateElement\";\nimport { getPerfectElementSize } from \"./sizeHelpers\";\nimport { NonDeletedExcalidrawElement } from \"./types\";\nimport { AppState, PointerDownState } from \"../types\";\nimport { getBoundTextElement } from \"./textElement\";\nimport { isSelectedViaGroup } from \"../groups\";\n\nexport const dragSelectedElements = (\n  pointerDownState: PointerDownState,\n  selectedElements: NonDeletedExcalidrawElement[],\n  pointerX: number,\n  pointerY: number,\n  lockDirection: boolean = false,\n  distanceX: number = 0,\n  distanceY: number = 0,\n  appState: AppState,\n) => {\n  const [x1, y1] = getCommonBounds(selectedElements);\n  const offset = { x: pointerX - x1, y: pointerY - y1 };\n  selectedElements.forEach((element) => {\n    updateElementCoords(\n      lockDirection,\n      distanceX,\n      distanceY,\n      pointerDownState,\n      element,\n      offset,\n    );\n    // update coords of bound text only if we're dragging the container directly\n    // (we don't drag the group that it's part of)\n    if (\n      // container isn't part of any group\n      // (perf optim so we don't check `isSelectedViaGroup()` in every case)\n      !element.groupIds.length ||\n      // container is part of a group, but we're dragging the container directly\n      (appState.editingGroupId && !isSelectedViaGroup(appState, element))\n    ) {\n      const textElement = getBoundTextElement(element);\n      if (textElement) {\n        updateElementCoords(\n          lockDirection,\n          distanceX,\n          distanceY,\n          pointerDownState,\n          textElement,\n          offset,\n        );\n      }\n    }\n    updateBoundElements(element, {\n      simultaneouslyUpdated: selectedElements,\n    });\n  });\n};\n\nconst updateElementCoords = (\n  lockDirection: boolean,\n  distanceX: number,\n  distanceY: number,\n  pointerDownState: PointerDownState,\n  element: NonDeletedExcalidrawElement,\n  offset: { x: number; y: number },\n) => {\n  let x: number;\n  let y: number;\n  if (lockDirection) {\n    const lockX = lockDirection && distanceX < distanceY;\n    const lockY = lockDirection && distanceX > distanceY;\n    const original = pointerDownState.originalElements.get(element.id);\n    x = lockX && original ? original.x : element.x + offset.x;\n    y = lockY && original ? original.y : element.y + offset.y;\n  } else {\n    x = element.x + offset.x;\n    y = element.y + offset.y;\n  }\n\n  mutateElement(element, {\n    x,\n    y,\n  });\n};\nexport const getDragOffsetXY = (\n  selectedElements: NonDeletedExcalidrawElement[],\n  x: number,\n  y: number,\n): [number, number] => {\n  const [x1, y1] = getCommonBounds(selectedElements);\n  return [x - x1, y - y1];\n};\n\nexport const dragNewElement = (\n  draggingElement: NonDeletedExcalidrawElement,\n  elementType: AppState[\"elementType\"],\n  originX: number,\n  originY: number,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  shouldMaintainAspectRatio: boolean,\n  shouldResizeFromCenter: boolean,\n  /** whether to keep given aspect ratio when `isResizeWithSidesSameLength` is\n      true */\n  widthAspectRatio?: number | null,\n) => {\n  if (shouldMaintainAspectRatio) {\n    if (widthAspectRatio) {\n      height = width / widthAspectRatio;\n    } else {\n      ({ width, height } = getPerfectElementSize(\n        elementType,\n        width,\n        y < originY ? -height : height,\n      ));\n\n      if (height < 0) {\n        height = -height;\n      }\n    }\n  }\n\n  let newX = x < originX ? originX - width : originX;\n  let newY = y < originY ? originY - height : originY;\n\n  if (shouldResizeFromCenter) {\n    width += width;\n    height += height;\n    newX = originX - width / 2;\n    newY = originY - height / 2;\n  }\n\n  if (width !== 0 && height !== 0) {\n    mutateElement(draggingElement, {\n      x: newX,\n      y: newY,\n      width,\n      height,\n    });\n  }\n};\n","import clsx from \"clsx\";\n\n// TODO: It might be \"clever\" to add option.icon to the existing component <ButtonSelect />\nexport const ButtonIconSelect = <T extends Object>({\n  options,\n  value,\n  onChange,\n  group,\n}: {\n  options: { value: T; text: string; icon: JSX.Element; testId?: string }[];\n  value: T | null;\n  onChange: (value: T) => void;\n  group: string;\n}) => (\n  <div className=\"buttonList buttonListIcon\">\n    {options.map((option) => (\n      <label\n        key={option.text}\n        className={clsx({ active: value === option.value })}\n        title={option.text}\n      >\n        <input\n          type=\"radio\"\n          name={group}\n          onChange={() => onChange(option.value)}\n          checked={value === option.value}\n          data-testid={option.testId}\n        />\n        {option.icon}\n      </label>\n    ))}\n  </div>\n);\n","import React, { useLayoutEffect, useRef, useEffect } from \"react\";\nimport \"./Popover.scss\";\nimport { unstable_batchedUpdates } from \"react-dom\";\n\ntype Props = {\n  top?: number;\n  left?: number;\n  children?: React.ReactNode;\n  onCloseRequest?(event: PointerEvent): void;\n  fitInViewport?: boolean;\n  offsetLeft?: number;\n  offsetTop?: number;\n  viewportWidth?: number;\n  viewportHeight?: number;\n};\n\nexport const Popover = ({\n  children,\n  left,\n  top,\n  onCloseRequest,\n  fitInViewport = false,\n  offsetLeft = 0,\n  offsetTop = 0,\n  viewportWidth = window.innerWidth,\n  viewportHeight = window.innerHeight,\n}: Props) => {\n  const popoverRef = useRef<HTMLDivElement>(null);\n\n  // ensure the popover doesn't overflow the viewport\n  useLayoutEffect(() => {\n    if (fitInViewport && popoverRef.current) {\n      const element = popoverRef.current;\n      const { x, y, width, height } = element.getBoundingClientRect();\n      if (x + width - offsetLeft > viewportWidth) {\n        element.style.left = `${viewportWidth - width}px`;\n      }\n      if (y + height - offsetTop > viewportHeight) {\n        element.style.top = `${viewportHeight - height}px`;\n      }\n    }\n  }, [fitInViewport, viewportWidth, viewportHeight, offsetLeft, offsetTop]);\n\n  useEffect(() => {\n    if (onCloseRequest) {\n      const handler = (event: PointerEvent) => {\n        if (!popoverRef.current?.contains(event.target as Node)) {\n          unstable_batchedUpdates(() => onCloseRequest(event));\n        }\n      };\n      document.addEventListener(\"pointerdown\", handler, false);\n      return () => document.removeEventListener(\"pointerdown\", handler, false);\n    }\n  }, [onCloseRequest]);\n\n  return (\n    <div className=\"popover\" style={{ top, left }} ref={popoverRef}>\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Popover } from \"./Popover\";\nimport { isTransparent } from \"../utils\";\n\nimport \"./ColorPicker.scss\";\nimport { isArrowKey, KEYS } from \"../keys\";\nimport { t, getLanguage } from \"../i18n\";\nimport { isWritableElement } from \"../utils\";\nimport colors from \"../colors\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\n\nconst MAX_CUSTOM_COLORS = 5;\nconst MAX_DEFAULT_COLORS = 15;\n\nexport const getCustomColors = (\n  elements: readonly ExcalidrawElement[],\n  type: \"elementBackground\" | \"elementStroke\",\n) => {\n  const customColors: string[] = [];\n  const updatedElements = elements\n    .filter((element) => !element.isDeleted)\n    .sort((ele1, ele2) => ele2.updated - ele1.updated);\n\n  let index = 0;\n  const elementColorTypeMap = {\n    elementBackground: \"backgroundColor\",\n    elementStroke: \"strokeColor\",\n  };\n  const colorType = elementColorTypeMap[type] as\n    | \"backgroundColor\"\n    | \"strokeColor\";\n  while (\n    index < updatedElements.length &&\n    customColors.length < MAX_CUSTOM_COLORS\n  ) {\n    const element = updatedElements[index];\n\n    if (\n      customColors.length < MAX_CUSTOM_COLORS &&\n      isCustomColor(element[colorType], type) &&\n      !customColors.includes(element[colorType])\n    ) {\n      customColors.push(element[colorType]);\n    }\n    index++;\n  }\n  return customColors;\n};\n\nconst isCustomColor = (\n  color: string,\n  type: \"elementBackground\" | \"elementStroke\",\n) => {\n  return !colors[type].includes(color);\n};\n\nconst isValidColor = (color: string) => {\n  const style = new Option().style;\n  style.color = color;\n  return !!style.color;\n};\n\nconst getColor = (color: string): string | null => {\n  if (isTransparent(color)) {\n    return color;\n  }\n\n  return isValidColor(color)\n    ? color\n    : isValidColor(`#${color}`)\n    ? `#${color}`\n    : null;\n};\n\n// This is a narrow reimplementation of the awesome react-color Twitter component\n// https://github.com/casesandberg/react-color/blob/master/src/components/twitter/Twitter.js\n\n// Unfortunately, we can't detect keyboard layout in the browser. So this will\n// only work well for QWERTY but not AZERTY or others...\nconst keyBindings = [\n  [\"1\", \"2\", \"3\", \"4\", \"5\"],\n  [\"q\", \"w\", \"e\", \"r\", \"t\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\"],\n  [\"z\", \"x\", \"c\", \"v\", \"b\"],\n].flat();\n\nconst Picker = ({\n  colors,\n  color,\n  onChange,\n  onClose,\n  label,\n  showInput = true,\n  type,\n  elements,\n}: {\n  colors: string[];\n  color: string | null;\n  onChange: (color: string) => void;\n  onClose: () => void;\n  label: string;\n  showInput: boolean;\n  type: \"canvasBackground\" | \"elementBackground\" | \"elementStroke\";\n  elements: readonly ExcalidrawElement[];\n}) => {\n  const firstItem = React.useRef<HTMLButtonElement>();\n  const activeItem = React.useRef<HTMLButtonElement>();\n  const gallery = React.useRef<HTMLDivElement>();\n  const colorInput = React.useRef<HTMLInputElement>();\n\n  const [customColors] = React.useState(() => {\n    if (type === \"canvasBackground\") {\n      return [];\n    }\n    return getCustomColors(elements, type);\n  });\n\n  React.useEffect(() => {\n    // After the component is first mounted focus on first input\n    if (activeItem.current) {\n      activeItem.current.focus();\n    } else if (colorInput.current) {\n      colorInput.current.focus();\n    } else if (gallery.current) {\n      gallery.current.focus();\n    }\n  }, []);\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.TAB) {\n      const { activeElement } = document;\n      if (event.shiftKey) {\n        if (activeElement === firstItem.current) {\n          colorInput.current?.focus();\n          event.preventDefault();\n        }\n      } else if (activeElement === colorInput.current) {\n        firstItem.current?.focus();\n        event.preventDefault();\n      }\n    } else if (isArrowKey(event.key)) {\n      const { activeElement } = document;\n      const isRTL = getLanguage().rtl;\n      let isCustom = false;\n      let index = Array.prototype.indexOf.call(\n        gallery!.current!.querySelector(\".color-picker-content--default\")!\n          .children,\n        activeElement,\n      );\n      if (index === -1) {\n        index = Array.prototype.indexOf.call(\n          gallery!.current!.querySelector(\n            \".color-picker-content--canvas-colors\",\n          )!.children,\n          activeElement,\n        );\n        if (index !== -1) {\n          isCustom = true;\n        }\n      }\n      const parentSelector = isCustom\n        ? gallery!.current!.querySelector(\n            \".color-picker-content--canvas-colors\",\n          )!\n        : gallery!.current!.querySelector(\".color-picker-content--default\")!;\n\n      if (index !== -1) {\n        const length = parentSelector!.children.length - (showInput ? 1 : 0);\n        const nextIndex =\n          event.key === (isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT)\n            ? (index + 1) % length\n            : event.key === (isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT)\n            ? (length + index - 1) % length\n            : !isCustom && event.key === KEYS.ARROW_DOWN\n            ? (index + 5) % length\n            : !isCustom && event.key === KEYS.ARROW_UP\n            ? (length + index - 5) % length\n            : index;\n        (parentSelector!.children![nextIndex] as HTMLElement)?.focus();\n      }\n      event.preventDefault();\n    } else if (\n      keyBindings.includes(event.key.toLowerCase()) &&\n      !isWritableElement(event.target)\n    ) {\n      const index = keyBindings.indexOf(event.key.toLowerCase());\n      const isCustom = index >= MAX_DEFAULT_COLORS;\n      const parentSelector = isCustom\n        ? gallery!.current!.querySelector(\n            \".color-picker-content--canvas-colors\",\n          )!\n        : gallery!.current!.querySelector(\".color-picker-content--default\")!;\n      const actualIndex = isCustom ? index - MAX_DEFAULT_COLORS : index;\n      (parentSelector!.children![actualIndex] as HTMLElement)?.focus();\n\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      event.preventDefault();\n      onClose();\n    }\n    event.nativeEvent.stopImmediatePropagation();\n    event.stopPropagation();\n  };\n\n  const renderColors = (colors: Array<string>, custom: boolean = false) => {\n    return colors.map((_color, i) => {\n      const _colorWithoutHash = _color.replace(\"#\", \"\");\n      const keyBinding = custom\n        ? keyBindings[i + MAX_DEFAULT_COLORS]\n        : keyBindings[i];\n      const label = custom\n        ? _colorWithoutHash\n        : t(`colors.${_colorWithoutHash}`);\n      return (\n        <button\n          className=\"color-picker-swatch\"\n          onClick={(event) => {\n            (event.currentTarget as HTMLButtonElement).focus();\n            onChange(_color);\n          }}\n          title={`${label}${\n            !isTransparent(_color) ? ` (${_color})` : \"\"\n          } — ${keyBinding.toUpperCase()}`}\n          aria-label={label}\n          aria-keyshortcuts={keyBindings[i]}\n          style={{ color: _color }}\n          key={_color}\n          ref={(el) => {\n            if (!custom && el && i === 0) {\n              firstItem.current = el;\n            }\n            if (el && _color === color) {\n              activeItem.current = el;\n            }\n          }}\n          onFocus={() => {\n            onChange(_color);\n          }}\n        >\n          {isTransparent(_color) ? (\n            <div className=\"color-picker-transparent\"></div>\n          ) : undefined}\n          <span className=\"color-picker-keybinding\">{keyBinding}</span>\n        </button>\n      );\n    });\n  };\n\n  return (\n    <div\n      className={`color-picker color-picker-type-${type}`}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label={t(\"labels.colorPicker\")}\n      onKeyDown={handleKeyDown}\n    >\n      <div className=\"color-picker-triangle color-picker-triangle-shadow\"></div>\n      <div className=\"color-picker-triangle\"></div>\n      <div\n        className=\"color-picker-content\"\n        ref={(el) => {\n          if (el) {\n            gallery.current = el;\n          }\n        }}\n        tabIndex={0}\n      >\n        <div className=\"color-picker-content--default\">\n          {renderColors(colors)}\n        </div>\n        {!!customColors.length && (\n          <div className=\"color-picker-content--canvas\">\n            <span className=\"color-picker-content--canvas-title\">\n              {t(\"labels.canvasColors\")}\n            </span>\n            <div className=\"color-picker-content--canvas-colors\">\n              {renderColors(customColors, true)}\n            </div>\n          </div>\n        )}\n\n        {showInput && (\n          <ColorInput\n            color={color}\n            label={label}\n            onChange={(color) => {\n              onChange(color);\n            }}\n            ref={colorInput}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ColorInput = React.forwardRef(\n  (\n    {\n      color,\n      onChange,\n      label,\n    }: {\n      color: string | null;\n      onChange: (color: string) => void;\n      label: string;\n    },\n    ref,\n  ) => {\n    const [innerValue, setInnerValue] = React.useState(color);\n    const inputRef = React.useRef(null);\n\n    React.useEffect(() => {\n      setInnerValue(color);\n    }, [color]);\n\n    React.useImperativeHandle(ref, () => inputRef.current);\n\n    const changeColor = React.useCallback(\n      (inputValue: string) => {\n        const value = inputValue.toLowerCase();\n        const color = getColor(value);\n        if (color) {\n          onChange(color);\n        }\n        setInnerValue(value);\n      },\n      [onChange],\n    );\n\n    return (\n      <label className=\"color-input-container\">\n        <div className=\"color-picker-hash\">#</div>\n        <input\n          spellCheck={false}\n          className=\"color-picker-input\"\n          aria-label={label}\n          onChange={(event) => changeColor(event.target.value)}\n          value={(innerValue || \"\").replace(/^#/, \"\")}\n          onBlur={() => setInnerValue(color)}\n          ref={inputRef}\n        />\n      </label>\n    );\n  },\n);\n\nexport const ColorPicker = ({\n  type,\n  color,\n  onChange,\n  label,\n  isActive,\n  setActive,\n  elements,\n  appState,\n}: {\n  type: \"canvasBackground\" | \"elementBackground\" | \"elementStroke\";\n  color: string | null;\n  onChange: (color: string) => void;\n  label: string;\n  isActive: boolean;\n  setActive: (active: boolean) => void;\n  elements: readonly ExcalidrawElement[];\n  appState: AppState;\n}) => {\n  const pickerButton = React.useRef<HTMLButtonElement>(null);\n\n  return (\n    <div>\n      <div className=\"color-picker-control-container\">\n        <button\n          className=\"color-picker-label-swatch\"\n          aria-label={label}\n          style={color ? { \"--swatch-color\": color } : undefined}\n          onClick={() => setActive(!isActive)}\n          ref={pickerButton}\n        />\n        <ColorInput\n          color={color}\n          label={label}\n          onChange={(color) => {\n            onChange(color);\n          }}\n        />\n      </div>\n      <React.Suspense fallback=\"\">\n        {isActive ? (\n          <Popover\n            onCloseRequest={(event) =>\n              event.target !== pickerButton.current && setActive(false)\n            }\n          >\n            <Picker\n              colors={colors[type]}\n              color={color || null}\n              onChange={(changedColor) => {\n                onChange(changedColor);\n              }}\n              onClose={() => {\n                setActive(false);\n                pickerButton.current?.focus();\n              }}\n              label={label}\n              showInput={false}\n              type={type}\n              elements={elements}\n            />\n          </Popover>\n        ) : null}\n      </React.Suspense>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Popover } from \"./Popover\";\n\nimport \"./IconPicker.scss\";\nimport { isArrowKey, KEYS } from \"../keys\";\nimport { getLanguage } from \"../i18n\";\n\nfunction Picker<T>({\n  options,\n  value,\n  label,\n  onChange,\n  onClose,\n}: {\n  label: string;\n  value: T;\n  options: { value: T; text: string; icon: JSX.Element; keyBinding: string }[];\n  onChange: (value: T) => void;\n  onClose: () => void;\n}) {\n  const rFirstItem = React.useRef<HTMLButtonElement>();\n  const rActiveItem = React.useRef<HTMLButtonElement>();\n  const rGallery = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    // After the component is first mounted focus on first input\n    if (rActiveItem.current) {\n      rActiveItem.current.focus();\n    } else if (rGallery.current) {\n      rGallery.current.focus();\n    }\n  }, []);\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    const pressedOption = options.find(\n      (option) => option.keyBinding === event.key.toLowerCase(),\n    )!;\n\n    if (!(event.metaKey || event.altKey || event.ctrlKey) && pressedOption) {\n      // Keybinding navigation\n      const index = options.indexOf(pressedOption);\n      (rGallery!.current!.children![index] as any).focus();\n      event.preventDefault();\n    } else if (event.key === KEYS.TAB) {\n      // Tab navigation cycle through options. If the user tabs\n      // away from the picker, close the picker. We need to use\n      // a timeout here to let the stack clear before checking.\n      setTimeout(() => {\n        const active = rActiveItem.current;\n        const docActive = document.activeElement;\n        if (active !== docActive) {\n          onClose();\n        }\n      }, 0);\n    } else if (isArrowKey(event.key)) {\n      // Arrow navigation\n      const { activeElement } = document;\n      const isRTL = getLanguage().rtl;\n      const index = Array.prototype.indexOf.call(\n        rGallery!.current!.children,\n        activeElement,\n      );\n      if (index !== -1) {\n        const length = options.length;\n        let nextIndex = index;\n\n        switch (event.key) {\n          // Select the next option\n          case isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT:\n          case KEYS.ARROW_DOWN: {\n            nextIndex = (index + 1) % length;\n            break;\n          }\n          // Select the previous option\n          case isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT:\n          case KEYS.ARROW_UP: {\n            nextIndex = (length + index - 1) % length;\n            break;\n          }\n        }\n\n        (rGallery.current!.children![nextIndex] as any).focus();\n      }\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      // Close on escape or enter\n      event.preventDefault();\n      onClose();\n    }\n    event.nativeEvent.stopImmediatePropagation();\n    event.stopPropagation();\n  };\n\n  return (\n    <div\n      className={`picker`}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label={label}\n      onKeyDown={handleKeyDown}\n    >\n      <div className=\"picker-content\" ref={rGallery}>\n        {options.map((option, i) => (\n          <button\n            className=\"picker-option\"\n            onClick={(event) => {\n              (event.currentTarget as HTMLButtonElement).focus();\n              onChange(option.value);\n            }}\n            title={`${option.text} — ${option.keyBinding.toUpperCase()}`}\n            aria-label={option.text || \"none\"}\n            aria-keyshortcuts={option.keyBinding}\n            key={option.text}\n            ref={(el) => {\n              if (el && i === 0) {\n                rFirstItem.current = el;\n              }\n              if (el && option.value === value) {\n                rActiveItem.current = el;\n              }\n            }}\n            onFocus={() => {\n              onChange(option.value);\n            }}\n          >\n            {option.icon}\n            <span className=\"picker-keybinding\">{option.keyBinding}</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport function IconPicker<T>({\n  value,\n  label,\n  options,\n  onChange,\n  group = \"\",\n}: {\n  label: string;\n  value: T;\n  options: { value: T; text: string; icon: JSX.Element; keyBinding: string }[];\n  onChange: (value: T) => void;\n  group?: string;\n}) {\n  const [isActive, setActive] = React.useState(false);\n  const rPickerButton = React.useRef<any>(null);\n  const isRTL = getLanguage().rtl;\n\n  return (\n    <label className={\"picker-container\"}>\n      <button\n        name={group}\n        className={isActive ? \"active\" : \"\"}\n        aria-label={label}\n        onClick={() => setActive(!isActive)}\n        ref={rPickerButton}\n      >\n        {options.find((option) => option.value === value)?.icon}\n      </button>\n      <React.Suspense fallback=\"\">\n        {isActive ? (\n          <>\n            <Popover\n              onCloseRequest={(event) =>\n                event.target !== rPickerButton.current && setActive(false)\n              }\n              {...(isRTL ? { right: 5.5 } : { left: -5.5 })}\n            >\n              <Picker\n                options={options}\n                value={value}\n                label={label}\n                onChange={onChange}\n                onClose={() => {\n                  setActive(false);\n                  rPickerButton.current?.focus();\n                }}\n              />\n            </Popover>\n            <div className=\"picker-triangle\" />\n          </>\n        ) : null}\n      </React.Suspense>\n    </label>\n  );\n}\n","//\n// All icons are imported from https://fontawesome.com/icons?d=gallery\n// Icons are under the license https://fontawesome.com/license\n//\n\n// Note: when adding new icons, review https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/RTL_Guidelines\n// to determine whether or not the icons should be mirrored in right-to-left languages.\n\nimport React from \"react\";\n\nimport oc from \"open-color\";\nimport clsx from \"clsx\";\nimport { Theme } from \"../element/types\";\nimport { THEME } from \"../constants\";\n\nconst activeElementColor = (theme: Theme) =>\n  theme === THEME.LIGHT ? oc.orange[4] : oc.orange[9];\n\nconst iconFillColor = (theme: Theme) => \"var(--icon-fill-color)\";\n\nconst handlerColor = (theme: Theme) =>\n  theme === THEME.LIGHT ? oc.white : \"#1e1e1e\";\n\ntype Opts = {\n  width?: number;\n  height?: number;\n  mirror?: true;\n} & React.SVGProps<SVGSVGElement>;\n\nexport const createIcon = (\n  d: string | React.ReactNode,\n  opts: number | Opts = 512,\n) => {\n  const {\n    width = 512,\n    height = width,\n    mirror,\n    style,\n  } = typeof opts === \"number\" ? ({ width: opts } as Opts) : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      className={clsx({ \"rtl-mirror\": mirror })}\n      style={style}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nexport const checkIcon = createIcon(\n  <polyline fill=\"none\" stroke=\"currentColor\" points=\"20 6 9 17 4 12\" />,\n  {\n    width: 24,\n    height: 24,\n  },\n);\n\nexport const link = createIcon(\n  \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\",\n  { mirror: true },\n);\n\nexport const save = createIcon(\n  \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z\",\n  { width: 448, height: 512 },\n);\n\nexport const saveAs = createIcon(\n  \"M252 54L203 8a28 27 0 00-20-8H28C12 0 0 12 0 27v195c0 15 12 26 28 26h204c15 0 28-11 28-26V73a28 27 0 00-8-19zM130 213c-21 0-37-16-37-36 0-19 16-35 37-35 20 0 37 16 37 35 0 20-17 36-37 36zm56-169v56c0 4-4 6-7 6H44c-4 0-7-2-7-6V42c0-4 3-7 7-7h133l4 2 3 2a7 7 0 012 5z M296 201l87 95-188 205-78 9c-10 1-19-8-18-20l9-84zm141-14l-41-44a31 31 0 00-46 0l-38 41 87 95 38-42c13-14 13-36 0-50z\",\n  { width: 448, height: 512 },\n);\n\nexport const load = createIcon(\n  \"M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z\",\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const clipboard = createIcon(\n  \"M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 0 0-6-6H102a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h180a6 6 0 0 0 6-6z\",\n  { width: 384, height: 512 },\n);\n\nexport const trash = createIcon(\n  \"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\",\n\n  { width: 448, height: 512 },\n);\n\nexport const palette = createIcon(\n  \"M204.3 5C104.9 24.4 24.8 104.3 5.2 203.4c-37 187 131.7 326.4 258.8 306.7 41.2-6.4 61.4-54.6 42.5-91.7-23.1-45.4 9.9-98.4 60.9-98.4h79.7c35.8 0 64.8-29.6 64.9-65.3C511.5 97.1 368.1-26.9 204.3 5zM96 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm32-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128-64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\",\n);\n\nexport const exportFile = createIcon(\n  \"M384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128zM571 308l-95.7-96.4c-10.1-10.1-27.4-3-27.4 11.3V288h-64v64h64v65.2c0 14.3 17.3 21.4 27.4 11.3L571 332c6.6-6.6 6.6-17.4 0-24zm-379 28v-32c0-8.8 7.2-16 16-16h176V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V352H208c-8.8 0-16-7.2-16-16z\",\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const exportImage = createIcon(\n  <>\n    <path d=\"M571 308l-95.7-96.4c-10.1-10.1-27.4-3-27.4 11.3V288h-64v64h64v65.2c0 14.3 17.3 21.4 27.4 11.3L571 332c6.6-6.6 6.6-17.4 0-24zm-187 44v-64 64z\" />\n    <path d=\"M384 121.941V128H256V0h6.059c6.362 0 12.471 2.53 16.97 7.029l97.941 97.941a24.01 24.01 0 017.03 16.971zM248 160c-13.2 0-24-10.8-24-24V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248zm-135.455 16c26.51 0 48 21.49 48 48s-21.49 48-48 48-48-21.49-48-48 21.491-48 48-48zm208 240h-256l.485-48.485L104.545 328c4.686-4.686 11.799-4.201 16.485.485L160.545 368 264.06 264.485c4.686-4.686 12.284-4.686 16.971 0L320.545 304v112z\" />\n  </>,\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const exportToFileIcon = createIcon(\n  \"M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z\",\n  { width: 512, height: 512 },\n);\n\nexport const zoomIn = createIcon(\n  \"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\",\n  { width: 448, height: 512 },\n);\n\nexport const zoomOut = createIcon(\n  \"M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\",\n  { width: 448, height: 512 },\n);\n\nexport const done = createIcon(\n  \"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\",\n);\n\nexport const menu = createIcon(\n  \"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\",\n);\n\nexport const undo = createIcon(\n  \"M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z\",\n  { mirror: true },\n);\n\nexport const redo = createIcon(\n  \"M256.455 8c66.269.119 126.437 26.233 170.859 68.685l35.715-35.715C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.75c-30.864-28.899-70.801-44.907-113.23-45.273-92.398-.798-170.283 73.977-169.484 169.442C88.764 348.009 162.184 424 256 424c41.127 0 79.997-14.678 110.629-41.556 4.743-4.161 11.906-3.908 16.368.553l39.662 39.662c4.872 4.872 4.631 12.815-.482 17.433C378.202 479.813 319.926 504 256 504 119.034 504 8.001 392.967 8 256.002 7.999 119.193 119.646 7.755 256.455 8z\",\n  { mirror: true },\n);\n\nexport const questionCircle = createIcon(\n  \"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z\",\n  { mirror: true },\n);\n\nexport const share = createIcon(\n  \"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z\",\n  { width: 24, height: 24 },\n);\n\nexport const shareIOS = createIcon(\n  \"M16 5l-1.42 1.42-1.59-1.59V16h-1.98V4.83L9.42 6.42 8 5l4-4 4 4zm4 5v11c0 1.1-.9 2-2 2H6c-1.11 0-2-.9-2-2V10c0-1.11.89-2 2-2h3v2H6v11h12V10h-3V8h3c1.1 0 2 .89 2 2z\",\n  { width: 24, height: 24 },\n);\n\nexport const shareWindows = createIcon(\n  <>\n    <path\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      d=\"M40 5.6v6.1l-4.1.7c-8.9 1.4-16.5 6.9-20.6 15C13 32 10.9 43 12.4 43c.4 0 2.4-1.3 4.4-3 5-3.9 12.1-7 18.2-7.7l5-.6v12.8l11.2-11.3L62.5 22 51.2 10.8 40-.5v6.1zm10.2 22.6L44 34.5v-6.8l-6.9.6c-3.9.3-9.8 1.7-13.2 3.1-3.5 1.4-6.5 2.4-6.7 2.2-.9-1 3-7.5 6.4-10.8C28 18.6 34.4 16 40.1 16c3.7 0 3.9-.1 3.9-3.2V9.5l6.2 6.3 6.3 6.2-6.3 6.2z\"\n    />\n    <path\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      d=\"M0 36v20h48v-6.2c0-6 0-6.1-2-4.3-1.1 1-2 2.9-2 4.2V52H4V34c0-17.3-.1-18-2-18s-2 .7-2 20z\"\n    />\n  </>,\n  { width: 64, height: 64 },\n);\n\n// Icon imported form Storybook\n// Storybook is licensed under MIT https://github.com/storybookjs/storybook/blob/next/LICENSE\nexport const resetZoom = createIcon(\n  <path\n    stroke=\"currentColor\"\n    strokeWidth=\"40\"\n    fill=\"currentColor\"\n    d=\"M148 560a318 318 0 0 0 522 110 316 316 0 0 0 0-450 316 316 0 0 0-450 0c-11 11-21 22-30 34v4h47c25 0 46 21 46 46s-21 45-46 45H90c-13 0-25-6-33-14-9-9-14-20-14-33V156c0-25 20-45 45-45s45 20 45 45v32l1 1a401 401 0 0 1 623 509l212 212a42 42 0 0 1-59 59L698 757A401 401 0 0 1 65 570a42 42 0 0 1 83-10z\"\n  />,\n  { width: 1024 },\n);\n\nexport const BringForwardIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <>\n      <path\n        d=\"M22 9.556C22 8.696 21.303 8 20.444 8H16v8H8v4.444C8 21.304 8.697 22 9.556 22h10.888c.86 0 1.556-.697 1.556-1.556V9.556z\"\n        fill={iconFillColor(theme)}\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"2\"\n      />\n      <path\n        d=\"M16 3.556C16 2.696 15.303 2 14.444 2H3.556C2.696 2 2 2.697 2 3.556v10.888C2 15.304 2.697 16 3.556 16h10.888c.86 0 1.556-.697 1.556-1.556V3.556z\"\n        fill={activeElementColor(theme)}\n        stroke={activeElementColor(theme)}\n        strokeWidth=\"2\"\n      />\n    </>,\n    { width: 24, mirror: true },\n  ),\n);\n\nexport const SendBackwardIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <>\n      <path\n        d=\"M16 3.556C16 2.696 15.303 2 14.444 2H3.556C2.696 2 2 2.697 2 3.556v10.888C2 15.304 2.697 16 3.556 16h10.888c.86 0 1.556-.697 1.556-1.556V3.556z\"\n        fill={activeElementColor(theme)}\n        stroke={activeElementColor(theme)}\n        strokeWidth=\"2\"\n      />\n      <path\n        d=\"M22 9.556C22 8.696 21.303 8 20.444 8H9.556C8.696 8 8 8.697 8 9.556v10.888C8 21.304 8.697 22 9.556 22h10.888c.86 0 1.556-.697 1.556-1.556V9.556z\"\n        fill={iconFillColor(theme)}\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"2\"\n      />\n    </>,\n    { width: 24, mirror: true },\n  ),\n);\n\nexport const BringToFrontIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <>\n      <path\n        d=\"M13 21a1 1 0 001 1h7a1 1 0 001-1v-7a1 1 0 00-1-1h-3v5h-5v3zM11 3a1 1 0 00-1-1H3a1 1 0 00-1 1v7a1 1 0 001 1h3V6h5V3z\"\n        fill={iconFillColor(theme)}\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"2\"\n      />\n      <path\n        d=\"M18 7.333C18 6.597 17.403 6 16.667 6H7.333C6.597 6 6 6.597 6 7.333v9.334C6 17.403 6.597 18 7.333 18h9.334c.736 0 1.333-.597 1.333-1.333V7.333z\"\n        fill={activeElementColor(theme)}\n        stroke={activeElementColor(theme)}\n        strokeWidth=\"2\"\n      />\n    </>,\n    { width: 24, mirror: true },\n  ),\n);\n\nexport const SendToBackIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <>\n      <path\n        d=\"M18 7.333C18 6.597 17.403 6 16.667 6H7.333C6.597 6 6 6.597 6 7.333v9.334C6 17.403 6.597 18 7.333 18h9.334c.736 0 1.333-.597 1.333-1.333V7.333z\"\n        fill={activeElementColor(theme)}\n        stroke={activeElementColor(theme)}\n        strokeWidth=\"2\"\n      />\n      <path\n        d=\"M11 3a1 1 0 00-1-1H3a1 1 0 00-1 1v7a1 1 0 001 1h8V3zM22 14a1 1 0 00-1-1h-7a1 1 0 00-1 1v7a1 1 0 001 1h8v-8z\"\n        fill={iconFillColor(theme)}\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"2\"\n      />\n    </>,\n    { width: 24, mirror: true },\n  ),\n);\n\n//\n// Align action icons created from scratch to match those of z-index actions\n// Note: vertical align icons are flipped so the larger item is always the\n// first one the user sees. Horizontal align icons should not be flipped since\n// that would make them lie about their function.\n//\nexport const AlignTopIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <>\n      <path\n        d=\"M 2,5 H 22\"\n        fill={iconFillColor(theme)}\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        d=\"M 6,7 C 5.446,7 5,7.446 5,8 v 9.999992 c 0,0.554 0.446,1 1,1 h 3.0000001 c 0.554,0 0.9999999,-0.446 0.9999999,-1 V 8 C 10,7.446 9.5540001,7 9.0000001,7 Z m 9,0 c -0.554,0 -1,0.446 -1,1 v 5.999992 c 0,0.554 0.446,1 1,1 h 3 c 0.554,0 1,-0.446 1,-1 V 8 C 19,7.446 18.554,7 18,7 Z\"\n        fill={activeElementColor(theme)}\n        stroke={activeElementColor(theme)}\n        strokeWidth=\"2\"\n      />\n    </>,\n    { width: 24, mirror: true },\n  ),\n);\n\nexport const AlignBottomIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <>\n      <path\n        d=\"M 2,19 H 22\"\n        fill={iconFillColor(theme)}\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        d=\"m 6,16.999992 c -0.554,0 -1,-0.446 -1,-1 V 6 C 5,5.446 5.446,5 6,5 H 9.0000001 C 9.5540001,5 10,5.446 10,6 v 9.999992 c 0,0.554 -0.4459999,1 -0.9999999,1 z m 9,0 c -0.554,0 -1,-0.446 -1,-1 V 10 c 0,-0.554 0.446,-1 1,-1 h 3 c 0.554,0 1,0.446 1,1 v 5.999992 c 0,0.554 -0.446,1 -1,1 z\"\n        fill={activeElementColor(theme)}\n        stroke={activeElementColor(theme)}\n        strokeWidth=\"2\"\n      />\n    </>,\n    { width: 24, mirror: true },\n  ),\n);\n\nexport const AlignLeftIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <>\n      <path\n        d=\"M 5,2 V 22\"\n        fill={iconFillColor(theme)}\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        d=\"m 7.000004,5.999996 c 0,-0.554 0.446,-1 1,-1 h 9.999992 c 0.554,0 1,0.446 1,1 v 3.0000001 c 0,0.554 -0.446,0.9999999 -1,0.9999999 H 8.000004 c -0.554,0 -1,-0.4459999 -1,-0.9999999 z m 0,9 c 0,-0.554 0.446,-1 1,-1 h 5.999992 c 0.554,0 1,0.446 1,1 v 3 c 0,0.554 -0.446,1 -1,1 H 8.000004 c -0.554,0 -1,-0.446 -1,-1 z\"\n        fill={activeElementColor(theme)}\n        stroke={activeElementColor(theme)}\n        strokeWidth=\"2\"\n      />\n    </>,\n    { width: 24 },\n  ),\n);\n\nexport const AlignRightIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <>\n      <path\n        d=\"M 19,2 V 22\"\n        fill={iconFillColor(theme)}\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        d=\"m 16.999996,5.999996 c 0,-0.554 -0.446,-1 -1,-1 H 6.000004 c -0.554,0 -1,0.446 -1,1 v 3.0000001 c 0,0.554 0.446,0.9999999 1,0.9999999 h 9.999992 c 0.554,0 1,-0.4459999 1,-0.9999999 z m 0,9 c 0,-0.554 -0.446,-1 -1,-1 h -5.999992 c -0.554,0 -1,0.446 -1,1 v 3 c 0,0.554 0.446,1 1,1 h 5.999992 c 0.554,0 1,-0.446 1,-1 z\"\n        fill={activeElementColor(theme)}\n        stroke={activeElementColor(theme)}\n        strokeWidth=\"2\"\n      />\n    </>,\n    { width: 24 },\n  ),\n);\n\nexport const DistributeHorizontallyIcon = React.memo(\n  ({ theme }: { theme: Theme }) =>\n    createIcon(\n      <>\n        <path\n          d=\"M19 5V19M5 5V19\"\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n        <path\n          d=\"M15 9C15.554 9 16 9.446 16 10V14C16 14.554 15.554 15 15 15H9C8.446 15 8 14.554 8 14V10C8 9.446 8.446 9 9 9H15Z\"\n          fill={activeElementColor(theme)}\n          stroke={activeElementColor(theme)}\n          strokeWidth=\"2\"\n        />\n      </>,\n      { width: 24 },\n    ),\n);\n\nexport const DistributeVerticallyIcon = React.memo(\n  ({ theme }: { theme: Theme }) =>\n    createIcon(\n      <>\n        <path\n          d=\"M5 5L19 5M5 19H19\"\n          fill={iconFillColor(theme)}\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n        <path\n          d=\"M15 9C15.554 9 16 9.446 16 10V14C16 14.554 15.554 15 15 15H9C8.446 15 8 14.554 8 14V10C8 9.446 8.446 9 9 9H15Z\"\n          fill={activeElementColor(theme)}\n          stroke={activeElementColor(theme)}\n          strokeWidth=\"2\"\n        />\n      </>,\n      { width: 24 },\n    ),\n);\n\nexport const CenterVerticallyIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <>\n      <path\n        d=\"m 5.000004,16.999996 c 0,0.554 0.446,1 1,1 h 3 c 0.554,0 1,-0.446 1,-1 v -10 c 0,-0.554 -0.446,-1 -1,-1 h -3 c -0.554,0 -1,0.446 -1,1 z m 9,-2 c 0,0.554 0.446,1 1,1 h 3 c 0.554,0 1,-0.446 1,-1 v -6 c 0,-0.554 -0.446,-1 -1,-1 h -3 c -0.554,0 -1,0.446 -1,1 z\"\n        fill={activeElementColor(theme)}\n        stroke={activeElementColor(theme)}\n        strokeWidth=\"2\"\n      />\n      <path\n        d=\"M 2,12 H 22\"\n        fill={iconFillColor(theme)}\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"2\"\n        strokeDasharray=\"1, 2.8\"\n        strokeLinecap=\"round\"\n      />\n    </>,\n    { width: 24, mirror: true },\n  ),\n);\n\nexport const CenterHorizontallyIcon = React.memo(\n  ({ theme }: { theme: Theme }) =>\n    createIcon(\n      <>\n        <path\n          d=\"M 7 5 C 6.446 5 6 5.446 6 6 L 6 9 C 6 9.554 6.446 10 7 10 L 17 10 C 17.554 10 18 9.554 18 9 L 18 6 C 18 5.446 17.554 5 17 5 L 7 5 z M 9 14 C 8.446 14 8 14.446 8 15 L 8 18 C 8 18.554 8.446 19 9 19 L 15 19 C 15.554 19 16 18.554 16 18 L 16 15 C 16 14.446 15.554 14 15 14 L 9 14 z \"\n          fill={activeElementColor(theme)}\n          stroke={activeElementColor(theme)}\n          strokeWidth=\"2\"\n        />\n        <path\n          d=\"M 12,2 V 22\"\n          fill={iconFillColor(theme)}\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n          strokeDasharray=\"1, 2.8\"\n          strokeLinecap=\"round\"\n        />\n      </>,\n      { width: 24 },\n    ),\n);\n\nexport const users = createIcon(\n  \"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\",\n  { width: 640, height: 512, mirror: true },\n);\n\n// not mirrored because it's inspired by a playback control, which is always RTL\nexport const start = createIcon(\n  \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z\",\n);\n\nexport const stop = createIcon(\n  \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm96 328c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16v160z\",\n);\n\nexport const close = createIcon(\n  \"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\",\n  { width: 352, height: 512 },\n);\n\nexport const back = createIcon(\n  \"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z\",\n  { width: 320, height: 512, style: { marginLeft: \"-0.2rem\" }, mirror: true },\n);\n\nexport const clone = createIcon(\n  \"M464 0c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48H176c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h288M176 416c-44.112 0-80-35.888-80-80V128H48c-26.51 0-48 21.49-48 48v288c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48v-48H176z\",\n  { mirror: true },\n);\n\n// modified https://feathericons.com/?query=shield\nexport const shield = createIcon(\n  \"M11.553 22.894a.998.998 0 00.894 0s3.037-1.516 5.465-4.097C19.616 16.987 21 14.663 21 12V5a1 1 0 00-.649-.936l-8-3a.998.998 0 00-.702 0l-8 3A1 1 0 003 5v7c0 2.663 1.384 4.987 3.088 6.797 2.428 2.581 5.465 4.097 5.465 4.097zm-1.303-8.481l6.644-6.644a.856.856 0 111.212 1.212l-7.25 7.25a.856.856 0 01-1.212 0l-3.75-3.75a.856.856 0 111.212-1.212l3.144 3.144z\",\n  { width: 24 },\n);\n\nexport const file = createIcon(\n  \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm32-48h224V288l-23.5-23.5c-4.7-4.7-12.3-4.7-17 0L176 352l-39.5-39.5c-4.7-4.7-12.3-4.7-17 0L80 352v64zm48-240c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\",\n  { width: 384, height: 512 },\n);\n\nexport const GroupIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <>\n      <path d=\"M25 26H111V111H25\" fill={iconFillColor(theme)} />\n      <path\n        d=\"M25 111C25 80.2068 25 49.4135 25 26M25 26C48.6174 26 72.2348 26 111 26H25ZM25 26C53.3671 26 81.7343 26 111 26H25ZM111 26C111 52.303 111 78.606 111 111V26ZM111 26C111 51.2947 111 76.5893 111 111V26ZM111 111C87.0792 111 63.1585 111 25 111H111ZM111 111C87.4646 111 63.9293 111 25 111H111ZM25 111C25 81.1514 25 51.3028 25 26V111Z\"\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"2\"\n      />\n      <path d=\"M100 100H160V160H100\" fill={iconFillColor(theme)} />\n      <path\n        d=\"M100 160C100 144.106 100 128.211 100 100M100 100C117.706 100 135.412 100 160 100H100ZM100 100C114.214 100 128.428 100 160 100H100ZM160 100C160 120.184 160 140.369 160 160V100ZM160 100C160 113.219 160 126.437 160 160V100ZM160 160C145.534 160 131.068 160 100 160H160ZM160 160C143.467 160 126.934 160 100 160H160ZM100 160C100 143.661 100 127.321 100 100V160Z\"\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"2\"\n      />\n      <g\n        fill={handlerColor(theme)}\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"6\"\n      >\n        <rect x=\"2.5\" y=\"2.5\" width=\"30\" height=\"30\" />\n        <rect x=\"2.5\" y=\"149.5\" width=\"30\" height=\"30\" />\n        <rect x=\"147.5\" y=\"149.5\" width=\"30\" height=\"30\" />\n        <rect x=\"147.5\" y=\"2.5\" width=\"30\" height=\"30\" />\n      </g>\n    </>,\n    { width: 182, height: 182, mirror: true },\n  ),\n);\n\nexport const UngroupIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <>\n      <path d=\"M25 26H111V111H25\" fill={iconFillColor(theme)} />\n      <path\n        d=\"M25 111C25 80.2068 25 49.4135 25 26M25 26C48.6174 26 72.2348 26 111 26H25ZM25 26C53.3671 26 81.7343 26 111 26H25ZM111 26C111 52.303 111 78.606 111 111V26ZM111 26C111 51.2947 111 76.5893 111 111V26ZM111 111C87.0792 111 63.1585 111 25 111H111ZM111 111C87.4646 111 63.9293 111 25 111H111ZM25 111C25 81.1514 25 51.3028 25 26V111Z\"\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"2\"\n      />\n      <path d=\"M100 100H160V160H100\" fill={iconFillColor(theme)} />\n      <path\n        d=\"M100 160C100 144.106 100 128.211 100 100M100 100C117.706 100 135.412 100 160 100H100ZM100 100C114.214 100 128.428 100 160 100H100ZM160 100C160 120.184 160 140.369 160 160V100ZM160 100C160 113.219 160 126.437 160 160V100ZM160 160C145.534 160 131.068 160 100 160H160ZM160 160C143.467 160 126.934 160 100 160H160ZM100 160C100 143.661 100 127.321 100 100V160Z\"\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"2\"\n      />\n      <g\n        fill={handlerColor(theme)}\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"6\"\n      >\n        <rect x=\"2.5\" y=\"2.5\" width=\"30\" height=\"30\" />\n        <rect x=\"78.5\" y=\"149.5\" width=\"30\" height=\"30\" />\n        <rect x=\"147.5\" y=\"149.5\" width=\"30\" height=\"30\" />\n        <rect x=\"147.5\" y=\"78.5\" width=\"30\" height=\"30\" />\n        <rect x=\"105.5\" y=\"2.5\" width=\"30\" height=\"30\" />\n        <rect x=\"2.5\" y=\"102.5\" width=\"30\" height=\"30\" />\n      </g>\n    </>,\n    { width: 182, height: 182, mirror: true },\n  ),\n);\n\nexport const FillHachureIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M20.101 16H28.0934L36 8.95989V4H33.5779L20.101 16ZM30.5704 4L17.0935 16H9.10101L22.5779 4H30.5704ZM19.5704 4L6.09349 16H4V10.7475L11.5779 4H19.5704ZM8.57036 4H4V8.06952L8.57036 4ZM36 11.6378L31.101 16H36V11.6378ZM2 2V18H38V2H2Z\"\n      fill={iconFillColor(theme)}\n    />,\n    { width: 40, height: 20 },\n  ),\n);\n\nexport const FillCrossHatchIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <g fill={iconFillColor(theme)} fillRule=\"evenodd\" clipRule=\"evenodd\">\n      <path d=\"M20.101 16H28.0934L36 8.95989V4H33.5779L20.101 16ZM30.5704 4L17.0935 16H9.10101L22.5779 4H30.5704ZM19.5704 4L6.09349 16H4V10.7475L11.5779 4H19.5704ZM8.57036 4H4V8.06952L8.57036 4ZM36 11.6378L31.101 16H36V11.6378ZM2 2V18H38V2H2Z\" />\n      <path d=\"M14.0001 18L3.00006 4.00002L4.5727 2.76438L15.5727 16.7644L14.0001 18ZM25.0001 18L14.0001 4.00002L15.5727 2.76438L26.5727 16.7644L25.0001 18ZM36.0001 18L25.0001 4.00002L26.5727 2.76438L37.5727 16.7644L36.0001 18Z\" />\n    </g>,\n    { width: 40, height: 20 },\n  ),\n);\n\nexport const FillSolidIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(<path d=\"M2 2H38V18H2V2Z\" fill={iconFillColor(theme)} />, {\n    width: 40,\n    height: 20,\n  }),\n);\n\nexport const StrokeWidthIcon = React.memo(\n  ({ theme, strokeWidth }: { theme: Theme; strokeWidth: number }) =>\n    createIcon(\n      <path\n        d=\"M6 10H32\"\n        stroke={iconFillColor(theme)}\n        strokeWidth={strokeWidth}\n        strokeLinecap=\"round\"\n        fill=\"none\"\n      />,\n      { width: 40, height: 20 },\n    ),\n);\n\nexport const StrokeStyleSolidIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      d=\"M6 10H34\"\n      stroke={iconFillColor(theme)}\n      strokeWidth={2}\n      fill=\"none\"\n      strokeLinecap=\"round\"\n    />,\n    {\n      width: 40,\n      height: 20,\n    },\n  ),\n);\n\nexport const StrokeStyleDashedIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      d=\"M6 10H34\"\n      stroke={iconFillColor(theme)}\n      strokeWidth={2.5}\n      strokeDasharray={\"10, 8\"}\n      fill=\"none\"\n      strokeLinecap=\"round\"\n    />,\n    { width: 40, height: 20 },\n  ),\n);\n\nexport const StrokeStyleDottedIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      d=\"M6 10H36\"\n      stroke={iconFillColor(theme)}\n      strokeWidth={2.5}\n      strokeDasharray={\"2, 4.5\"}\n      fill=\"none\"\n      strokeLinecap=\"round\"\n    />,\n    { width: 40, height: 20 },\n  ),\n);\n\nexport const SloppinessArchitectIcon = React.memo(\n  ({ theme }: { theme: Theme }) =>\n    createIcon(\n      <path\n        d=\"M3.00098 16.1691C6.28774 13.9744 19.6399 2.8905 22.7215 3.00082C25.8041 3.11113 19.1158 15.5488 21.4962 16.8309C23.8757 18.1131 34.4155 11.7148 37.0001 10.6919\"\n        stroke={iconFillColor(theme)}\n        strokeWidth={2}\n        strokeLinecap=\"round\"\n        fill=\"none\"\n      />,\n      { width: 40, height: 20, mirror: true },\n    ),\n);\n\nexport const SloppinessArtistIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      d=\"M3 17C6.68158 14.8752 16.1296 9.09849 22.0648 6.54922C28 3.99995 22.2896 13.3209 25 14C27.7104 14.6791 36.3757 9.6471 36.3757 9.6471M6.40706 15C13 11.1918 20.0468 1.51045 23.0234 3.0052C26 4.49995 20.457 12.8659 22.7285 16.4329C25 20 36.3757 13 36.3757 13\"\n      stroke={iconFillColor(theme)}\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      fill=\"none\"\n    />,\n    { width: 40, height: 20, mirror: true },\n  ),\n);\n\nexport const SloppinessCartoonistIcon = React.memo(\n  ({ theme }: { theme: Theme }) =>\n    createIcon(\n      <path\n        d=\"M3 15.6468C6.93692 13.5378 22.5544 2.81528 26.6206 3.00242C30.6877 3.18956 25.6708 15.3346 27.4009 16.7705C29.1309 18.2055 35.4001 12.4762 37 11.6177M3.97143 10.4917C6.61158 9.24563 16.3706 2.61886 19.8104 3.01724C23.2522 3.41472 22.0773 12.2013 24.6181 12.8783C27.1598 13.5536 33.3179 8.04068 35.0571 7.07244\"\n        stroke={iconFillColor(theme)}\n        strokeWidth={2}\n        strokeLinecap=\"round\"\n        fill=\"none\"\n      />,\n      { width: 40, height: 20, mirror: true },\n    ),\n);\n\nexport const EdgeSharpIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      d=\"M10 17L10 5L35 5\"\n      stroke={iconFillColor(theme)}\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      fill=\"none\"\n    />,\n    { width: 40, height: 20, mirror: true },\n  ),\n);\n\nexport const EdgeRoundIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      d=\"M10 17V15C10 8 13 5 21 5L33.5 5\"\n      stroke={iconFillColor(theme)}\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      fill=\"none\"\n    />,\n    { width: 40, height: 20, mirror: true },\n  ),\n);\n\nexport const ArrowheadNoneIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      d=\"M6 10H34\"\n      stroke={iconFillColor(theme)}\n      strokeWidth={2}\n      fill=\"none\"\n    />,\n    {\n      width: 40,\n      height: 20,\n    },\n  ),\n);\n\nexport const ArrowheadArrowIcon = React.memo(\n  ({ theme, flip = false }: { theme: Theme; flip?: boolean }) =>\n    createIcon(\n      <g\n        transform={flip ? \"translate(40, 0) scale(-1, 1)\" : \"\"}\n        stroke={iconFillColor(theme)}\n        strokeWidth={2}\n        fill=\"none\"\n      >\n        <path d=\"M34 10H6M34 10L27 5M34 10L27 15\" />\n        <path d=\"M27.5 5L34.5 10L27.5 15\" />\n      </g>,\n      { width: 40, height: 20 },\n    ),\n);\n\nexport const ArrowheadDotIcon = React.memo(\n  ({ theme, flip = false }: { theme: Theme; flip?: boolean }) =>\n    createIcon(\n      <g\n        stroke={iconFillColor(theme)}\n        fill={iconFillColor(theme)}\n        transform={flip ? \"translate(40, 0) scale(-1, 1)\" : \"\"}\n      >\n        <path d=\"M32 10L6 10\" strokeWidth={2} />\n        <circle r=\"4\" transform=\"matrix(-1 0 0 1 30 10)\" />\n      </g>,\n      { width: 40, height: 20 },\n    ),\n);\n\nexport const ArrowheadBarIcon = React.memo(\n  ({ theme, flip = false }: { theme: Theme; flip?: boolean }) =>\n    createIcon(\n      <g transform={flip ? \"translate(40, 0) scale(-1, 1)\" : \"\"}>\n        <path\n          d=\"M34 10H5.99996M34 10L34 5M34 10L34 15\"\n          stroke={iconFillColor(theme)}\n          strokeWidth={2}\n          fill=\"none\"\n        />\n      </g>,\n      { width: 40, height: 20 },\n    ),\n);\n\nexport const ArrowheadTriangleIcon = React.memo(\n  ({ theme, flip = false }: { theme: Theme; flip?: boolean }) =>\n    createIcon(\n      <g\n        stroke={iconFillColor(theme)}\n        fill={iconFillColor(theme)}\n        transform={flip ? \"translate(40, 0) scale(-1, 1)\" : \"\"}\n      >\n        <path d=\"M32 10L6 10\" strokeWidth={2} />\n        <path d=\"M27.5 5.5L34.5 10L27.5 14.5L27.5 5.5\" />\n      </g>,\n      { width: 40, height: 20 },\n    ),\n);\n\nexport const FontSizeSmallIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      fill={iconFillColor(theme)}\n      d=\"M 0 69.092 L 0 55.03 A 124.24 124.24 0 0 0 4.706 57.02 Q 6.826 57.863 8.708 58.5 A 53.466 53.466 0 0 0 12.231 59.571 Q 17.236 60.889 21.387 60.889 A 20.909 20.909 0 0 0 24.265 60.704 Q 25.719 60.502 26.903 60.077 A 8.649 8.649 0 0 0 29.028 58.985 Q 31.689 57.08 31.689 53.321 Q 31.689 51.221 30.518 49.585 A 10.126 10.126 0 0 0 29.282 48.177 Q 28.352 47.287 27.075 46.436 A 23.719 23.719 0 0 0 25.752 45.627 Q 23.774 44.492 20.176 42.735 A 254.44 254.44 0 0 0 17.822 41.602 Q 11.503 38.631 8.236 35.888 A 19.742 19.742 0 0 1 8.008 35.694 A 22.18 22.18 0 0 1 2.783 29.102 Q 0.83 25.342 0.83 20.313 A 22.471 22.471 0 0 1 1.733 13.778 A 17.283 17.283 0 0 1 7.251 5.42 A 21.486 21.486 0 0 1 15.177 1.272 Q 18.361 0.338 22.166 0.09 A 43.573 43.573 0 0 1 25 0 A 42.399 42.399 0 0 1 34.349 1.01 A 39.075 39.075 0 0 1 35.62 1.319 A 67.407 67.407 0 0 1 42.108 3.382 A 83.357 83.357 0 0 1 46.191 5.03 L 41.309 16.797 Q 35.596 14.453 31.86 13.526 A 30.762 30.762 0 0 0 25.417 12.612 A 28.337 28.337 0 0 0 24.512 12.598 A 14.846 14.846 0 0 0 22.022 12.793 Q 19.498 13.224 17.92 14.6 Q 15.625 16.602 15.625 19.824 Q 15.625 21.826 16.553 23.316 Q 17.48 24.805 19.507 26.197 A 18.343 18.343 0 0 0 20.659 26.912 Q 22.596 28.035 26.516 29.953 A 299.99 299.99 0 0 0 29.102 31.201 Q 37.91 35.412 41.841 39.642 A 16.553 16.553 0 0 1 42.822 40.796 A 17.675 17.675 0 0 1 46.301 49.233 A 23.517 23.517 0 0 1 46.533 52.588 A 21.581 21.581 0 0 1 45.471 59.515 A 17.733 17.733 0 0 1 39.575 67.823 Q 33.745 72.486 24.094 73.243 A 49.683 49.683 0 0 1 20.215 73.389 A 51.712 51.712 0 0 1 9.448 72.315 A 40.672 40.672 0 0 1 0 69.092 Z\"\n    />,\n    { width: 47, height: 77 },\n  ),\n);\n\nexport const FontSizeMediumIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      fill={iconFillColor(theme)}\n      d=\"M 44.092 71.387 L 30.225 71.387 L 13.037 15.381 L 12.598 15.381 A 1505.093 1505.093 0 0 1 12.959 22.313 Q 13.426 31.715 13.508 36.4 A 102.991 102.991 0 0 1 13.525 38.184 L 13.525 71.387 L 0 71.387 L 0 0 L 20.605 0 L 37.5 54.59 L 37.793 54.59 L 55.713 0 L 76.318 0 L 76.318 71.387 L 62.207 71.387 L 62.207 37.598 Q 62.207 35.205 62.28 32.08 A 160.703 160.703 0 0 1 62.326 30.544 Q 62.452 26.754 62.866 17.168 A 5390.536 5390.536 0 0 1 62.939 15.479 L 62.5 15.479 L 44.092 71.387 Z\"\n    />,\n    { width: 77, height: 75 },\n  ),\n);\n\nexport const FontSizeLargeIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      fill={iconFillColor(theme)}\n      d=\"M 44.092 71.387 L 0 71.387 L 0 0 L 15.137 0 L 15.137 58.887 L 44.092 58.887 L 44.092 71.387 Z\"\n    />,\n    { width: 45, height: 75 },\n  ),\n);\n\nexport const FontSizeExtraLargeIcon = React.memo(\n  ({ theme }: { theme: Theme }) =>\n    createIcon(\n      <path\n        fill={iconFillColor(theme)}\n        d=\"M 42.578 35.4 L 66.699 71.387 L 49.414 71.387 L 32.813 44.385 L 16.211 71.387 L 0 71.387 L 23.682 34.57 L 1.514 0 L 18.213 0 L 33.594 25.684 L 48.682 0 L 64.99 0 L 42.578 35.4 Z M 119.775 71.387 L 75.684 71.387 L 75.684 0 L 90.82 0 L 90.82 58.887 L 119.775 58.887 L 119.775 71.387 Z\"\n      />,\n      { width: 120, height: 75 },\n    ),\n);\n\nexport const FontFamilyHandDrawnIcon = React.memo(\n  ({ theme }: { theme: Theme }) =>\n    createIcon(\n      <path\n        fill={iconFillColor(theme)}\n        d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n      />,\n      { width: 448, height: 512 },\n    ),\n);\n\nexport const FontFamilyNormalIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <>\n      <path\n        fill={iconFillColor(theme)}\n        d=\"M 63.818 71.68 L 54.492 71.68 L 45.898 49.561 L 17.578 49.561 L 9.082 71.68 L 0 71.68 L 27.881 0 L 35.986 0 L 63.818 71.68 Z M 20.605 41.602 L 43.213 41.602 L 35.205 19.971 L 31.787 9.277 Q 30.322 15.137 28.711 19.971 L 20.605 41.602 Z\"\n      />\n      <path\n        fill={iconFillColor(theme)}\n        d=\"M 68.994 71.68 L 52.686 71.68 L 47.51 54.688 L 21.484 54.688 L 16.309 71.68 L 0 71.68 L 25.195 0 L 43.701 0 L 68.994 71.68 Z M 25.293 41.992 L 43.896 41.992 A 27590.463 27590.463 0 0 1 42.2 36.532 Q 36.965 19.676 35.937 16.273 A 120.932 120.932 0 0 1 35.815 15.869 A 131.65 131.65 0 0 1 35.396 14.435 Q 34.951 12.879 34.675 11.741 A 34.866 34.866 0 0 1 34.521 11.084 A 141.762 141.762 0 0 1 33.706 14.075 Q 31.482 21.957 25.293 41.992 Z\"\n      />\n    </>,\n    { width: 70, height: 78 },\n  ),\n);\n\nexport const FontFamilyCodeIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <>\n      <path\n        fill={iconFillColor(theme)}\n        d=\"M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z\"\n      />\n    </>,\n    { width: 640, height: 512 },\n  ),\n);\n\nexport const TextAlignLeftIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      d=\"M12.83 352h262.34A12.82 12.82 0 00288 339.17v-38.34A12.82 12.82 0 00275.17 288H12.83A12.82 12.82 0 000 300.83v38.34A12.82 12.82 0 0012.83 352zm0-256h262.34A12.82 12.82 0 00288 83.17V44.83A12.82 12.82 0 00275.17 32H12.83A12.82 12.82 0 000 44.83v38.34A12.82 12.82 0 0012.83 96zM432 160H16a16 16 0 00-16 16v32a16 16 0 0016 16h416a16 16 0 0016-16v-32a16 16 0 00-16-16zm0 256H16a16 16 0 00-16 16v32a16 16 0 0016 16h416a16 16 0 0016-16v-32a16 16 0 00-16-16z\"\n      fill={iconFillColor(theme)}\n      strokeLinecap=\"round\"\n    />,\n    { width: 448, height: 512 },\n  ),\n);\n\nexport const TextAlignCenterIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      d=\"M432 160H16a16 16 0 00-16 16v32a16 16 0 0016 16h416a16 16 0 0016-16v-32a16 16 0 00-16-16zm0 256H16a16 16 0 00-16 16v32a16 16 0 0016 16h416a16 16 0 0016-16v-32a16 16 0 00-16-16zM108.1 96h231.81A12.09 12.09 0 00352 83.9V44.09A12.09 12.09 0 00339.91 32H108.1A12.09 12.09 0 0096 44.09V83.9A12.1 12.1 0 00108.1 96zm231.81 256A12.09 12.09 0 00352 339.9v-39.81A12.09 12.09 0 00339.91 288H108.1A12.09 12.09 0 0096 300.09v39.81a12.1 12.1 0 0012.1 12.1z\"\n      fill={iconFillColor(theme)}\n    />,\n    { width: 448, height: 512 },\n  ),\n);\n\nexport const TextAlignRightIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      d=\"M16 224h416a16 16 0 0016-16v-32a16 16 0 00-16-16H16a16 16 0 00-16 16v32a16 16 0 0016 16zm416 192H16a16 16 0 00-16 16v32a16 16 0 0016 16h416a16 16 0 0016-16v-32a16 16 0 00-16-16zm3.17-384H172.83A12.82 12.82 0 00160 44.83v38.34A12.82 12.82 0 00172.83 96h262.34A12.82 12.82 0 00448 83.17V44.83A12.82 12.82 0 00435.17 32zm0 256H172.83A12.82 12.82 0 00160 300.83v38.34A12.82 12.82 0 00172.83 352h262.34A12.82 12.82 0 00448 339.17v-38.34A12.82 12.82 0 00435.17 288z\"\n      fill={iconFillColor(theme)}\n      strokeLinecap=\"round\"\n    />,\n    { width: 448, height: 512 },\n  ),\n);\n\nexport const TextAlignTopIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      d=\"m16,132l416,0c8.837,0 16,-7.163 16,-16l0,-40c0,-8.837 -7.163,-16 -16,-16l-416,0c-8.837,0 -16,7.163 -16,16l0,40c0,8.837 7.163,16 16,16zm0,160l416,0c8.837,0 16,-7.163 16,-16l0,-40c0,-8.837 -7.163,-16 -16,-16l-416,0c-8.837,0 -16,7.163 -16,16l0,40c0,8.837 7.163,16 16,16z\"\n      fill={iconFillColor(theme)}\n      strokeLinecap=\"round\"\n    />,\n    { width: 448, height: 512 },\n  ),\n);\n\nexport const TextAlignBottomIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      d=\"M16,292L432,292C440.837,292 448,284.837 448,276L448,236C448,227.163 440.837,220 432,220L16,220C7.163,220 0,227.163 0,236L0,276C0,284.837 7.163,292 16,292ZM16,452L432,452C440.837,452 448,444.837 448,436L448,396C448,387.163 440.837,380 432,380L16,380C7.163,380 0,387.163 0,396L0,436C0,444.837 7.163,452 16,452Z\"\n      fill={iconFillColor(theme)}\n      strokeLinecap=\"round\"\n    />,\n    { width: 448, height: 512 },\n  ),\n);\n\nexport const TextAlignMiddleIcon = React.memo(({ theme }: { theme: Theme }) =>\n  createIcon(\n    <path\n      transform=\"matrix(1,0,0,1,0,80)\"\n      d=\"M16,132L432,132C440.837,132 448,124.837 448,116L448,76C448,67.163 440.837,60 432,60L16,60C7.163,60 0,67.163 0,76L0,116C0,124.837 7.163,132 16,132ZM16,292L432,292C440.837,292 448,284.837 448,276L448,236C448,227.163 440.837,220 432,220L16,220C7.163,220 0,227.163 0,236L0,276C0,284.837 7.163,292 16,292Z\"\n      fill={iconFillColor(theme)}\n      strokeLinecap=\"round\"\n    />,\n    { width: 448, height: 512 },\n  ),\n);\n\nexport const publishIcon = createIcon(\n  <path\n    d=\"M537.6 226.6c4.1-10.7 6.4-22.4 6.4-34.6 0-53-43-96-96-96-19.7 0-38.1 6-53.3 16.2C367 64.2 315.3 32 256 32c-88.4 0-160 71.6-160 160 0 2.7.1 5.4.2 8.1C40.2 219.8 0 273.2 0 336c0 79.5 64.5 144 144 144h368c70.7 0 128-57.3 128-128 0-61.9-44-113.6-102.4-125.4zM393.4 288H328v112c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V288h-65.4c-14.3 0-21.4-17.2-11.3-27.3l105.4-105.4c6.2-6.2 16.4-6.2 22.6 0l105.4 105.4c10.1 10.1 2.9 27.3-11.3 27.3z\"\n    fill=\"currentColor\"\n  />,\n  { width: 640, height: 512 },\n);\n\nexport const editIcon = createIcon(\n  <path\n    fill=\"currentColor\"\n    d=\"M402.3 344.9l32-32c5-5 13.7-1.5 13.7 5.7V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h273.5c7.1 0 10.7 8.6 5.7 13.7l-32 32c-1.5 1.5-3.5 2.3-5.7 2.3H48v352h352V350.5c0-2.1.8-4.1 2.3-5.6zm156.6-201.8L296.3 405.7l-90.4 10c-26.2 2.9-48.5-19.2-45.6-45.6l10-90.4L432.9 17.1c22.9-22.9 59.9-22.9 82.7 0l43.2 43.2c22.9 22.9 22.9 60 .1 82.8zM460.1 174L402 115.9 216.2 301.8l-7.3 65.3 65.3-7.3L460.1 174zm64.8-79.7l-43.2-43.2c-4.1-4.1-10.8-4.1-14.8 0L436 82l58.1 58.1 30.9-30.9c4-4.2 4-10.8-.1-14.9z\"\n  ></path>,\n  { width: 640, height: 512 },\n);\n\nexport const eraser = createIcon(\n  <path d=\"M480 416C497.7 416 512 430.3 512 448C512 465.7 497.7 480 480 480H150.6C133.7 480 117.4 473.3 105.4 461.3L25.37 381.3C.3786 356.3 .3786 315.7 25.37 290.7L258.7 57.37C283.7 32.38 324.3 32.38 349.3 57.37L486.6 194.7C511.6 219.7 511.6 260.3 486.6 285.3L355.9 416H480zM265.4 416L332.7 348.7L195.3 211.3L70.63 336L150.6 416L265.4 416z\" />,\n);\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextContainer,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\n\nimport { getElementAbsoluteCoords } from \"../element\";\nimport { isTextBindableContainer } from \"../element/typeChecks\";\n\nexport const hasBackground = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"line\" ||\n  type === \"freedraw\";\n\nexport const hasStrokeColor = (type: string) => type !== \"image\";\n\nexport const hasStrokeWidth = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"freedraw\" ||\n  type === \"arrow\" ||\n  type === \"line\";\n\nexport const hasStrokeStyle = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"arrow\" ||\n  type === \"line\";\n\nexport const canChangeSharpness = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"arrow\" ||\n  type === \"line\" ||\n  type === \"diamond\";\n\nexport const hasText = (type: string) => type === \"text\";\n\nexport const canHaveArrowheads = (type: string) => type === \"arrow\";\n\nexport const getElementAtPosition = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  isAtPositionFn: (element: NonDeletedExcalidrawElement) => boolean,\n) => {\n  let hitElement = null;\n  // We need to to hit testing from front (end of the array) to back (beginning of the array)\n  // because array is ordered from lower z-index to highest and we want element z-index\n  // with higher z-index\n  for (let index = elements.length - 1; index >= 0; --index) {\n    const element = elements[index];\n    if (element.isDeleted) {\n      continue;\n    }\n    if (isAtPositionFn(element)) {\n      hitElement = element;\n      break;\n    }\n  }\n\n  return hitElement;\n};\n\nexport const getElementsAtPosition = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  isAtPositionFn: (element: NonDeletedExcalidrawElement) => boolean,\n) => {\n  // The parameter elements comes ordered from lower z-index to higher.\n  // We want to preserve that order on the returned array.\n  return elements.filter(\n    (element) => !element.isDeleted && isAtPositionFn(element),\n  );\n};\n\nexport const getTextBindableContainerAtPosition = (\n  elements: readonly ExcalidrawElement[],\n  x: number,\n  y: number,\n): ExcalidrawTextContainer | null => {\n  let hitElement = null;\n  // We need to to hit testing from front (end of the array) to back (beginning of the array)\n  for (let index = elements.length - 1; index >= 0; --index) {\n    if (elements[index].isDeleted) {\n      continue;\n    }\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(elements[index]);\n    if (x1 < x && x < x2 && y1 < y && y < y2) {\n      hitElement = elements[index];\n      break;\n    }\n  }\n  return isTextBindableContainer(hitElement) ? hitElement : null;\n};\n","import { Action } from \"./types\";\n\nexport let actions: readonly Action[] = [];\n\nexport const register = <T extends Action>(action: T) => {\n  actions = actions.concat(action);\n  return action as T & {\n    keyTest?: unknown extends T[\"keyTest\"] ? never : T[\"keyTest\"];\n  };\n};\n","import { AppState } from \"../../src/types\";\nimport { ButtonIconSelect } from \"../components/ButtonIconSelect\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { IconPicker } from \"../components/IconPicker\";\nimport {\n  ArrowheadArrowIcon,\n  ArrowheadBarIcon,\n  ArrowheadDotIcon,\n  ArrowheadTriangleIcon,\n  ArrowheadNoneIcon,\n  EdgeRoundIcon,\n  EdgeSharpIcon,\n  FillCrossHatchIcon,\n  FillHachureIcon,\n  FillSolidIcon,\n  FontFamilyCodeIcon,\n  FontFamilyHandDrawnIcon,\n  FontFamilyNormalIcon,\n  FontSizeExtraLargeIcon,\n  FontSizeLargeIcon,\n  FontSizeMediumIcon,\n  FontSizeSmallIcon,\n  SloppinessArchitectIcon,\n  SloppinessArtistIcon,\n  SloppinessCartoonistIcon,\n  StrokeStyleDashedIcon,\n  StrokeStyleDottedIcon,\n  StrokeStyleSolidIcon,\n  StrokeWidthIcon,\n  TextAlignCenterIcon,\n  TextAlignLeftIcon,\n  TextAlignRightIcon,\n  TextAlignTopIcon,\n  TextAlignBottomIcon,\n  TextAlignMiddleIcon,\n} from \"../components/icons\";\nimport {\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_SIZE,\n  FONT_FAMILY,\n  VERTICAL_ALIGN,\n} from \"../constants\";\nimport {\n  getNonDeletedElements,\n  isTextElement,\n  redrawTextBoundingBox,\n} from \"../element\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport {\n  getBoundTextElement,\n  getContainerElement,\n} from \"../element/textElement\";\nimport {\n  isBoundToContainer,\n  isLinearElement,\n  isLinearElementType,\n} from \"../element/typeChecks\";\nimport {\n  Arrowhead,\n  ExcalidrawElement,\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  FontFamilyValues,\n  TextAlign,\n  VerticalAlign,\n} from \"../element/types\";\nimport { getLanguage, t } from \"../i18n\";\nimport { KEYS } from \"../keys\";\nimport { randomInteger } from \"../random\";\nimport {\n  canChangeSharpness,\n  canHaveArrowheads,\n  getCommonAttributeOfSelectedElements,\n  getSelectedElements,\n  getTargetElements,\n  isSomeElementSelected,\n} from \"../scene\";\nimport { hasStrokeColor } from \"../scene/comparisons\";\nimport { arrayToMap } from \"../utils\";\nimport { register } from \"./register\";\n\nconst FONT_SIZE_RELATIVE_INCREASE_STEP = 0.1;\n\nconst changeProperty = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  callback: (element: ExcalidrawElement) => ExcalidrawElement,\n  includeBoundText = false,\n) => {\n  const selectedElementIds = arrayToMap(\n    getSelectedElements(elements, appState, includeBoundText),\n  );\n  return elements.map((element) => {\n    if (\n      selectedElementIds.get(element.id) ||\n      element.id === appState.editingElement?.id\n    ) {\n      return callback(element);\n    }\n    return element;\n  });\n};\n\nconst getFormValue = function <T>(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n  defaultValue?: T,\n): T | null {\n  const editingElement = appState.editingElement;\n  const nonDeletedElements = getNonDeletedElements(elements);\n  return (\n    (editingElement && getAttribute(editingElement)) ??\n    (isSomeElementSelected(nonDeletedElements, appState)\n      ? getCommonAttributeOfSelectedElements(\n          nonDeletedElements,\n          appState,\n          getAttribute,\n        )\n      : defaultValue) ??\n    null\n  );\n};\n\nconst offsetElementAfterFontResize = (\n  prevElement: ExcalidrawTextElement,\n  nextElement: ExcalidrawTextElement,\n) => {\n  if (isBoundToContainer(nextElement)) {\n    return nextElement;\n  }\n  return mutateElement(\n    nextElement,\n    {\n      x:\n        prevElement.textAlign === \"left\"\n          ? prevElement.x\n          : prevElement.x +\n            (prevElement.width - nextElement.width) /\n              (prevElement.textAlign === \"center\" ? 2 : 1),\n      // centering vertically is non-standard, but for Excalidraw I think\n      // it makes sense\n      y: prevElement.y + (prevElement.height - nextElement.height) / 2,\n    },\n    false,\n  );\n};\n\nconst changeFontSize = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  getNewFontSize: (element: ExcalidrawTextElement) => number,\n  fallbackValue?: ExcalidrawTextElement[\"fontSize\"],\n) => {\n  const newFontSizes = new Set<number>();\n\n  return {\n    elements: changeProperty(\n      elements,\n      appState,\n      (oldElement) => {\n        if (isTextElement(oldElement)) {\n          const newFontSize = getNewFontSize(oldElement);\n          newFontSizes.add(newFontSize);\n\n          let newElement: ExcalidrawTextElement = newElementWith(oldElement, {\n            fontSize: newFontSize,\n          });\n          redrawTextBoundingBox(\n            newElement,\n            getContainerElement(oldElement),\n            appState,\n          );\n\n          newElement = offsetElementAfterFontResize(oldElement, newElement);\n\n          return newElement;\n        }\n\n        return oldElement;\n      },\n      true,\n    ),\n    appState: {\n      ...appState,\n      // update state only if we've set all select text elements to\n      // the same font size\n      currentItemFontSize:\n        newFontSizes.size === 1\n          ? [...newFontSizes][0]\n          : fallbackValue ?? appState.currentItemFontSize,\n    },\n    commitToHistory: true,\n  };\n};\n\n// -----------------------------------------------------------------------------\n\nexport const actionChangeStrokeColor = register({\n  name: \"changeStrokeColor\",\n  perform: (elements, appState, value) => {\n    return {\n      ...(value.currentItemStrokeColor && {\n        elements: changeProperty(\n          elements,\n          appState,\n          (el) => {\n            return hasStrokeColor(el.type)\n              ? newElementWith(el, {\n                  strokeColor: value.currentItemStrokeColor,\n                })\n              : el;\n          },\n          true,\n        ),\n      }),\n      appState: {\n        ...appState,\n        ...value,\n      },\n      commitToHistory: !!value.currentItemStrokeColor,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.stroke\")}</h3>\n      <ColorPicker\n        type=\"elementStroke\"\n        label={t(\"labels.stroke\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeColor,\n          appState.currentItemStrokeColor,\n        )}\n        onChange={(color) => updateData({ currentItemStrokeColor: color })}\n        isActive={appState.openPopup === \"strokeColorPicker\"}\n        setActive={(active) =>\n          updateData({ openPopup: active ? \"strokeColorPicker\" : null })\n        }\n        elements={elements}\n        appState={appState}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeBackgroundColor = register({\n  name: \"changeBackgroundColor\",\n  perform: (elements, appState, value) => {\n    return {\n      ...(value.currentItemBackgroundColor && {\n        elements: changeProperty(elements, appState, (el) =>\n          newElementWith(el, {\n            backgroundColor: value.currentItemBackgroundColor,\n          }),\n        ),\n      }),\n      appState: {\n        ...appState,\n        ...value,\n      },\n      commitToHistory: !!value.currentItemBackgroundColor,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.background\")}</h3>\n      <ColorPicker\n        type=\"elementBackground\"\n        label={t(\"labels.background\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.backgroundColor,\n          appState.currentItemBackgroundColor,\n        )}\n        onChange={(color) => updateData({ currentItemBackgroundColor: color })}\n        isActive={appState.openPopup === \"backgroundColorPicker\"}\n        setActive={(active) =>\n          updateData({ openPopup: active ? \"backgroundColorPicker\" : null })\n        }\n        elements={elements}\n        appState={appState}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeFillStyle = register({\n  name: \"changeFillStyle\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          fillStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemFillStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fill\")}</legend>\n      <ButtonIconSelect\n        options={[\n          {\n            value: \"hachure\",\n            text: t(\"labels.hachure\"),\n            icon: <FillHachureIcon theme={appState.theme} />,\n          },\n          {\n            value: \"cross-hatch\",\n            text: t(\"labels.crossHatch\"),\n            icon: <FillCrossHatchIcon theme={appState.theme} />,\n          },\n          {\n            value: \"solid\",\n            text: t(\"labels.solid\"),\n            icon: <FillSolidIcon theme={appState.theme} />,\n          },\n        ]}\n        group=\"fill\"\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.fillStyle,\n          appState.currentItemFillStyle,\n        )}\n        onChange={(value) => {\n          updateData(value);\n        }}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeWidth = register({\n  name: \"changeStrokeWidth\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeWidth: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeWidth: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeWidth\")}</legend>\n      <ButtonIconSelect\n        group=\"stroke-width\"\n        options={[\n          {\n            value: 1,\n            text: t(\"labels.thin\"),\n            icon: <StrokeWidthIcon theme={appState.theme} strokeWidth={2} />,\n          },\n          {\n            value: 2,\n            text: t(\"labels.bold\"),\n            icon: <StrokeWidthIcon theme={appState.theme} strokeWidth={6} />,\n          },\n          {\n            value: 4,\n            text: t(\"labels.extraBold\"),\n            icon: <StrokeWidthIcon theme={appState.theme} strokeWidth={10} />,\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeWidth,\n          appState.currentItemStrokeWidth,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeSloppiness = register({\n  name: \"changeSloppiness\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          seed: randomInteger(),\n          roughness: value,\n        }),\n      ),\n      appState: { ...appState, currentItemRoughness: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.sloppiness\")}</legend>\n      <ButtonIconSelect\n        group=\"sloppiness\"\n        options={[\n          {\n            value: 0,\n            text: t(\"labels.architect\"),\n            icon: <SloppinessArchitectIcon theme={appState.theme} />,\n          },\n          {\n            value: 1,\n            text: t(\"labels.artist\"),\n            icon: <SloppinessArtistIcon theme={appState.theme} />,\n          },\n          {\n            value: 2,\n            text: t(\"labels.cartoonist\"),\n            icon: <SloppinessCartoonistIcon theme={appState.theme} />,\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.roughness,\n          appState.currentItemRoughness,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeStyle = register({\n  name: \"changeStrokeStyle\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeStyle\")}</legend>\n      <ButtonIconSelect\n        group=\"strokeStyle\"\n        options={[\n          {\n            value: \"solid\",\n            text: t(\"labels.strokeStyle_solid\"),\n            icon: <StrokeStyleSolidIcon theme={appState.theme} />,\n          },\n          {\n            value: \"dashed\",\n            text: t(\"labels.strokeStyle_dashed\"),\n            icon: <StrokeStyleDashedIcon theme={appState.theme} />,\n          },\n          {\n            value: \"dotted\",\n            text: t(\"labels.strokeStyle_dotted\"),\n            icon: <StrokeStyleDottedIcon theme={appState.theme} />,\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeStyle,\n          appState.currentItemStrokeStyle,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeOpacity = register({\n  name: \"changeOpacity\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          opacity: value,\n        }),\n      ),\n      appState: { ...appState, currentItemOpacity: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <label className=\"control-label\">\n      {t(\"labels.opacity\")}\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step=\"10\"\n        onChange={(event) => updateData(+event.target.value)}\n        onWheel={(event) => {\n          event.stopPropagation();\n          const target = event.target as HTMLInputElement;\n          const STEP = 10;\n          const MAX = 100;\n          const MIN = 0;\n          const value = +target.value;\n\n          if (event.deltaY < 0 && value < MAX) {\n            updateData(value + STEP);\n          } else if (event.deltaY > 0 && value > MIN) {\n            updateData(value - STEP);\n          }\n        }}\n        value={\n          getFormValue(\n            elements,\n            appState,\n            (element) => element.opacity,\n            appState.currentItemOpacity,\n          ) ?? undefined\n        }\n      />\n    </label>\n  ),\n});\n\nexport const actionChangeFontSize = register({\n  name: \"changeFontSize\",\n  perform: (elements, appState, value) => {\n    return changeFontSize(elements, appState, () => value, value);\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fontSize\")}</legend>\n      <ButtonIconSelect\n        group=\"font-size\"\n        options={[\n          {\n            value: 16,\n            text: t(\"labels.small\"),\n            icon: <FontSizeSmallIcon theme={appState.theme} />,\n            testId: \"fontSize-small\",\n          },\n          {\n            value: 20,\n            text: t(\"labels.medium\"),\n            icon: <FontSizeMediumIcon theme={appState.theme} />,\n            testId: \"fontSize-medium\",\n          },\n          {\n            value: 28,\n            text: t(\"labels.large\"),\n            icon: <FontSizeLargeIcon theme={appState.theme} />,\n            testId: \"fontSize-large\",\n          },\n          {\n            value: 36,\n            text: t(\"labels.veryLarge\"),\n            icon: <FontSizeExtraLargeIcon theme={appState.theme} />,\n            testId: \"fontSize-veryLarge\",\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => {\n            if (isTextElement(element)) {\n              return element.fontSize;\n            }\n            const boundTextElement = getBoundTextElement(element);\n            if (boundTextElement) {\n              return boundTextElement.fontSize;\n            }\n            return null;\n          },\n          appState.currentItemFontSize || DEFAULT_FONT_SIZE,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionDecreaseFontSize = register({\n  name: \"decreaseFontSize\",\n  perform: (elements, appState, value) => {\n    return changeFontSize(elements, appState, (element) =>\n      Math.round(\n        // get previous value before relative increase (doesn't work fully\n        // due to rounding and float precision issues)\n        (1 / (1 + FONT_SIZE_RELATIVE_INCREASE_STEP)) * element.fontSize,\n      ),\n    );\n  },\n  keyTest: (event) => {\n    return (\n      event[KEYS.CTRL_OR_CMD] &&\n      event.shiftKey &&\n      // KEYS.COMMA needed for MacOS\n      (event.key === KEYS.CHEVRON_LEFT || event.key === KEYS.COMMA)\n    );\n  },\n});\n\nexport const actionIncreaseFontSize = register({\n  name: \"increaseFontSize\",\n  perform: (elements, appState, value) => {\n    return changeFontSize(elements, appState, (element) =>\n      Math.round(element.fontSize * (1 + FONT_SIZE_RELATIVE_INCREASE_STEP)),\n    );\n  },\n  keyTest: (event) => {\n    return (\n      event[KEYS.CTRL_OR_CMD] &&\n      event.shiftKey &&\n      // KEYS.PERIOD needed for MacOS\n      (event.key === KEYS.CHEVRON_RIGHT || event.key === KEYS.PERIOD)\n    );\n  },\n});\n\nexport const actionChangeFontFamily = register({\n  name: \"changeFontFamily\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(\n        elements,\n        appState,\n        (oldElement) => {\n          if (isTextElement(oldElement)) {\n            const newElement: ExcalidrawTextElement = newElementWith(\n              oldElement,\n              {\n                fontFamily: value,\n              },\n            );\n            redrawTextBoundingBox(\n              newElement,\n              getContainerElement(oldElement),\n              appState,\n            );\n            return newElement;\n          }\n\n          return oldElement;\n        },\n        true,\n      ),\n      appState: {\n        ...appState,\n        currentItemFontFamily: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const options: {\n      value: FontFamilyValues;\n      text: string;\n      icon: JSX.Element;\n    }[] = [\n      {\n        value: FONT_FAMILY.Virgil,\n        text: t(\"labels.handDrawn\"),\n        icon: <FontFamilyHandDrawnIcon theme={appState.theme} />,\n      },\n      {\n        value: FONT_FAMILY.Helvetica,\n        text: t(\"labels.normal\"),\n        icon: <FontFamilyNormalIcon theme={appState.theme} />,\n      },\n      {\n        value: FONT_FAMILY.Cascadia,\n        text: t(\"labels.code\"),\n        icon: <FontFamilyCodeIcon theme={appState.theme} />,\n      },\n    ];\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.fontFamily\")}</legend>\n        <ButtonIconSelect<FontFamilyValues | false>\n          group=\"font-family\"\n          options={options}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) => {\n              if (isTextElement(element)) {\n                return element.fontFamily;\n              }\n              const boundTextElement = getBoundTextElement(element);\n              if (boundTextElement) {\n                return boundTextElement.fontFamily;\n              }\n              return null;\n            },\n            appState.currentItemFontFamily || DEFAULT_FONT_FAMILY,\n          )}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeTextAlign = register({\n  name: \"changeTextAlign\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(\n        elements,\n        appState,\n        (oldElement) => {\n          if (isTextElement(oldElement)) {\n            const newElement: ExcalidrawTextElement = newElementWith(\n              oldElement,\n              { textAlign: value },\n            );\n            redrawTextBoundingBox(\n              newElement,\n              getContainerElement(oldElement),\n              appState,\n            );\n            return newElement;\n          }\n\n          return oldElement;\n        },\n        true,\n      ),\n      appState: {\n        ...appState,\n        currentItemTextAlign: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    return (\n      <fieldset>\n        <legend>{t(\"labels.textAlign\")}</legend>\n        <ButtonIconSelect<TextAlign | false>\n          group=\"text-align\"\n          options={[\n            {\n              value: \"left\",\n              text: t(\"labels.left\"),\n              icon: <TextAlignLeftIcon theme={appState.theme} />,\n            },\n            {\n              value: \"center\",\n              text: t(\"labels.center\"),\n              icon: <TextAlignCenterIcon theme={appState.theme} />,\n            },\n            {\n              value: \"right\",\n              text: t(\"labels.right\"),\n              icon: <TextAlignRightIcon theme={appState.theme} />,\n            },\n          ]}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) => {\n              if (isTextElement(element)) {\n                return element.textAlign;\n              }\n              const boundTextElement = getBoundTextElement(element);\n              if (boundTextElement) {\n                return boundTextElement.textAlign;\n              }\n              return null;\n            },\n            appState.currentItemTextAlign,\n          )}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\nexport const actionChangeVerticalAlign = register({\n  name: \"changeVerticalAlign\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(\n        elements,\n        appState,\n        (oldElement) => {\n          if (isTextElement(oldElement)) {\n            const newElement: ExcalidrawTextElement = newElementWith(\n              oldElement,\n              { verticalAlign: value },\n            );\n\n            redrawTextBoundingBox(\n              newElement,\n              getContainerElement(oldElement),\n              appState,\n            );\n            return newElement;\n          }\n\n          return oldElement;\n        },\n        true,\n      ),\n      appState: {\n        ...appState,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    return (\n      <fieldset>\n        <ButtonIconSelect<VerticalAlign | false>\n          group=\"text-align\"\n          options={[\n            {\n              value: VERTICAL_ALIGN.TOP,\n              text: t(\"labels.alignTop\"),\n              icon: <TextAlignTopIcon theme={appState.theme} />,\n            },\n            {\n              value: VERTICAL_ALIGN.MIDDLE,\n              text: t(\"labels.centerVertically\"),\n              icon: <TextAlignMiddleIcon theme={appState.theme} />,\n            },\n            {\n              value: VERTICAL_ALIGN.BOTTOM,\n              text: t(\"labels.alignBottom\"),\n              icon: <TextAlignBottomIcon theme={appState.theme} />,\n            },\n          ]}\n          value={getFormValue(elements, appState, (element) => {\n            if (isTextElement(element) && element.containerId) {\n              return element.verticalAlign;\n            }\n            const boundTextElement = getBoundTextElement(element);\n            if (boundTextElement) {\n              return boundTextElement.verticalAlign;\n            }\n            return null;\n          })}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeSharpness = register({\n  name: \"changeSharpness\",\n  perform: (elements, appState, value) => {\n    const targetElements = getTargetElements(\n      getNonDeletedElements(elements),\n      appState,\n    );\n    const shouldUpdateForNonLinearElements = targetElements.length\n      ? targetElements.every((el) => !isLinearElement(el))\n      : !isLinearElementType(appState.elementType);\n    const shouldUpdateForLinearElements = targetElements.length\n      ? targetElements.every(isLinearElement)\n      : isLinearElementType(appState.elementType);\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeSharpness: value,\n        }),\n      ),\n      appState: {\n        ...appState,\n        currentItemStrokeSharpness: shouldUpdateForNonLinearElements\n          ? value\n          : appState.currentItemStrokeSharpness,\n        currentItemLinearStrokeSharpness: shouldUpdateForLinearElements\n          ? value\n          : appState.currentItemLinearStrokeSharpness,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.edges\")}</legend>\n      <ButtonIconSelect\n        group=\"edges\"\n        options={[\n          {\n            value: \"sharp\",\n            text: t(\"labels.sharp\"),\n            icon: <EdgeSharpIcon theme={appState.theme} />,\n          },\n          {\n            value: \"round\",\n            text: t(\"labels.round\"),\n            icon: <EdgeRoundIcon theme={appState.theme} />,\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeSharpness,\n          (canChangeSharpness(appState.elementType) &&\n            (isLinearElementType(appState.elementType)\n              ? appState.currentItemLinearStrokeSharpness\n              : appState.currentItemStrokeSharpness)) ||\n            null,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeArrowhead = register({\n  name: \"changeArrowhead\",\n  perform: (\n    elements,\n    appState,\n    value: { position: \"start\" | \"end\"; type: Arrowhead },\n  ) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isLinearElement(el)) {\n          const { position, type } = value;\n\n          if (position === \"start\") {\n            const element: ExcalidrawLinearElement = newElementWith(el, {\n              startArrowhead: type,\n            });\n            return element;\n          } else if (position === \"end\") {\n            const element: ExcalidrawLinearElement = newElementWith(el, {\n              endArrowhead: type,\n            });\n            return element;\n          }\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        [value.position === \"start\"\n          ? \"currentItemStartArrowhead\"\n          : \"currentItemEndArrowhead\"]: value.type,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const isRTL = getLanguage().rtl;\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.arrowheads\")}</legend>\n        <div className=\"iconSelectList\">\n          <IconPicker\n            label=\"arrowhead_start\"\n            options={[\n              {\n                value: null,\n                text: t(\"labels.arrowhead_none\"),\n                icon: <ArrowheadNoneIcon theme={appState.theme} />,\n                keyBinding: \"q\",\n              },\n              {\n                value: \"arrow\",\n                text: t(\"labels.arrowhead_arrow\"),\n                icon: (\n                  <ArrowheadArrowIcon theme={appState.theme} flip={!isRTL} />\n                ),\n                keyBinding: \"w\",\n              },\n              {\n                value: \"bar\",\n                text: t(\"labels.arrowhead_bar\"),\n                icon: <ArrowheadBarIcon theme={appState.theme} flip={!isRTL} />,\n                keyBinding: \"e\",\n              },\n              {\n                value: \"dot\",\n                text: t(\"labels.arrowhead_dot\"),\n                icon: <ArrowheadDotIcon theme={appState.theme} flip={!isRTL} />,\n                keyBinding: \"r\",\n              },\n              {\n                value: \"triangle\",\n                text: t(\"labels.arrowhead_triangle\"),\n                icon: (\n                  <ArrowheadTriangleIcon theme={appState.theme} flip={!isRTL} />\n                ),\n                keyBinding: \"t\",\n              },\n            ]}\n            value={getFormValue<Arrowhead | null>(\n              elements,\n              appState,\n              (element) =>\n                isLinearElement(element) && canHaveArrowheads(element.type)\n                  ? element.startArrowhead\n                  : appState.currentItemStartArrowhead,\n              appState.currentItemStartArrowhead,\n            )}\n            onChange={(value) => updateData({ position: \"start\", type: value })}\n          />\n          <IconPicker\n            label=\"arrowhead_end\"\n            group=\"arrowheads\"\n            options={[\n              {\n                value: null,\n                text: t(\"labels.arrowhead_none\"),\n                keyBinding: \"q\",\n                icon: <ArrowheadNoneIcon theme={appState.theme} />,\n              },\n              {\n                value: \"arrow\",\n                text: t(\"labels.arrowhead_arrow\"),\n                keyBinding: \"w\",\n                icon: (\n                  <ArrowheadArrowIcon theme={appState.theme} flip={isRTL} />\n                ),\n              },\n              {\n                value: \"bar\",\n                text: t(\"labels.arrowhead_bar\"),\n                keyBinding: \"e\",\n                icon: <ArrowheadBarIcon theme={appState.theme} flip={isRTL} />,\n              },\n              {\n                value: \"dot\",\n                text: t(\"labels.arrowhead_dot\"),\n                keyBinding: \"r\",\n                icon: <ArrowheadDotIcon theme={appState.theme} flip={isRTL} />,\n              },\n              {\n                value: \"triangle\",\n                text: t(\"labels.arrowhead_triangle\"),\n                icon: (\n                  <ArrowheadTriangleIcon theme={appState.theme} flip={isRTL} />\n                ),\n                keyBinding: \"t\",\n              },\n            ]}\n            value={getFormValue<Arrowhead | null>(\n              elements,\n              appState,\n              (element) =>\n                isLinearElement(element) && canHaveArrowheads(element.type)\n                  ? element.endArrowhead\n                  : appState.currentItemEndArrowhead,\n              appState.currentItemEndArrowhead,\n            )}\n            onChange={(value) => updateData({ position: \"end\", type: value })}\n          />\n        </div>\n      </fieldset>\n    );\n  },\n});\n","type CANVAS_ERROR_NAMES = \"CANVAS_ERROR\" | \"CANVAS_POSSIBLY_TOO_BIG\";\n\nexport class CanvasError extends Error {\n  constructor(\n    message: string = \"Couldn't export canvas.\",\n    name: CANVAS_ERROR_NAMES = \"CANVAS_ERROR\",\n  ) {\n    super();\n    this.name = name;\n    this.message = message;\n  }\n}\n\nexport class AbortError extends DOMException {\n  constructor(message: string = \"Request Aborted\") {\n    super(message, \"AbortError\");\n  }\n}\n","import React from \"react\";\n\nimport \"./Spinner.scss\";\n\nconst Spinner = ({\n  size = \"1em\",\n  circleWidth = 8,\n}: {\n  size?: string | number;\n  circleWidth?: number;\n}) => {\n  return (\n    <div className=\"Spinner\">\n      <svg viewBox=\"0 0 100 100\" style={{ width: size, height: size }}>\n        <circle\n          cx=\"50\"\n          cy=\"50\"\n          r={50 - circleWidth / 2}\n          strokeWidth={circleWidth}\n          fill=\"none\"\n          strokeMiterlimit=\"10\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import \"./ToolIcon.scss\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { useExcalidrawContainer } from \"./App\";\nimport { AbortError } from \"../errors\";\nimport Spinner from \"./Spinner\";\nimport { PointerType } from \"../element/types\";\n\nexport type ToolButtonSize = \"small\" | \"medium\";\n\ntype ToolButtonBaseProps = {\n  icon?: React.ReactNode;\n  \"aria-label\": string;\n  \"aria-keyshortcuts\"?: string;\n  \"data-testid\"?: string;\n  label?: string;\n  title?: string;\n  name?: string;\n  id?: string;\n  size?: ToolButtonSize;\n  keyBindingLabel?: string;\n  showAriaLabel?: boolean;\n  hidden?: boolean;\n  visible?: boolean;\n  selected?: boolean;\n  className?: string;\n  isLoading?: boolean;\n};\n\ntype ToolButtonProps =\n  | (ToolButtonBaseProps & {\n      type: \"button\";\n      children?: React.ReactNode;\n      onClick?(event: React.MouseEvent): void;\n    })\n  | (ToolButtonBaseProps & {\n      type: \"submit\";\n      children?: React.ReactNode;\n      onClick?(event: React.MouseEvent): void;\n    })\n  | (ToolButtonBaseProps & {\n      type: \"icon\";\n      children?: React.ReactNode;\n      onClick?(): void;\n    })\n  | (ToolButtonBaseProps & {\n      type: \"radio\";\n      checked: boolean;\n      onChange?(data: { pointerType: PointerType | null }): void;\n    });\n\nexport const ToolButton = React.forwardRef((props: ToolButtonProps, ref) => {\n  const { id: excalId } = useExcalidrawContainer();\n  const innerRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => innerRef.current);\n  const sizeCn = `ToolIcon_size_${props.size}`;\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const isMountedRef = useRef(true);\n\n  const onClick = async (event: React.MouseEvent) => {\n    const ret = \"onClick\" in props && props.onClick?.(event);\n\n    if (ret && \"then\" in ret) {\n      try {\n        setIsLoading(true);\n        await ret;\n      } catch (error: any) {\n        if (!(error instanceof AbortError)) {\n          throw error;\n        } else {\n          console.warn(error);\n        }\n      } finally {\n        if (isMountedRef.current) {\n          setIsLoading(false);\n        }\n      }\n    }\n  };\n\n  useEffect(\n    () => () => {\n      isMountedRef.current = false;\n    },\n    [],\n  );\n\n  const lastPointerTypeRef = useRef<PointerType | null>(null);\n\n  if (\n    props.type === \"button\" ||\n    props.type === \"icon\" ||\n    props.type === \"submit\"\n  ) {\n    const type = (props.type === \"icon\" ? \"button\" : props.type) as\n      | \"button\"\n      | \"submit\";\n    return (\n      <button\n        className={clsx(\n          \"ToolIcon_type_button\",\n          sizeCn,\n          props.className,\n          props.visible && !props.hidden\n            ? \"ToolIcon_type_button--show\"\n            : \"ToolIcon_type_button--hide\",\n          {\n            ToolIcon: !props.hidden,\n            \"ToolIcon--selected\": props.selected,\n            \"ToolIcon--plain\": props.type === \"icon\",\n          },\n        )}\n        data-testid={props[\"data-testid\"]}\n        hidden={props.hidden}\n        title={props.title}\n        aria-label={props[\"aria-label\"]}\n        type={type}\n        onClick={onClick}\n        ref={innerRef}\n        disabled={isLoading || props.isLoading}\n      >\n        {(props.icon || props.label) && (\n          <div className=\"ToolIcon__icon\" aria-hidden=\"true\">\n            {props.icon || props.label}\n            {props.keyBindingLabel && (\n              <span className=\"ToolIcon__keybinding\">\n                {props.keyBindingLabel}\n              </span>\n            )}\n            {props.isLoading && <Spinner />}\n          </div>\n        )}\n        {props.showAriaLabel && (\n          <div className=\"ToolIcon__label\">\n            {props[\"aria-label\"]} {isLoading && <Spinner />}\n          </div>\n        )}\n        {props.children}\n      </button>\n    );\n  }\n\n  return (\n    <label\n      className={clsx(\"ToolIcon\", props.className)}\n      title={props.title}\n      onPointerDown={(event) => {\n        lastPointerTypeRef.current = event.pointerType || null;\n      }}\n      onPointerUp={() => {\n        requestAnimationFrame(() => {\n          lastPointerTypeRef.current = null;\n        });\n      }}\n    >\n      <input\n        className={`ToolIcon_type_radio ${sizeCn}`}\n        type=\"radio\"\n        name={props.name}\n        aria-label={props[\"aria-label\"]}\n        aria-keyshortcuts={props[\"aria-keyshortcuts\"]}\n        data-testid={props[\"data-testid\"]}\n        id={`${excalId}-${props.id}`}\n        onChange={() => {\n          props.onChange?.({ pointerType: lastPointerTypeRef.current });\n        }}\n        checked={props.checked}\n        ref={innerRef}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.icon}\n        {props.keyBindingLabel && (\n          <span className=\"ToolIcon__keybinding\">{props.keyBindingLabel}</span>\n        )}\n      </div>\n    </label>\n  );\n});\n\nToolButton.defaultProps = {\n  visible: true,\n  className: \"\",\n  size: \"medium\",\n};\n","import \"./ToolIcon.scss\";\n\nimport { t } from \"../i18n\";\nimport { ToolButton } from \"./ToolButton\";\nimport { THEME } from \"../constants\";\nimport { Theme } from \"../element/types\";\n\n// We chose to use only explicit toggle and not a third option for system value,\n// but this could be added in the future.\nexport const DarkModeToggle = (props: {\n  value: Theme;\n  onChange: (value: Theme) => void;\n  title?: string;\n}) => {\n  const title =\n    props.title ||\n    (props.value === \"dark\" ? t(\"buttons.lightMode\") : t(\"buttons.darkMode\"));\n\n  return (\n    <ToolButton\n      type=\"icon\"\n      icon={props.value === THEME.LIGHT ? ICONS.MOON : ICONS.SUN}\n      title={title}\n      aria-label={title}\n      onClick={() =>\n        props.onChange(props.value === THEME.DARK ? THEME.LIGHT : THEME.DARK)\n      }\n      data-testid=\"toggle-dark-mode\"\n    />\n  );\n};\n\nconst ICONS = {\n  SUN: (\n    <svg width=\"512\" height=\"512\" className=\"rtl-mirror\" viewBox=\"0 0 512 512\">\n      <path\n        fill=\"currentColor\"\n        d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"\n      ></path>\n    </svg>\n  ),\n  MOON: (\n    <svg width=\"512\" height=\"512\" className=\"rtl-mirror\" viewBox=\"0 0 512 512\">\n      <path\n        fill=\"currentColor\"\n        d=\"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"\n      ></path>\n    </svg>\n  ),\n};\n","import {\n  PointerType,\n  ExcalidrawLinearElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n  TextAlign,\n  ExcalidrawElement,\n  GroupId,\n  ExcalidrawBindableElement,\n  Arrowhead,\n  ChartType,\n  FontFamilyValues,\n  FileId,\n  ExcalidrawImageElement,\n  Theme,\n} from \"./element/types\";\nimport { SHAPES } from \"./shapes\";\nimport { Point as RoughPoint } from \"roughjs/bin/geometry\";\nimport { LinearElementEditor } from \"./element/linearElementEditor\";\nimport { SuggestedBinding } from \"./element/binding\";\nimport { ImportedDataState } from \"./data/types\";\nimport type App from \"./components/App\";\nimport type { ResolvablePromise, throttleRAF } from \"./utils\";\nimport { Spreadsheet } from \"./charts\";\nimport { Language } from \"./i18n\";\nimport { ClipboardData } from \"./clipboard\";\nimport { isOverScrollBars } from \"./scene\";\nimport { MaybeTransformHandleType } from \"./element/transformHandles\";\nimport Library from \"./data/library\";\nimport type { FileSystemHandle } from \"./data/filesystem\";\nimport type { ALLOWED_IMAGE_MIME_TYPES, MIME_TYPES } from \"./constants\";\n\nexport type Point = Readonly<RoughPoint>;\n\nexport type Collaborator = {\n  pointer?: {\n    x: number;\n    y: number;\n  };\n  button?: \"up\" | \"down\";\n  selectedElementIds?: AppState[\"selectedElementIds\"];\n  username?: string | null;\n  userState?: UserIdleState;\n  color?: {\n    background: string;\n    stroke: string;\n  };\n};\n\nexport type DataURL = string & { _brand: \"DataURL\" };\n\nexport type BinaryFileData = {\n  mimeType:\n    | typeof ALLOWED_IMAGE_MIME_TYPES[number]\n    // future user or unknown file type\n    | typeof MIME_TYPES.binary;\n  id: FileId;\n  dataURL: DataURL;\n  created: number;\n};\n\nexport type BinaryFileMetadata = Omit<BinaryFileData, \"dataURL\">;\n\nexport type BinaryFiles = Record<ExcalidrawElement[\"id\"], BinaryFileData>;\n\nexport type AppState = {\n  isLoading: boolean;\n  errorMessage: string | null;\n  draggingElement: NonDeletedExcalidrawElement | null;\n  resizingElement: NonDeletedExcalidrawElement | null;\n  multiElement: NonDeleted<ExcalidrawLinearElement> | null;\n  selectionElement: NonDeletedExcalidrawElement | null;\n  isBindingEnabled: boolean;\n  startBoundElement: NonDeleted<ExcalidrawBindableElement> | null;\n  suggestedBindings: SuggestedBinding[];\n  // element being edited, but not necessarily added to elements array yet\n  // (e.g. text element when typing into the input)\n  editingElement: NonDeletedExcalidrawElement | null;\n  editingLinearElement: LinearElementEditor | null;\n  elementType: typeof SHAPES[number][\"value\"] | \"eraser\";\n  elementLocked: boolean;\n  penMode: boolean;\n  penDetected: boolean;\n  exportBackground: boolean;\n  exportEmbedScene: boolean;\n  exportWithDarkMode: boolean;\n  exportScale: number;\n  currentItemStrokeColor: string;\n  currentItemBackgroundColor: string;\n  currentItemFillStyle: ExcalidrawElement[\"fillStyle\"];\n  currentItemStrokeWidth: number;\n  currentItemStrokeStyle: ExcalidrawElement[\"strokeStyle\"];\n  currentItemRoughness: number;\n  currentItemOpacity: number;\n  currentItemFontFamily: FontFamilyValues;\n  currentItemFontSize: number;\n  currentItemTextAlign: TextAlign;\n  currentItemStrokeSharpness: ExcalidrawElement[\"strokeSharpness\"];\n  currentItemStartArrowhead: Arrowhead | null;\n  currentItemEndArrowhead: Arrowhead | null;\n  currentItemLinearStrokeSharpness: ExcalidrawElement[\"strokeSharpness\"];\n  viewBackgroundColor: string;\n  scrollX: number;\n  scrollY: number;\n  cursorButton: \"up\" | \"down\";\n  scrolledOutside: boolean;\n  name: string;\n  isResizing: boolean;\n  isRotating: boolean;\n  zoom: Zoom;\n  openMenu: \"canvas\" | \"shape\" | null;\n  openPopup:\n    | \"canvasColorPicker\"\n    | \"backgroundColorPicker\"\n    | \"strokeColorPicker\"\n    | null;\n  lastPointerDownWith: PointerType;\n  selectedElementIds: { [id: string]: boolean };\n  previousSelectedElementIds: { [id: string]: boolean };\n  shouldCacheIgnoreZoom: boolean;\n  showHelpDialog: boolean;\n  toastMessage: string | null;\n  zenModeEnabled: boolean;\n  theme: Theme;\n  gridSize: number | null;\n  viewModeEnabled: boolean;\n\n  /** top-most selected groups (i.e. does not include nested groups) */\n  selectedGroupIds: { [groupId: string]: boolean };\n  /** group being edited when you drill down to its constituent element\n    (e.g. when you double-click on a group's element) */\n  editingGroupId: GroupId | null;\n  width: number;\n  height: number;\n  offsetTop: number;\n  offsetLeft: number;\n\n  isLibraryOpen: boolean;\n  fileHandle: FileSystemHandle | null;\n  collaborators: Map<string, Collaborator>;\n  showStats: boolean;\n  currentChartType: ChartType;\n  pasteDialog:\n    | {\n        shown: false;\n        data: null;\n      }\n    | {\n        shown: true;\n        data: Spreadsheet;\n      };\n  /** imageElement waiting to be placed on canvas */\n  pendingImageElement: NonDeleted<ExcalidrawImageElement> | null;\n  showHyperlinkPopup: false | \"info\" | \"editor\";\n};\n\nexport type NormalizedZoomValue = number & { _brand: \"normalizedZoom\" };\n\nexport type Zoom = Readonly<{\n  value: NormalizedZoomValue;\n}>;\n\nexport type PointerCoords = Readonly<{\n  x: number;\n  y: number;\n}>;\n\nexport type Gesture = {\n  pointers: Map<number, PointerCoords>;\n  lastCenter: { x: number; y: number } | null;\n  initialDistance: number | null;\n  initialScale: number | null;\n};\n\nexport declare class GestureEvent extends UIEvent {\n  readonly rotation: number;\n  readonly scale: number;\n}\n\n// libraries\n// -----------------------------------------------------------------------------\n/** @deprecated legacy: do not use outside of migration paths */\nexport type LibraryItem_v1 = readonly NonDeleted<ExcalidrawElement>[];\n/** @deprecated legacy: do not use outside of migration paths */\nexport type LibraryItems_v1 = readonly LibraryItem_v1[];\n\n/** v2 library item */\nexport type LibraryItem = {\n  id: string;\n  status: \"published\" | \"unpublished\";\n  elements: readonly NonDeleted<ExcalidrawElement>[];\n  /** timestamp in epoch (ms) */\n  created: number;\n  name?: string;\n  error?: string;\n};\nexport type LibraryItems = readonly LibraryItem[];\n// -----------------------------------------------------------------------------\n\n// NOTE ready/readyPromise props are optional for host apps' sake (our own\n// implem guarantees existence)\nexport type ExcalidrawAPIRefValue =\n  | ExcalidrawImperativeAPI\n  | {\n      readyPromise?: ResolvablePromise<ExcalidrawImperativeAPI>;\n      ready?: false;\n    };\n\nexport interface ExcalidrawProps {\n  onChange?: (\n    elements: readonly ExcalidrawElement[],\n    appState: AppState,\n    files: BinaryFiles,\n  ) => void;\n  initialData?: ImportedDataState | null | Promise<ImportedDataState | null>;\n  excalidrawRef?: ForwardRef<ExcalidrawAPIRefValue>;\n  onCollabButtonClick?: () => void;\n  isCollaborating?: boolean;\n  onPointerUpdate?: (payload: {\n    pointer: { x: number; y: number };\n    button: \"down\" | \"up\";\n    pointersMap: Gesture[\"pointers\"];\n  }) => void;\n  onPaste?: (\n    data: ClipboardData,\n    event: ClipboardEvent | null,\n  ) => Promise<boolean> | boolean;\n  renderTopRightUI?: (\n    isMobile: boolean,\n    appState: AppState,\n  ) => JSX.Element | null;\n  renderFooter?: (isMobile: boolean, appState: AppState) => JSX.Element;\n  langCode?: Language[\"code\"];\n  viewModeEnabled?: boolean;\n  zenModeEnabled?: boolean;\n  gridModeEnabled?: boolean;\n  libraryReturnUrl?: string;\n  theme?: Theme;\n  name?: string;\n  renderCustomStats?: (\n    elements: readonly NonDeletedExcalidrawElement[],\n    appState: AppState,\n  ) => JSX.Element;\n  UIOptions?: UIOptions;\n  detectScroll?: boolean;\n  handleKeyboardGlobally?: boolean;\n  onLibraryChange?: (libraryItems: LibraryItems) => void | Promise<any>;\n  autoFocus?: boolean;\n  generateIdForFile?: (file: File) => string | Promise<string>;\n  onLinkOpen?: (\n    element: NonDeletedExcalidrawElement,\n    event: CustomEvent<{\n      nativeEvent: MouseEvent | React.PointerEvent<HTMLCanvasElement>;\n    }>,\n  ) => void;\n}\n\nexport type SceneData = {\n  elements?: ImportedDataState[\"elements\"];\n  appState?: ImportedDataState[\"appState\"];\n  collaborators?: Map<string, Collaborator>;\n  commitToHistory?: boolean;\n  libraryItems?: LibraryItems | LibraryItems_v1;\n};\n\nexport enum UserIdleState {\n  ACTIVE = \"active\",\n  AWAY = \"away\",\n  IDLE = \"idle\",\n}\n\nexport type ExportOpts = {\n  saveFileToDisk?: boolean;\n  onExportToBackend?: (\n    exportedElements: readonly NonDeletedExcalidrawElement[],\n    appState: AppState,\n    files: BinaryFiles,\n    canvas: HTMLCanvasElement | null,\n  ) => void;\n  renderCustomUI?: (\n    exportedElements: readonly NonDeletedExcalidrawElement[],\n    appState: AppState,\n    files: BinaryFiles,\n    canvas: HTMLCanvasElement | null,\n  ) => JSX.Element;\n};\n\ntype CanvasActions = {\n  changeViewBackgroundColor?: boolean;\n  clearCanvas?: boolean;\n  export?: false | ExportOpts;\n  loadScene?: boolean;\n  saveToActiveFile?: boolean;\n  theme?: boolean;\n  saveAsImage?: boolean;\n};\n\nexport type UIOptions = {\n  canvasActions?: CanvasActions;\n};\n\nexport type AppProps = ExcalidrawProps & {\n  UIOptions: {\n    canvasActions: Required<CanvasActions> & { export: ExportOpts };\n  };\n  detectScroll: boolean;\n  handleKeyboardGlobally: boolean;\n  isCollaborating: boolean;\n};\n\n/** A subset of App class properties that we need to use elsewhere\n * in the app, eg Manager. Factored out into a separate type to keep DRY. */\nexport type AppClassProperties = {\n  props: AppProps;\n  canvas: HTMLCanvasElement | null;\n  focusContainer(): void;\n  library: Library;\n  imageCache: Map<\n    FileId,\n    {\n      image: HTMLImageElement | Promise<HTMLImageElement>;\n      mimeType: typeof ALLOWED_IMAGE_MIME_TYPES[number];\n    }\n  >;\n  files: BinaryFiles;\n};\n\nexport type PointerDownState = Readonly<{\n  // The first position at which pointerDown happened\n  origin: Readonly<{ x: number; y: number }>;\n  // Same as \"origin\" but snapped to the grid, if grid is on\n  originInGrid: Readonly<{ x: number; y: number }>;\n  // Scrollbar checks\n  scrollbars: ReturnType<typeof isOverScrollBars>;\n  // The previous pointer position\n  lastCoords: { x: number; y: number };\n  // map of original elements data\n  originalElements: Map<string, NonDeleted<ExcalidrawElement>>;\n  resize: {\n    // Handle when resizing, might change during the pointer interaction\n    handleType: MaybeTransformHandleType;\n    // This is determined on the initial pointer down event\n    isResizing: boolean;\n    // This is determined on the initial pointer down event\n    offset: { x: number; y: number };\n    // This is determined on the initial pointer down event\n    arrowDirection: \"origin\" | \"end\";\n    // This is a center point of selected elements determined on the initial pointer down event (for rotation only)\n    center: { x: number; y: number };\n  };\n  hit: {\n    // The element the pointer is \"hitting\", is determined on the initial\n    // pointer down event\n    element: NonDeleted<ExcalidrawElement> | null;\n    // The elements the pointer is \"hitting\", is determined on the initial\n    // pointer down event\n    allHitElements: NonDeleted<ExcalidrawElement>[];\n    // This is determined on the initial pointer down event\n    wasAddedToSelection: boolean;\n    // Whether selected element(s) were duplicated, might change during the\n    // pointer interaction\n    hasBeenDuplicated: boolean;\n    hasHitCommonBoundingBoxOfSelectedElements: boolean;\n    hasHitElementInside: boolean;\n  };\n  withCmdOrCtrl: boolean;\n  drag: {\n    // Might change during the pointer interaction\n    hasOccurred: boolean;\n    // Might change during the pointer interaction\n    offset: { x: number; y: number } | null;\n  };\n  // We need to have these in the state so that we can unsubscribe them\n  eventListeners: {\n    // It's defined on the initial pointer down event\n    onMove: null | ReturnType<typeof throttleRAF>;\n    // It's defined on the initial pointer down event\n    onUp: null | ((event: PointerEvent) => void);\n    // It's defined on the initial pointer down event\n    onKeyDown: null | ((event: KeyboardEvent) => void);\n    // It's defined on the initial pointer down event\n    onKeyUp: null | ((event: KeyboardEvent) => void);\n  };\n  boxSelection: {\n    hasOccurred: boolean;\n  };\n  elementIdsToErase: { [key: ExcalidrawElement[\"id\"]]: boolean };\n}>;\n\nexport type ExcalidrawImperativeAPI = {\n  updateScene: InstanceType<typeof App>[\"updateScene\"];\n  resetScene: InstanceType<typeof App>[\"resetScene\"];\n  getSceneElementsIncludingDeleted: InstanceType<\n    typeof App\n  >[\"getSceneElementsIncludingDeleted\"];\n  history: {\n    clear: InstanceType<typeof App>[\"resetHistory\"];\n  };\n  scrollToContent: InstanceType<typeof App>[\"scrollToContent\"];\n  getSceneElements: InstanceType<typeof App>[\"getSceneElements\"];\n  getAppState: () => InstanceType<typeof App>[\"state\"];\n  getFiles: () => InstanceType<typeof App>[\"files\"];\n  refresh: InstanceType<typeof App>[\"refresh\"];\n  importLibrary: InstanceType<typeof App>[\"importLibraryFromUrl\"];\n  setToastMessage: InstanceType<typeof App>[\"setToastMessage\"];\n  addFiles: (data: BinaryFileData[]) => void;\n  readyPromise: ResolvablePromise<ExcalidrawImperativeAPI>;\n  ready: true;\n  id: string;\n};\n","import { AppState, PointerCoords, Zoom } from \"../types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport {\n  getCommonBounds,\n  getClosestElementBounds,\n  getVisibleElements,\n} from \"../element\";\n\nimport {\n  sceneCoordsToViewportCoords,\n  viewportCoordsToSceneCoords,\n} from \"../utils\";\n\nconst isOutsideViewPort = (\n  appState: AppState,\n  canvas: HTMLCanvasElement | null,\n  cords: Array<number>,\n) => {\n  const [x1, y1, x2, y2] = cords;\n  const { x: viewportX1, y: viewportY1 } = sceneCoordsToViewportCoords(\n    { sceneX: x1, sceneY: y1 },\n    appState,\n  );\n  const { x: viewportX2, y: viewportY2 } = sceneCoordsToViewportCoords(\n    { sceneX: x2, sceneY: y2 },\n    appState,\n  );\n  return (\n    viewportX2 - viewportX1 > appState.width ||\n    viewportY2 - viewportY1 > appState.height\n  );\n};\n\nexport const centerScrollOn = ({\n  scenePoint,\n  viewportDimensions,\n  zoom,\n}: {\n  scenePoint: PointerCoords;\n  viewportDimensions: { height: number; width: number };\n  zoom: Zoom;\n}) => {\n  return {\n    scrollX: (viewportDimensions.width / 2) * (1 / zoom.value) - scenePoint.x,\n    scrollY: (viewportDimensions.height / 2) * (1 / zoom.value) - scenePoint.y,\n  };\n};\n\nexport const calculateScrollCenter = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  canvas: HTMLCanvasElement | null,\n): { scrollX: number; scrollY: number } => {\n  elements = getVisibleElements(elements);\n\n  if (!elements.length) {\n    return {\n      scrollX: 0,\n      scrollY: 0,\n    };\n  }\n  let [x1, y1, x2, y2] = getCommonBounds(elements);\n\n  if (isOutsideViewPort(appState, canvas, [x1, y1, x2, y2])) {\n    [x1, y1, x2, y2] = getClosestElementBounds(\n      elements,\n      viewportCoordsToSceneCoords(\n        { clientX: appState.scrollX, clientY: appState.scrollY },\n        appState,\n      ),\n    );\n  }\n\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n\n  return centerScrollOn({\n    scenePoint: { x: centerX, y: centerY },\n    viewportDimensions: { width: appState.width, height: appState.height },\n    zoom: appState.zoom,\n  });\n};\n","import { AppState, NormalizedZoomValue } from \"../types\";\n\nexport const getNormalizedZoom = (zoom: number): NormalizedZoomValue => {\n  return Math.max(0.1, Math.min(zoom, 30)) as NormalizedZoomValue;\n};\n\nexport const getStateForZoom = (\n  {\n    viewportX,\n    viewportY,\n    nextZoom,\n  }: {\n    viewportX: number;\n    viewportY: number;\n    nextZoom: NormalizedZoomValue;\n  },\n  appState: AppState,\n) => {\n  const appLayerX = viewportX - appState.offsetLeft;\n  const appLayerY = viewportY - appState.offsetTop;\n\n  const currentZoom = appState.zoom.value;\n\n  // get original scroll position without zoom\n  const baseScrollX = appState.scrollX + (appLayerX - appLayerX / currentZoom);\n  const baseScrollY = appState.scrollY + (appLayerY - appLayerY / currentZoom);\n\n  // get scroll offsets for target zoom level\n  const zoomOffsetScrollX = -(appLayerX - appLayerX / nextZoom);\n  const zoomOffsetScrollY = -(appLayerY - appLayerY / nextZoom);\n\n  return {\n    scrollX: baseScrollX + zoomOffsetScrollX,\n    scrollY: baseScrollY + zoomOffsetScrollY,\n    zoom: {\n      value: nextZoom,\n    },\n  };\n};\n","import \"./Tooltip.scss\";\n\nimport React, { useEffect } from \"react\";\n\nexport const getTooltipDiv = () => {\n  const existingDiv = document.querySelector<HTMLDivElement>(\n    \".excalidraw-tooltip\",\n  );\n  if (existingDiv) {\n    return existingDiv;\n  }\n  const div = document.createElement(\"div\");\n  document.body.appendChild(div);\n  div.classList.add(\"excalidraw-tooltip\");\n  return div;\n};\n\nexport const updateTooltipPosition = (\n  tooltip: HTMLDivElement,\n  item: {\n    left: number;\n    top: number;\n    width: number;\n    height: number;\n  },\n  position: \"bottom\" | \"top\" = \"bottom\",\n) => {\n  const tooltipRect = tooltip.getBoundingClientRect();\n\n  const viewportWidth = window.innerWidth;\n  const viewportHeight = window.innerHeight;\n\n  const margin = 5;\n\n  let left = item.left + item.width / 2 - tooltipRect.width / 2;\n  if (left < 0) {\n    left = margin;\n  } else if (left + tooltipRect.width >= viewportWidth) {\n    left = viewportWidth - tooltipRect.width - margin;\n  }\n\n  let top: number;\n\n  if (position === \"bottom\") {\n    top = item.top + item.height + margin;\n    if (top + tooltipRect.height >= viewportHeight) {\n      top = item.top - tooltipRect.height - margin;\n    }\n  } else {\n    top = item.top - tooltipRect.height - margin;\n    if (top < 0) {\n      top = item.top + item.height + margin;\n    }\n  }\n\n  Object.assign(tooltip.style, {\n    top: `${top}px`,\n    left: `${left}px`,\n  });\n};\n\nconst updateTooltip = (\n  item: HTMLDivElement,\n  tooltip: HTMLDivElement,\n  label: string,\n  long: boolean,\n) => {\n  tooltip.classList.add(\"excalidraw-tooltip--visible\");\n  tooltip.style.minWidth = long ? \"50ch\" : \"10ch\";\n  tooltip.style.maxWidth = long ? \"50ch\" : \"15ch\";\n\n  tooltip.textContent = label;\n\n  const itemRect = item.getBoundingClientRect();\n  updateTooltipPosition(tooltip, itemRect);\n};\n\ntype TooltipProps = {\n  children: React.ReactNode;\n  label: string;\n  long?: boolean;\n  style?: React.CSSProperties;\n};\n\nexport const Tooltip = ({\n  children,\n  label,\n  long = false,\n  style,\n}: TooltipProps) => {\n  useEffect(() => {\n    return () =>\n      getTooltipDiv().classList.remove(\"excalidraw-tooltip--visible\");\n  }, []);\n  return (\n    <div\n      className=\"excalidraw-tooltip-wrapper\"\n      onPointerEnter={(event) =>\n        updateTooltip(\n          event.currentTarget as HTMLDivElement,\n          getTooltipDiv(),\n          label,\n          long,\n        )\n      }\n      onPointerLeave={() =>\n        getTooltipDiv().classList.remove(\"excalidraw-tooltip--visible\")\n      }\n      style={style}\n    >\n      {children}\n    </div>\n  );\n};\n","import { t } from \"../i18n\";\nimport { Dialog, DialogProps } from \"./Dialog\";\nimport { ToolButton } from \"./ToolButton\";\n\nimport \"./ConfirmDialog.scss\";\n\ninterface Props extends Omit<DialogProps, \"onCloseRequest\"> {\n  onConfirm: () => void;\n  onCancel: () => void;\n  confirmText?: string;\n  cancelText?: string;\n}\nconst ConfirmDialog = (props: Props) => {\n  const {\n    onConfirm,\n    onCancel,\n    children,\n    confirmText = t(\"buttons.confirm\"),\n    cancelText = t(\"buttons.cancel\"),\n    className = \"\",\n    ...rest\n  } = props;\n  return (\n    <Dialog\n      onCloseRequest={onCancel}\n      small={true}\n      {...rest}\n      className={`confirm-dialog ${className}`}\n    >\n      {children}\n      <div className=\"confirm-dialog-buttons\">\n        <ToolButton\n          type=\"button\"\n          title={cancelText}\n          aria-label={cancelText}\n          label={cancelText}\n          onClick={onCancel}\n          className=\"confirm-dialog--cancel\"\n        />\n        <ToolButton\n          type=\"button\"\n          title={confirmText}\n          aria-label={confirmText}\n          label={confirmText}\n          onClick={onConfirm}\n          className=\"confirm-dialog--confirm\"\n        />\n      </div>\n    </Dialog>\n  );\n};\nexport default ConfirmDialog;\n","import { useState } from \"react\";\nimport { t } from \"../i18n\";\nimport { useIsMobile } from \"./App\";\nimport { trash } from \"./icons\";\nimport { ToolButton } from \"./ToolButton\";\n\nimport ConfirmDialog from \"./ConfirmDialog\";\n\nconst ClearCanvas = ({ onConfirm }: { onConfirm: () => void }) => {\n  const [showDialog, setShowDialog] = useState(false);\n  const toggleDialog = () => {\n    setShowDialog(!showDialog);\n  };\n\n  return (\n    <>\n      <ToolButton\n        type=\"button\"\n        icon={trash}\n        title={t(\"buttons.clearReset\")}\n        aria-label={t(\"buttons.clearReset\")}\n        showAriaLabel={useIsMobile()}\n        onClick={toggleDialog}\n        data-testid=\"clear-canvas-button\"\n      />\n\n      {showDialog && (\n        <ConfirmDialog\n          onConfirm={() => {\n            onConfirm();\n            toggleDialog();\n          }}\n          onCancel={toggleDialog}\n          title={t(\"clearCanvasDialog.title\")}\n        >\n          <p className=\"clear-canvas__content\"> {t(\"alerts.clearReset\")}</p>\n        </ConfirmDialog>\n      )}\n    </>\n  );\n};\n\nexport default ClearCanvas;\n","import { ColorPicker } from \"../components/ColorPicker\";\nimport { eraser, zoomIn, zoomOut } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { DarkModeToggle } from \"../components/DarkModeToggle\";\nimport { THEME, ZOOM_STEP } from \"../constants\";\nimport { getCommonBounds, getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { CODES, KEYS } from \"../keys\";\nimport { getNormalizedZoom, getSelectedElements } from \"../scene\";\nimport { centerScrollOn } from \"../scene/scroll\";\nimport { getStateForZoom } from \"../scene/zoom\";\nimport { AppState, NormalizedZoomValue } from \"../types\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport { Tooltip } from \"../components/Tooltip\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { getDefaultAppState, isEraserActive } from \"../appState\";\nimport ClearCanvas from \"../components/ClearCanvas\";\nimport clsx from \"clsx\";\n\nexport const actionChangeViewBackgroundColor = register({\n  name: \"changeViewBackgroundColor\",\n  perform: (_, appState, value) => {\n    return {\n      appState: { ...appState, ...value },\n      commitToHistory: !!value.viewBackgroundColor,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    return (\n      <div style={{ position: \"relative\" }}>\n        <ColorPicker\n          label={t(\"labels.canvasBackground\")}\n          type=\"canvasBackground\"\n          color={appState.viewBackgroundColor}\n          onChange={(color) => updateData({ viewBackgroundColor: color })}\n          isActive={appState.openPopup === \"canvasColorPicker\"}\n          setActive={(active) =>\n            updateData({ openPopup: active ? \"canvasColorPicker\" : null })\n          }\n          data-testid=\"canvas-background-picker\"\n          elements={elements}\n          appState={appState}\n        />\n      </div>\n    );\n  },\n});\n\nexport const actionClearCanvas = register({\n  name: \"clearCanvas\",\n  perform: (elements, appState, _, app) => {\n    app.imageCache.clear();\n    return {\n      elements: elements.map((element) =>\n        newElementWith(element, { isDeleted: true }),\n      ),\n      appState: {\n        ...getDefaultAppState(),\n        files: {},\n        theme: appState.theme,\n        elementLocked: appState.elementLocked,\n        penMode: appState.penMode,\n        penDetected: appState.penDetected,\n        exportBackground: appState.exportBackground,\n        exportEmbedScene: appState.exportEmbedScene,\n        gridSize: appState.gridSize,\n        showStats: appState.showStats,\n        pasteDialog: appState.pasteDialog,\n        elementType:\n          appState.elementType === \"image\" ? \"selection\" : appState.elementType,\n      },\n      commitToHistory: true,\n    };\n  },\n\n  PanelComponent: ({ updateData }) => <ClearCanvas onConfirm={updateData} />,\n});\n\nexport const actionZoomIn = register({\n  name: \"zoomIn\",\n  perform: (_elements, appState, _, app) => {\n    return {\n      appState: {\n        ...appState,\n        ...getStateForZoom(\n          {\n            viewportX: appState.width / 2 + appState.offsetLeft,\n            viewportY: appState.height / 2 + appState.offsetTop,\n            nextZoom: getNormalizedZoom(appState.zoom.value + ZOOM_STEP),\n          },\n          appState,\n        ),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomIn}\n      title={`${t(\"buttons.zoomIn\")} — ${getShortcutKey(\"CtrlOrCmd++\")}`}\n      aria-label={t(\"buttons.zoomIn\")}\n      onClick={() => {\n        updateData(null);\n      }}\n      size=\"small\"\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === CODES.EQUAL || event.code === CODES.NUM_ADD) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionZoomOut = register({\n  name: \"zoomOut\",\n  perform: (_elements, appState, _, app) => {\n    return {\n      appState: {\n        ...appState,\n        ...getStateForZoom(\n          {\n            viewportX: appState.width / 2 + appState.offsetLeft,\n            viewportY: appState.height / 2 + appState.offsetTop,\n            nextZoom: getNormalizedZoom(appState.zoom.value - ZOOM_STEP),\n          },\n          appState,\n        ),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomOut}\n      title={`${t(\"buttons.zoomOut\")} — ${getShortcutKey(\"CtrlOrCmd+-\")}`}\n      aria-label={t(\"buttons.zoomOut\")}\n      onClick={() => {\n        updateData(null);\n      }}\n      size=\"small\"\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === CODES.MINUS || event.code === CODES.NUM_SUBTRACT) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionResetZoom = register({\n  name: \"resetZoom\",\n  perform: (_elements, appState, _, app) => {\n    return {\n      appState: {\n        ...appState,\n        ...getStateForZoom(\n          {\n            viewportX: appState.width / 2 + appState.offsetLeft,\n            viewportY: appState.height / 2 + appState.offsetTop,\n            nextZoom: getNormalizedZoom(1),\n          },\n          appState,\n        ),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData, appState }) => (\n    <Tooltip label={t(\"buttons.resetZoom\")} style={{ height: \"100%\" }}>\n      <ToolButton\n        type=\"button\"\n        className=\"reset-zoom-button\"\n        title={t(\"buttons.resetZoom\")}\n        aria-label={t(\"buttons.resetZoom\")}\n        onClick={() => {\n          updateData(null);\n        }}\n        size=\"small\"\n      >\n        {(appState.zoom.value * 100).toFixed(0)}%\n      </ToolButton>\n    </Tooltip>\n  ),\n  keyTest: (event) =>\n    (event.code === CODES.ZERO || event.code === CODES.NUM_ZERO) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nconst zoomValueToFitBoundsOnViewport = (\n  bounds: [number, number, number, number],\n  viewportDimensions: { width: number; height: number },\n) => {\n  const [x1, y1, x2, y2] = bounds;\n  const commonBoundsWidth = x2 - x1;\n  const zoomValueForWidth = viewportDimensions.width / commonBoundsWidth;\n  const commonBoundsHeight = y2 - y1;\n  const zoomValueForHeight = viewportDimensions.height / commonBoundsHeight;\n  const smallestZoomValue = Math.min(zoomValueForWidth, zoomValueForHeight);\n  const zoomAdjustedToSteps =\n    Math.floor(smallestZoomValue / ZOOM_STEP) * ZOOM_STEP;\n  const clampedZoomValueToFitElements = Math.min(\n    Math.max(zoomAdjustedToSteps, ZOOM_STEP),\n    1,\n  );\n  return clampedZoomValueToFitElements as NormalizedZoomValue;\n};\n\nconst zoomToFitElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: Readonly<AppState>,\n  zoomToSelection: boolean,\n) => {\n  const nonDeletedElements = getNonDeletedElements(elements);\n  const selectedElements = getSelectedElements(nonDeletedElements, appState);\n\n  const commonBounds =\n    zoomToSelection && selectedElements.length > 0\n      ? getCommonBounds(selectedElements)\n      : getCommonBounds(nonDeletedElements);\n\n  const newZoom = {\n    value: zoomValueToFitBoundsOnViewport(commonBounds, {\n      width: appState.width,\n      height: appState.height,\n    }),\n  };\n\n  const [x1, y1, x2, y2] = commonBounds;\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n  return {\n    appState: {\n      ...appState,\n      ...centerScrollOn({\n        scenePoint: { x: centerX, y: centerY },\n        viewportDimensions: {\n          width: appState.width,\n          height: appState.height,\n        },\n        zoom: newZoom,\n      }),\n      zoom: newZoom,\n    },\n    commitToHistory: false,\n  };\n};\n\nexport const actionZoomToSelected = register({\n  name: \"zoomToSelection\",\n  perform: (elements, appState) => zoomToFitElements(elements, appState, true),\n  keyTest: (event) =>\n    event.code === CODES.TWO &&\n    event.shiftKey &&\n    !event.altKey &&\n    !event[KEYS.CTRL_OR_CMD],\n});\n\nexport const actionZoomToFit = register({\n  name: \"zoomToFit\",\n  perform: (elements, appState) => zoomToFitElements(elements, appState, false),\n  keyTest: (event) =>\n    event.code === CODES.ONE &&\n    event.shiftKey &&\n    !event.altKey &&\n    !event[KEYS.CTRL_OR_CMD],\n});\n\nexport const actionToggleTheme = register({\n  name: \"toggleTheme\",\n  perform: (_, appState, value) => {\n    return {\n      appState: {\n        ...appState,\n        theme:\n          value || (appState.theme === THEME.LIGHT ? THEME.DARK : THEME.LIGHT),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <div style={{ marginInlineStart: \"0.25rem\" }}>\n      <DarkModeToggle\n        value={appState.theme}\n        onChange={(theme) => {\n          updateData(theme);\n        }}\n      />\n    </div>\n  ),\n  keyTest: (event) => event.altKey && event.shiftKey && event.code === CODES.D,\n});\n\nexport const actionErase = register({\n  name: \"eraser\",\n  perform: (elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        selectedElementIds: {},\n        selectedGroupIds: {},\n        elementType: isEraserActive(appState) ? \"selection\" : \"eraser\",\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData, data }) => (\n    <ToolButton\n      type=\"button\"\n      icon={eraser}\n      className={clsx(\"eraser\", { active: isEraserActive(appState) })}\n      title={t(\"toolBar.eraser\")}\n      aria-label={t(\"toolBar.eraser\")}\n      onClick={() => {\n        updateData(null);\n      }}\n      size={data?.size || \"medium\"}\n    ></ToolButton>\n  ),\n});\n","import { CODES, KEYS } from \"../keys\";\nimport {\n  isWritableElement,\n  getFontString,\n  getFontFamilyString,\n  isTestEnv,\n} from \"../utils\";\nimport Scene from \"../scene/Scene\";\nimport { isBoundToContainer, isTextElement } from \"./typeChecks\";\nimport { CLASSES, BOUND_TEXT_PADDING, VERTICAL_ALIGN } from \"../constants\";\nimport {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n} from \"./types\";\nimport { AppState } from \"../types\";\nimport { mutateElement } from \"./mutateElement\";\nimport {\n  getApproxLineHeight,\n  getBoundTextElementId,\n  getContainerElement,\n  wrapText,\n} from \"./textElement\";\nimport {\n  actionDecreaseFontSize,\n  actionIncreaseFontSize,\n} from \"../actions/actionProperties\";\nimport { actionZoomIn, actionZoomOut } from \"../actions/actionCanvas\";\nimport App from \"../components/App\";\n\nconst normalizeText = (text: string) => {\n  return (\n    text\n      // replace tabs with spaces so they render and measure correctly\n      .replace(/\\t/g, \"        \")\n      // normalize newlines\n      .replace(/\\r?\\n|\\r/g, \"\\n\")\n  );\n};\n\nconst getTransform = (\n  width: number,\n  height: number,\n  angle: number,\n  appState: AppState,\n  maxWidth: number,\n  maxHeight: number,\n) => {\n  const { zoom } = appState;\n  const degree = (180 * angle) / Math.PI;\n  let translateX = (width * (zoom.value - 1)) / 2;\n  let translateY = (height * (zoom.value - 1)) / 2;\n  if (width > maxWidth && zoom.value !== 1) {\n    translateX = (maxWidth * (zoom.value - 1)) / 2;\n  }\n  if (height > maxHeight && zoom.value !== 1) {\n    translateY = (maxHeight * (zoom.value - 1)) / 2;\n  }\n  return `translate(${translateX}px, ${translateY}px) scale(${zoom.value}) rotate(${degree}deg)`;\n};\n\nexport const textWysiwyg = ({\n  id,\n  onChange,\n  onSubmit,\n  getViewportCoords,\n  element,\n  canvas,\n  excalidrawContainer,\n  app,\n}: {\n  id: ExcalidrawElement[\"id\"];\n  onChange?: (text: string) => void;\n  onSubmit: (data: {\n    text: string;\n    viaKeyboard: boolean;\n    originalText: string;\n  }) => void;\n  getViewportCoords: (x: number, y: number) => [number, number];\n  element: ExcalidrawTextElement;\n  canvas: HTMLCanvasElement | null;\n  excalidrawContainer: HTMLDivElement | null;\n  app: App;\n}) => {\n  const textPropertiesUpdated = (\n    updatedElement: ExcalidrawTextElement,\n    editable: HTMLTextAreaElement,\n  ) => {\n    const currentFont = editable.style.fontFamily.replace(/\"/g, \"\");\n    if (\n      getFontFamilyString({ fontFamily: updatedElement.fontFamily }) !==\n      currentFont\n    ) {\n      return true;\n    }\n    if (`${updatedElement.fontSize}px` !== editable.style.fontSize) {\n      return true;\n    }\n    return false;\n  };\n  let originalContainerHeight: number;\n\n  const updateWysiwygStyle = () => {\n    const appState = app.state;\n    const updatedElement = Scene.getScene(element)?.getElement(\n      id,\n    ) as ExcalidrawTextElement;\n    const { textAlign, verticalAlign } = updatedElement;\n\n    const approxLineHeight = getApproxLineHeight(getFontString(updatedElement));\n    if (updatedElement && isTextElement(updatedElement)) {\n      let coordX = updatedElement.x;\n      let coordY = updatedElement.y;\n      const container = getContainerElement(updatedElement);\n      let maxWidth = updatedElement.width;\n\n      let maxHeight = updatedElement.height;\n      let width = updatedElement.width;\n      // Set to element height by default since that's\n      // what is going to be used for unbounded text\n      let height = updatedElement.height;\n      if (container && updatedElement.containerId) {\n        const propertiesUpdated = textPropertiesUpdated(\n          updatedElement,\n          editable,\n        );\n        // using editor.style.height to get the accurate height of text editor\n        const editorHeight = Number(editable.style.height.slice(0, -2));\n        if (editorHeight > 0) {\n          height = editorHeight;\n        }\n        if (propertiesUpdated) {\n          originalContainerHeight = container.height;\n\n          // update height of the editor after properties updated\n          height = updatedElement.height;\n        }\n        if (!originalContainerHeight) {\n          originalContainerHeight = container.height;\n        }\n        maxWidth = container.width - BOUND_TEXT_PADDING * 2;\n        maxHeight = container.height - BOUND_TEXT_PADDING * 2;\n        width = maxWidth;\n        // The coordinates of text box set a distance of\n        // 5px to preserve padding\n        coordX = container.x + BOUND_TEXT_PADDING;\n        // autogrow container height if text exceeds\n        if (height > maxHeight) {\n          const diff = Math.min(height - maxHeight, approxLineHeight);\n          mutateElement(container, { height: container.height + diff });\n          return;\n        } else if (\n          // autoshrink container height until original container height\n          // is reached when text is removed\n          container.height > originalContainerHeight &&\n          height < maxHeight\n        ) {\n          const diff = Math.min(maxHeight - height, approxLineHeight);\n          mutateElement(container, { height: container.height - diff });\n        }\n        // Start pushing text upward until a diff of 30px (padding)\n        // is reached\n        else {\n          // vertically center align the text\n          if (verticalAlign === VERTICAL_ALIGN.MIDDLE) {\n            coordY = container.y + container.height / 2 - height / 2;\n          }\n          if (verticalAlign === VERTICAL_ALIGN.BOTTOM) {\n            coordY =\n              container.y + container.height - height - BOUND_TEXT_PADDING;\n          }\n        }\n      }\n      const [viewportX, viewportY] = getViewportCoords(coordX, coordY);\n      const initialSelectionStart = editable.selectionStart;\n      const initialSelectionEnd = editable.selectionEnd;\n      const initialLength = editable.value.length;\n      editable.value = updatedElement.originalText;\n\n      // restore cursor position after value updated so it doesn't\n      // go to the end of text when container auto expanded\n      if (\n        initialSelectionStart === initialSelectionEnd &&\n        initialSelectionEnd !== initialLength\n      ) {\n        // get diff between length and selection end and shift\n        // the cursor by \"diff\" times to position correctly\n        const diff = initialLength - initialSelectionEnd;\n        editable.selectionStart = editable.value.length - diff;\n        editable.selectionEnd = editable.value.length - diff;\n      }\n\n      const lines = updatedElement.originalText.split(\"\\n\");\n      const lineHeight = updatedElement.containerId\n        ? approxLineHeight\n        : updatedElement.height / lines.length;\n      if (!container) {\n        maxWidth = (appState.width - 8 - viewportX) / appState.zoom.value;\n      }\n\n      // Make sure text editor height doesn't go beyond viewport\n      const editorMaxHeight =\n        (appState.height - viewportY) / appState.zoom.value;\n      const angle = container ? container.angle : updatedElement.angle;\n      Object.assign(editable.style, {\n        font: getFontString(updatedElement),\n        // must be defined *after* font ¯\\_(ツ)_/¯\n        lineHeight: `${lineHeight}px`,\n        width: `${width}px`,\n        height: `${height}px`,\n        left: `${viewportX}px`,\n        top: `${viewportY}px`,\n        transform: getTransform(\n          width,\n          height,\n          angle,\n          appState,\n          maxWidth,\n          editorMaxHeight,\n        ),\n        textAlign,\n        verticalAlign,\n        color: updatedElement.strokeColor,\n        opacity: updatedElement.opacity / 100,\n        filter: \"var(--theme-filter)\",\n        maxWidth: `${maxWidth}px`,\n        maxHeight: `${editorMaxHeight}px`,\n      });\n      // For some reason updating font attribute doesn't set font family\n      // hence updating font family explicitly for test environment\n      if (isTestEnv()) {\n        editable.style.fontFamily = getFontFamilyString(updatedElement);\n      }\n      mutateElement(updatedElement, { x: coordX, y: coordY });\n    }\n  };\n\n  const editable = document.createElement(\"textarea\");\n\n  editable.dir = \"auto\";\n  editable.tabIndex = 0;\n  editable.dataset.type = \"wysiwyg\";\n  // prevent line wrapping on Safari\n  editable.wrap = \"off\";\n  editable.classList.add(\"excalidraw-wysiwyg\");\n\n  let whiteSpace = \"pre\";\n  let wordBreak = \"normal\";\n\n  if (isBoundToContainer(element)) {\n    whiteSpace = \"pre-wrap\";\n    wordBreak = \"break-word\";\n  }\n  Object.assign(editable.style, {\n    position: \"absolute\",\n    display: \"inline-block\",\n    minHeight: \"1em\",\n    backfaceVisibility: \"hidden\",\n    margin: 0,\n    padding: 0,\n    border: 0,\n    outline: 0,\n    resize: \"none\",\n    background: \"transparent\",\n    overflow: \"hidden\",\n    // must be specified because in dark mode canvas creates a stacking context\n    zIndex: \"var(--zIndex-wysiwyg)\",\n    wordBreak,\n    // prevent line wrapping (`whitespace: nowrap` doesn't work on FF)\n    whiteSpace,\n    overflowWrap: \"break-word\",\n  });\n  updateWysiwygStyle();\n\n  if (onChange) {\n    editable.oninput = () => {\n      const updatedElement = Scene.getScene(element)?.getElement(\n        id,\n      ) as ExcalidrawTextElement;\n      const font = getFontString(updatedElement);\n      // using scrollHeight here since we need to calculate\n      // number of lines so cannot use editable.style.height\n      // as that gets updated below\n      const lines = editable.scrollHeight / getApproxLineHeight(font);\n      // auto increase height only when lines  > 1 so its\n      // measured correctly and vertically aligns for\n      // first line as well as setting height to \"auto\"\n      // doubles the height as soon as user starts typing\n      if (isBoundToContainer(element) && lines > 1) {\n        let height = \"auto\";\n\n        if (lines === 2) {\n          const container = getContainerElement(element);\n          const actualLineCount = wrapText(\n            editable.value,\n            font,\n            container!.width,\n          ).split(\"\\n\").length;\n\n          // This is browser behaviour when setting height to \"auto\"\n          // It sets the height needed for 2 lines even if actual\n          // line count is 1 as mentioned above as well\n          // hence reducing the height by half if actual line count is 1\n          // so single line aligns vertically when deleting\n          if (actualLineCount === 1) {\n            height = `${editable.scrollHeight / 2}px`;\n          }\n        }\n        editable.style.height = height;\n        editable.style.height = `${editable.scrollHeight}px`;\n      }\n      onChange(normalizeText(editable.value));\n    };\n  }\n\n  editable.onkeydown = (event) => {\n    event.stopPropagation();\n\n    if (!event.shiftKey && actionZoomIn.keyTest(event)) {\n      event.preventDefault();\n      app.actionManager.executeAction(actionZoomIn);\n      updateWysiwygStyle();\n    } else if (!event.shiftKey && actionZoomOut.keyTest(event)) {\n      event.preventDefault();\n      app.actionManager.executeAction(actionZoomOut);\n      updateWysiwygStyle();\n    } else if (actionDecreaseFontSize.keyTest(event)) {\n      app.actionManager.executeAction(actionDecreaseFontSize);\n    } else if (actionIncreaseFontSize.keyTest(event)) {\n      app.actionManager.executeAction(actionIncreaseFontSize);\n    } else if (event.key === KEYS.ESCAPE) {\n      event.preventDefault();\n      submittedViaKeyboard = true;\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && event[KEYS.CTRL_OR_CMD]) {\n      event.preventDefault();\n      if (event.isComposing || event.keyCode === 229) {\n        return;\n      }\n      submittedViaKeyboard = true;\n      handleSubmit();\n    } else if (\n      event.key === KEYS.TAB ||\n      (event[KEYS.CTRL_OR_CMD] &&\n        (event.code === CODES.BRACKET_LEFT ||\n          event.code === CODES.BRACKET_RIGHT))\n    ) {\n      event.preventDefault();\n      if (event.shiftKey || event.code === CODES.BRACKET_LEFT) {\n        outdent();\n      } else {\n        indent();\n      }\n      // We must send an input event to resize the element\n      editable.dispatchEvent(new Event(\"input\"));\n    }\n  };\n\n  const TAB_SIZE = 4;\n  const TAB = \" \".repeat(TAB_SIZE);\n  const RE_LEADING_TAB = new RegExp(`^ {1,${TAB_SIZE}}`);\n  const indent = () => {\n    const { selectionStart, selectionEnd } = editable;\n    const linesStartIndices = getSelectedLinesStartIndices();\n\n    let value = editable.value;\n    linesStartIndices.forEach((startIndex: number) => {\n      const startValue = value.slice(0, startIndex);\n      const endValue = value.slice(startIndex);\n\n      value = `${startValue}${TAB}${endValue}`;\n    });\n\n    editable.value = value;\n\n    editable.selectionStart = selectionStart + TAB_SIZE;\n    editable.selectionEnd = selectionEnd + TAB_SIZE * linesStartIndices.length;\n  };\n\n  const outdent = () => {\n    const { selectionStart, selectionEnd } = editable;\n    const linesStartIndices = getSelectedLinesStartIndices();\n    const removedTabs: number[] = [];\n\n    let value = editable.value;\n    linesStartIndices.forEach((startIndex) => {\n      const tabMatch = value\n        .slice(startIndex, startIndex + TAB_SIZE)\n        .match(RE_LEADING_TAB);\n\n      if (tabMatch) {\n        const startValue = value.slice(0, startIndex);\n        const endValue = value.slice(startIndex + tabMatch[0].length);\n\n        // Delete a tab from the line\n        value = `${startValue}${endValue}`;\n        removedTabs.push(startIndex);\n      }\n    });\n\n    editable.value = value;\n\n    if (removedTabs.length) {\n      if (selectionStart > removedTabs[removedTabs.length - 1]) {\n        editable.selectionStart = Math.max(\n          selectionStart - TAB_SIZE,\n          removedTabs[removedTabs.length - 1],\n        );\n      } else {\n        // If the cursor is before the first tab removed, ex:\n        // Line| #1\n        //     Line #2\n        // Lin|e #3\n        // we should reset the selectionStart to his initial value.\n        editable.selectionStart = selectionStart;\n      }\n      editable.selectionEnd = Math.max(\n        editable.selectionStart,\n        selectionEnd - TAB_SIZE * removedTabs.length,\n      );\n    }\n  };\n\n  /**\n   * @returns indices of start positions of selected lines, in reverse order\n   */\n  const getSelectedLinesStartIndices = () => {\n    let { selectionStart, selectionEnd, value } = editable;\n\n    // chars before selectionStart on the same line\n    const startOffset = value.slice(0, selectionStart).match(/[^\\n]*$/)![0]\n      .length;\n    // put caret at the start of the line\n    selectionStart = selectionStart - startOffset;\n\n    const selected = value.slice(selectionStart, selectionEnd);\n\n    return selected\n      .split(\"\\n\")\n      .reduce(\n        (startIndices, line, idx, lines) =>\n          startIndices.concat(\n            idx\n              ? // curr line index is prev line's start + prev line's length + \\n\n                startIndices[idx - 1] + lines[idx - 1].length + 1\n              : // first selected line\n                selectionStart,\n          ),\n        [] as number[],\n      )\n      .reverse();\n  };\n\n  const stopEvent = (event: Event) => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  // using a state variable instead of passing it to the handleSubmit callback\n  // so that we don't need to create separate a callback for event handlers\n  let submittedViaKeyboard = false;\n  const handleSubmit = () => {\n    // cleanup must be run before onSubmit otherwise when app blurs the wysiwyg\n    // it'd get stuck in an infinite loop of blur→onSubmit after we re-focus the\n    // wysiwyg on update\n    cleanup();\n    const updateElement = Scene.getScene(element)?.getElement(\n      element.id,\n    ) as ExcalidrawTextElement;\n    if (!updateElement) {\n      return;\n    }\n    let text = editable.value;\n    const container = getContainerElement(updateElement);\n\n    if (container) {\n      text = updateElement.text;\n      if (editable.value) {\n        const boundTextElementId = getBoundTextElementId(container);\n        if (!boundTextElementId || boundTextElementId !== element.id) {\n          mutateElement(container, {\n            boundElements: (container.boundElements || []).concat({\n              type: \"text\",\n              id: element.id,\n            }),\n          });\n        }\n      } else {\n        mutateElement(container, {\n          boundElements: container.boundElements?.filter(\n            (ele) =>\n              !isTextElement(\n                ele as ExcalidrawTextElement | ExcalidrawLinearElement,\n              ),\n          ),\n        });\n      }\n    }\n\n    onSubmit({\n      text,\n      viaKeyboard: submittedViaKeyboard,\n      originalText: editable.value,\n    });\n  };\n\n  const cleanup = () => {\n    if (isDestroyed) {\n      return;\n    }\n    isDestroyed = true;\n    // remove events to ensure they don't late-fire\n    editable.onblur = null;\n    editable.oninput = null;\n    editable.onkeydown = null;\n\n    if (observer) {\n      observer.disconnect();\n    }\n\n    window.removeEventListener(\"resize\", updateWysiwygStyle);\n    window.removeEventListener(\"wheel\", stopEvent, true);\n    window.removeEventListener(\"pointerdown\", onPointerDown);\n    window.removeEventListener(\"pointerup\", bindBlurEvent);\n    window.removeEventListener(\"blur\", handleSubmit);\n\n    unbindUpdate();\n\n    editable.remove();\n  };\n\n  const bindBlurEvent = (event?: MouseEvent) => {\n    window.removeEventListener(\"pointerup\", bindBlurEvent);\n    // Deferred so that the pointerdown that initiates the wysiwyg doesn't\n    // trigger the blur on ensuing pointerup.\n    // Also to handle cases such as picking a color which would trigger a blur\n    // in that same tick.\n    const target = event?.target;\n\n    const isTargetColorPicker =\n      target instanceof HTMLInputElement &&\n      target.closest(\".color-picker-input\") &&\n      isWritableElement(target);\n\n    setTimeout(() => {\n      editable.onblur = handleSubmit;\n      if (target && isTargetColorPicker) {\n        target.onblur = () => {\n          editable.focus();\n        };\n      }\n      // case: clicking on the same property → no change → no update → no focus\n      if (!isTargetColorPicker) {\n        editable.focus();\n      }\n    });\n  };\n\n  // prevent blur when changing properties from the menu\n  const onPointerDown = (event: MouseEvent) => {\n    const isTargetColorPicker =\n      event.target instanceof HTMLInputElement &&\n      event.target.closest(\".color-picker-input\") &&\n      isWritableElement(event.target);\n    if (\n      ((event.target instanceof HTMLElement ||\n        event.target instanceof SVGElement) &&\n        event.target.closest(`.${CLASSES.SHAPE_ACTIONS_MENU}`) &&\n        !isWritableElement(event.target)) ||\n      isTargetColorPicker\n    ) {\n      editable.onblur = null;\n      window.addEventListener(\"pointerup\", bindBlurEvent);\n      // handle edge-case where pointerup doesn't fire e.g. due to user\n      // alt-tabbing away\n      window.addEventListener(\"blur\", handleSubmit);\n    }\n  };\n\n  // handle updates of textElement properties of editing element\n  const unbindUpdate = Scene.getScene(element)!.addCallback(() => {\n    updateWysiwygStyle();\n    const isColorPickerActive = !!document.activeElement?.closest(\n      \".color-picker-input\",\n    );\n    if (!isColorPickerActive) {\n      editable.focus();\n    }\n  });\n\n  // ---------------------------------------------------------------------------\n\n  let isDestroyed = false;\n\n  // select on init (focusing is done separately inside the bindBlurEvent()\n  // because we need it to happen *after* the blur event from `pointerdown`)\n  editable.select();\n  bindBlurEvent();\n\n  // reposition wysiwyg in case of canvas is resized. Using ResizeObserver\n  // is preferred so we catch changes from host, where window may not resize.\n  let observer: ResizeObserver | null = null;\n  if (canvas && \"ResizeObserver\" in window) {\n    observer = new window.ResizeObserver(() => {\n      updateWysiwygStyle();\n    });\n    observer.observe(canvas);\n  } else {\n    window.addEventListener(\"resize\", updateWysiwygStyle);\n  }\n\n  window.addEventListener(\"pointerdown\", onPointerDown);\n  window.addEventListener(\"wheel\", stopEvent, {\n    passive: false,\n    capture: true,\n  });\n  excalidrawContainer\n    ?.querySelector(\".excalidraw-textEditorContainer\")!\n    .appendChild(editable);\n};\n","import { AppState } from \"../types\";\nimport { NonDeletedExcalidrawElement } from \"./types\";\nimport { getSelectedElements } from \"../scene\";\n\nexport const showSelectedShapeActions = (\n  appState: AppState,\n  elements: readonly NonDeletedExcalidrawElement[],\n) =>\n  Boolean(\n    !appState.viewModeEnabled &&\n      (appState.editingElement ||\n        getSelectedElements(elements, appState).length ||\n        (appState.elementType !== \"selection\" &&\n          appState.elementType !== \"eraser\")),\n  );\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"./types\";\nimport { isInvisiblySmallElement } from \"./sizeHelpers\";\nimport { isLinearElementType } from \"./typeChecks\";\n\nexport {\n  newElement,\n  newTextElement,\n  updateTextElement,\n  newLinearElement,\n  newImageElement,\n  duplicateElement,\n} from \"./newElement\";\nexport {\n  getElementAbsoluteCoords,\n  getElementBounds,\n  getCommonBounds,\n  getDiamondPoints,\n  getArrowheadPoints,\n  getClosestElementBounds,\n} from \"./bounds\";\n\nexport {\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  getTransformHandlesFromCoords,\n  getTransformHandles,\n} from \"./transformHandles\";\nexport {\n  hitTest,\n  isHittingElementBoundingBoxWithoutHittingElement,\n} from \"./collision\";\nexport {\n  resizeTest,\n  getCursorForResizingElement,\n  getElementWithTransformHandleType,\n  getTransformHandleTypeFromCoords,\n} from \"./resizeTest\";\nexport {\n  transformElements,\n  getResizeOffsetXY,\n  getResizeArrowDirection,\n} from \"./resizeElements\";\nexport {\n  dragSelectedElements,\n  getDragOffsetXY,\n  dragNewElement,\n} from \"./dragElements\";\nexport { isTextElement, isExcalidrawElement } from \"./typeChecks\";\nexport { textWysiwyg } from \"./textWysiwyg\";\nexport { redrawTextBoundingBox } from \"./textElement\";\nexport {\n  getPerfectElementSize,\n  isInvisiblySmallElement,\n  resizePerfectLineForNWHandler,\n  getNormalizedDimensions,\n} from \"./sizeHelpers\";\nexport { showSelectedShapeActions } from \"./showSelectedShapeActions\";\n\nexport const getSceneVersion = (elements: readonly ExcalidrawElement[]) =>\n  elements.reduce((acc, el) => acc + el.version, 0);\n\nexport const getVisibleElements = (elements: readonly ExcalidrawElement[]) =>\n  elements.filter(\n    (el) => !el.isDeleted && !isInvisiblySmallElement(el),\n  ) as readonly NonDeletedExcalidrawElement[];\n\nexport const getNonDeletedElements = (elements: readonly ExcalidrawElement[]) =>\n  elements.filter(\n    (element) => !element.isDeleted,\n  ) as readonly NonDeletedExcalidrawElement[];\n\nexport const isNonDeletedElement = <T extends ExcalidrawElement>(\n  element: T,\n): element is NonDeleted<T> => !element.isDeleted;\n\nconst _clearElements = (\n  elements: readonly ExcalidrawElement[],\n): ExcalidrawElement[] =>\n  getNonDeletedElements(elements).map((element) =>\n    isLinearElementType(element.type)\n      ? { ...element, lastCommittedPoint: null }\n      : element,\n  );\n\nexport const clearElementsForDatabase = (\n  elements: readonly ExcalidrawElement[],\n) => _clearElements(elements);\n\nexport const clearElementsForExport = (\n  elements: readonly ExcalidrawElement[],\n) => _clearElements(elements);\n\nexport const clearElementsForLocalStorage = (\n  elements: readonly ExcalidrawElement[],\n) => _clearElements(elements);\n","import { ExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element\";\nimport { Zoom } from \"../types\";\nimport { ScrollBars } from \"./types\";\nimport { getGlobalCSSVariable } from \"../utils\";\nimport { getLanguage } from \"../i18n\";\n\nexport const SCROLLBAR_MARGIN = 4;\nexport const SCROLLBAR_WIDTH = 6;\nexport const SCROLLBAR_COLOR = \"rgba(0,0,0,0.3)\";\n\nexport const getScrollBars = (\n  elements: readonly ExcalidrawElement[],\n  viewportWidth: number,\n  viewportHeight: number,\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: number;\n    scrollY: number;\n    zoom: Zoom;\n  },\n): ScrollBars => {\n  if (elements.length === 0) {\n    return {\n      horizontal: null,\n      vertical: null,\n    };\n  }\n  // This is the bounding box of all the elements\n  const [elementsMinX, elementsMinY, elementsMaxX, elementsMaxY] =\n    getCommonBounds(elements);\n\n  // Apply zoom\n  const viewportWidthWithZoom = viewportWidth / zoom.value;\n  const viewportHeightWithZoom = viewportHeight / zoom.value;\n\n  const viewportWidthDiff = viewportWidth - viewportWidthWithZoom;\n  const viewportHeightDiff = viewportHeight - viewportHeightWithZoom;\n\n  const safeArea = {\n    top: parseInt(getGlobalCSSVariable(\"sat\")),\n    bottom: parseInt(getGlobalCSSVariable(\"sab\")),\n    left: parseInt(getGlobalCSSVariable(\"sal\")),\n    right: parseInt(getGlobalCSSVariable(\"sar\")),\n  };\n\n  const isRTL = getLanguage().rtl;\n\n  // The viewport is the rectangle currently visible for the user\n  const viewportMinX = -scrollX + viewportWidthDiff / 2 + safeArea.left;\n  const viewportMinY = -scrollY + viewportHeightDiff / 2 + safeArea.top;\n  const viewportMaxX = viewportMinX + viewportWidthWithZoom - safeArea.right;\n  const viewportMaxY = viewportMinY + viewportHeightWithZoom - safeArea.bottom;\n\n  // The scene is the bounding box of both the elements and viewport\n  const sceneMinX = Math.min(elementsMinX, viewportMinX);\n  const sceneMinY = Math.min(elementsMinY, viewportMinY);\n  const sceneMaxX = Math.max(elementsMaxX, viewportMaxX);\n  const sceneMaxY = Math.max(elementsMaxY, viewportMaxY);\n\n  // The scrollbar represents where the viewport is in relationship to the scene\n\n  return {\n    horizontal:\n      viewportMinX === sceneMinX && viewportMaxX === sceneMaxX\n        ? null\n        : {\n            x:\n              Math.max(safeArea.left, SCROLLBAR_MARGIN) +\n              ((viewportMinX - sceneMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth,\n            y:\n              viewportHeight -\n              SCROLLBAR_WIDTH -\n              Math.max(SCROLLBAR_MARGIN, safeArea.bottom),\n            width:\n              ((viewportMaxX - viewportMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.left + safeArea.right),\n            height: SCROLLBAR_WIDTH,\n          },\n    vertical:\n      viewportMinY === sceneMinY && viewportMaxY === sceneMaxY\n        ? null\n        : {\n            x: isRTL\n              ? Math.max(safeArea.left, SCROLLBAR_MARGIN)\n              : viewportWidth -\n                SCROLLBAR_WIDTH -\n                Math.max(safeArea.right, SCROLLBAR_MARGIN),\n            y:\n              ((viewportMinY - sceneMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight +\n              Math.max(safeArea.top, SCROLLBAR_MARGIN),\n            width: SCROLLBAR_WIDTH,\n            height:\n              ((viewportMaxY - viewportMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.top + safeArea.bottom),\n          },\n  };\n};\n\nexport const isOverScrollBars = (\n  scrollBars: ScrollBars,\n  x: number,\n  y: number,\n): {\n  isOverEither: boolean;\n  isOverHorizontal: boolean;\n  isOverVertical: boolean;\n} => {\n  const [isOverHorizontal, isOverVertical] = [\n    scrollBars.horizontal,\n    scrollBars.vertical,\n  ].map((scrollBar) => {\n    return (\n      scrollBar != null &&\n      scrollBar.x <= x &&\n      x <= scrollBar.x + scrollBar.width &&\n      scrollBar.y <= y &&\n      y <= scrollBar.y + scrollBar.height\n    );\n  });\n  const isOverEither = isOverHorizontal || isOverVertical;\n  return { isOverEither, isOverHorizontal, isOverVertical };\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { getElementAbsoluteCoords, getElementBounds } from \"../element\";\nimport { AppState } from \"../types\";\nimport { isBoundToContainer } from \"../element/typeChecks\";\n\nexport const getElementsWithinSelection = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  selection: NonDeletedExcalidrawElement,\n) => {\n  const [selectionX1, selectionY1, selectionX2, selectionY2] =\n    getElementAbsoluteCoords(selection);\n  return elements.filter((element) => {\n    const [elementX1, elementY1, elementX2, elementY2] =\n      getElementBounds(element);\n\n    return (\n      element.type !== \"selection\" &&\n      !isBoundToContainer(element) &&\n      selectionX1 <= elementX1 &&\n      selectionY1 <= elementY1 &&\n      selectionX2 >= elementX2 &&\n      selectionY2 >= elementY2\n    );\n  });\n};\n\nexport const isSomeElementSelected = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n): boolean =>\n  elements.some((element) => appState.selectedElementIds[element.id]);\n\n/**\n * Returns common attribute (picked by `getAttribute` callback) of selected\n *  elements. If elements don't share the same value, returns `null`.\n */\nexport const getCommonAttributeOfSelectedElements = <T>(\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n): T | null => {\n  const attributes = Array.from(\n    new Set(\n      getSelectedElements(elements, appState).map((element) =>\n        getAttribute(element),\n      ),\n    ),\n  );\n  return attributes.length === 1 ? attributes[0] : null;\n};\n\nexport const getSelectedElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  includeBoundTextElement: boolean = false,\n) =>\n  elements.filter((element) => {\n    if (appState.selectedElementIds[element.id]) {\n      return element;\n    }\n    if (\n      includeBoundTextElement &&\n      isBoundToContainer(element) &&\n      appState.selectedElementIds[element?.containerId]\n    ) {\n      return element;\n    }\n    return null;\n  });\n\nexport const getTargetElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) =>\n  appState.editingElement\n    ? [appState.editingElement]\n    : getSelectedElements(elements, appState, true);\n","import { isSomeElementSelected } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { trash } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { getElementsInGroup } from \"../groups\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { fixBindingsAfterDeletion } from \"../element/binding\";\nimport { isBoundToContainer } from \"../element/typeChecks\";\n\nconst deleteSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return {\n    elements: elements.map((el) => {\n      if (appState.selectedElementIds[el.id]) {\n        return newElementWith(el, { isDeleted: true });\n      }\n      if (\n        isBoundToContainer(el) &&\n        appState.selectedElementIds[el.containerId]\n      ) {\n        return newElementWith(el, { isDeleted: true });\n      }\n      return el;\n    }),\n    appState: {\n      ...appState,\n      selectedElementIds: {},\n    },\n  };\n};\n\nconst handleGroupEditingState = (\n  appState: AppState,\n  elements: readonly ExcalidrawElement[],\n): AppState => {\n  if (appState.editingGroupId) {\n    const siblingElements = getElementsInGroup(\n      getNonDeletedElements(elements),\n      appState.editingGroupId!,\n    );\n    if (siblingElements.length) {\n      return {\n        ...appState,\n        selectedElementIds: { [siblingElements[0].id]: true },\n      };\n    }\n  }\n  return appState;\n};\n\nexport const actionDeleteSelected = register({\n  name: \"deleteSelectedElements\",\n  perform: (elements, appState) => {\n    if (appState.editingLinearElement) {\n      const {\n        elementId,\n        selectedPointsIndices,\n        startBindingElement,\n        endBindingElement,\n      } = appState.editingLinearElement;\n      const element = LinearElementEditor.getElement(elementId);\n      if (!element) {\n        return false;\n      }\n      if (\n        // case: no point selected → delete whole element\n        selectedPointsIndices == null ||\n        // case: deleting last remaining point\n        element.points.length < 2\n      ) {\n        const nextElements = elements.filter((el) => el.id !== element.id);\n        const nextAppState = handleGroupEditingState(appState, nextElements);\n\n        return {\n          elements: nextElements,\n          appState: {\n            ...nextAppState,\n            editingLinearElement: null,\n          },\n          commitToHistory: false,\n        };\n      }\n\n      // We cannot do this inside `movePoint` because it is also called\n      // when deleting the uncommitted point (which hasn't caused any binding)\n      const binding = {\n        startBindingElement: selectedPointsIndices?.includes(0)\n          ? null\n          : startBindingElement,\n        endBindingElement: selectedPointsIndices?.includes(\n          element.points.length - 1,\n        )\n          ? null\n          : endBindingElement,\n      };\n\n      LinearElementEditor.deletePoints(element, selectedPointsIndices);\n\n      return {\n        elements,\n        appState: {\n          ...appState,\n          editingLinearElement: {\n            ...appState.editingLinearElement,\n            ...binding,\n            selectedPointsIndices:\n              selectedPointsIndices?.[0] > 0\n                ? [selectedPointsIndices[0] - 1]\n                : [0],\n          },\n        },\n        commitToHistory: true,\n      };\n    }\n    let { elements: nextElements, appState: nextAppState } =\n      deleteSelectedElements(elements, appState);\n    fixBindingsAfterDeletion(\n      nextElements,\n      elements.filter(({ id }) => appState.selectedElementIds[id]),\n    );\n\n    nextAppState = handleGroupEditingState(nextAppState, nextElements);\n\n    return {\n      elements: nextElements,\n      appState: {\n        ...nextAppState,\n        elementType: \"selection\",\n        multiElement: null,\n      },\n      commitToHistory: isSomeElementSelected(\n        getNonDeletedElements(elements),\n        appState,\n      ),\n    };\n  },\n  contextItemLabel: \"labels.delete\",\n  keyTest: (event) => event.key === KEYS.BACKSPACE || event.key === KEYS.DELETE,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"labels.delete\")}\n      aria-label={t(\"labels.delete\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","import { bumpVersion } from \"./element/mutateElement\";\nimport { ExcalidrawElement } from \"./element/types\";\nimport { getElementsInGroup } from \"./groups\";\nimport { getSelectedElements } from \"./scene\";\nimport Scene from \"./scene/Scene\";\nimport { AppState } from \"./types\";\nimport { arrayToMap, findIndex, findLastIndex } from \"./utils\";\n\n/**\n * Returns indices of elements to move based on selected elements.\n * Includes contiguous deleted elements that are between two selected elements,\n *  e.g.: [0 (selected), 1 (deleted), 2 (deleted), 3 (selected)]\n */\nconst getIndicesToMove = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  let selectedIndices: number[] = [];\n  let deletedIndices: number[] = [];\n  let includeDeletedIndex = null;\n  let index = -1;\n  const selectedElementIds = arrayToMap(\n    getSelectedElements(elements, appState, true),\n  );\n  while (++index < elements.length) {\n    if (selectedElementIds.get(elements[index].id)) {\n      if (deletedIndices.length) {\n        selectedIndices = selectedIndices.concat(deletedIndices);\n        deletedIndices = [];\n      }\n      selectedIndices.push(index);\n      includeDeletedIndex = index + 1;\n    } else if (elements[index].isDeleted && includeDeletedIndex === index) {\n      includeDeletedIndex = index + 1;\n      deletedIndices.push(index);\n    } else {\n      deletedIndices = [];\n    }\n  }\n  return selectedIndices;\n};\n\nconst toContiguousGroups = (array: number[]) => {\n  let cursor = 0;\n  return array.reduce((acc, value, index) => {\n    if (index > 0 && array[index - 1] !== value - 1) {\n      cursor = ++cursor;\n    }\n    (acc[cursor] || (acc[cursor] = [])).push(value);\n    return acc;\n  }, [] as number[][]);\n};\n\n/**\n * @returns index of target element, consindering tightly-bound elements\n * (currently non-linear elements bound to a container) as a one unit.\n * If no binding present, returns `undefined`.\n */\nconst getTargetIndexAccountingForBinding = (\n  nextElement: ExcalidrawElement,\n  elements: readonly ExcalidrawElement[],\n  direction: \"left\" | \"right\",\n) => {\n  if (\"containerId\" in nextElement && nextElement.containerId) {\n    if (direction === \"left\") {\n      const containerElement = Scene.getScene(nextElement)!.getElement(\n        nextElement.containerId,\n      );\n      if (containerElement) {\n        return elements.indexOf(containerElement);\n      }\n    } else {\n      return elements.indexOf(nextElement);\n    }\n  } else {\n    const boundElementId = nextElement.boundElements?.find(\n      (binding) => binding.type !== \"arrow\",\n    )?.id;\n    if (boundElementId) {\n      if (direction === \"left\") {\n        return elements.indexOf(nextElement);\n      }\n      const boundTextElement =\n        Scene.getScene(nextElement)!.getElement(boundElementId);\n\n      if (boundTextElement) {\n        return elements.indexOf(boundTextElement);\n      }\n    }\n  }\n};\n\n/**\n * Returns next candidate index that's available to be moved to. Currently that\n *  is a non-deleted element, and not inside a group (unless we're editing it).\n */\nconst getTargetIndex = (\n  appState: AppState,\n  elements: readonly ExcalidrawElement[],\n  boundaryIndex: number,\n  direction: \"left\" | \"right\",\n) => {\n  const sourceElement = elements[boundaryIndex];\n\n  const indexFilter = (element: ExcalidrawElement) => {\n    if (element.isDeleted) {\n      return false;\n    }\n    // if we're editing group, find closest sibling irrespective of whether\n    // there's a different-group element between them (for legacy reasons)\n    if (appState.editingGroupId) {\n      return element.groupIds.includes(appState.editingGroupId);\n    }\n    return true;\n  };\n\n  const candidateIndex =\n    direction === \"left\"\n      ? findLastIndex(elements, indexFilter, Math.max(0, boundaryIndex - 1))\n      : findIndex(elements, indexFilter, boundaryIndex + 1);\n\n  const nextElement = elements[candidateIndex];\n\n  if (!nextElement) {\n    return -1;\n  }\n\n  if (appState.editingGroupId) {\n    if (\n      // candidate element is a sibling in current editing group → return\n      sourceElement?.groupIds.join(\"\") === nextElement?.groupIds.join(\"\")\n    ) {\n      return (\n        getTargetIndexAccountingForBinding(nextElement, elements, direction) ??\n        candidateIndex\n      );\n    } else if (!nextElement?.groupIds.includes(appState.editingGroupId)) {\n      // candidate element is outside current editing group → prevent\n      return -1;\n    }\n  }\n\n  if (!nextElement.groupIds.length) {\n    return (\n      getTargetIndexAccountingForBinding(nextElement, elements, direction) ??\n      candidateIndex\n    );\n  }\n\n  const siblingGroupId = appState.editingGroupId\n    ? nextElement.groupIds[\n        nextElement.groupIds.indexOf(appState.editingGroupId) - 1\n      ]\n    : nextElement.groupIds[nextElement.groupIds.length - 1];\n\n  const elementsInSiblingGroup = getElementsInGroup(elements, siblingGroupId);\n\n  if (elementsInSiblingGroup.length) {\n    // assumes getElementsInGroup() returned elements are sorted\n    // by zIndex (ascending)\n    return direction === \"left\"\n      ? elements.indexOf(elementsInSiblingGroup[0])\n      : elements.indexOf(\n          elementsInSiblingGroup[elementsInSiblingGroup.length - 1],\n        );\n  }\n\n  return candidateIndex;\n};\n\nconst getTargetElementsMap = (\n  elements: readonly ExcalidrawElement[],\n  indices: number[],\n) => {\n  return indices.reduce((acc, index) => {\n    const element = elements[index];\n    acc[element.id] = element;\n    return acc;\n  }, {} as Record<string, ExcalidrawElement>);\n};\n\nconst shiftElements = (\n  appState: AppState,\n  elements: readonly ExcalidrawElement[],\n  direction: \"left\" | \"right\",\n) => {\n  const indicesToMove = getIndicesToMove(elements, appState);\n  const targetElementsMap = getTargetElementsMap(elements, indicesToMove);\n  let groupedIndices = toContiguousGroups(indicesToMove);\n\n  if (direction === \"right\") {\n    groupedIndices = groupedIndices.reverse();\n  }\n\n  groupedIndices.forEach((indices, i) => {\n    const leadingIndex = indices[0];\n    const trailingIndex = indices[indices.length - 1];\n    const boundaryIndex = direction === \"left\" ? leadingIndex : trailingIndex;\n\n    const targetIndex = getTargetIndex(\n      appState,\n      elements,\n      boundaryIndex,\n      direction,\n    );\n\n    if (targetIndex === -1 || boundaryIndex === targetIndex) {\n      return;\n    }\n\n    const leadingElements =\n      direction === \"left\"\n        ? elements.slice(0, targetIndex)\n        : elements.slice(0, leadingIndex);\n    const targetElements = elements.slice(leadingIndex, trailingIndex + 1);\n    const displacedElements =\n      direction === \"left\"\n        ? elements.slice(targetIndex, leadingIndex)\n        : elements.slice(trailingIndex + 1, targetIndex + 1);\n    const trailingElements =\n      direction === \"left\"\n        ? elements.slice(trailingIndex + 1)\n        : elements.slice(targetIndex + 1);\n\n    elements =\n      direction === \"left\"\n        ? [\n            ...leadingElements,\n            ...targetElements,\n            ...displacedElements,\n            ...trailingElements,\n          ]\n        : [\n            ...leadingElements,\n            ...displacedElements,\n            ...targetElements,\n            ...trailingElements,\n          ];\n  });\n\n  return elements.map((element) => {\n    if (targetElementsMap[element.id]) {\n      return bumpVersion(element);\n    }\n    return element;\n  });\n};\n\nconst shiftElementsToEnd = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  direction: \"left\" | \"right\",\n) => {\n  const indicesToMove = getIndicesToMove(elements, appState);\n  const targetElementsMap = getTargetElementsMap(elements, indicesToMove);\n  const displacedElements: ExcalidrawElement[] = [];\n\n  let leadingIndex: number;\n  let trailingIndex: number;\n  if (direction === \"left\") {\n    if (appState.editingGroupId) {\n      const groupElements = getElementsInGroup(\n        elements,\n        appState.editingGroupId,\n      );\n      if (!groupElements.length) {\n        return elements;\n      }\n      leadingIndex = elements.indexOf(groupElements[0]);\n    } else {\n      leadingIndex = 0;\n    }\n\n    trailingIndex = indicesToMove[indicesToMove.length - 1];\n  } else {\n    if (appState.editingGroupId) {\n      const groupElements = getElementsInGroup(\n        elements,\n        appState.editingGroupId,\n      );\n      if (!groupElements.length) {\n        return elements;\n      }\n      trailingIndex = elements.indexOf(groupElements[groupElements.length - 1]);\n    } else {\n      trailingIndex = elements.length - 1;\n    }\n\n    leadingIndex = indicesToMove[0];\n  }\n\n  for (let index = leadingIndex; index < trailingIndex + 1; index++) {\n    if (!indicesToMove.includes(index)) {\n      displacedElements.push(elements[index]);\n    }\n  }\n\n  const targetElements = Object.values(targetElementsMap).map((element) => {\n    return bumpVersion(element);\n  });\n\n  const leadingElements = elements.slice(0, leadingIndex);\n  const trailingElements = elements.slice(trailingIndex + 1);\n\n  return direction === \"left\"\n    ? [\n        ...leadingElements,\n        ...targetElements,\n        ...displacedElements,\n        ...trailingElements,\n      ]\n    : [\n        ...leadingElements,\n        ...displacedElements,\n        ...targetElements,\n        ...trailingElements,\n      ];\n};\n\n// public API\n// -----------------------------------------------------------------------------\n\nexport const moveOneLeft = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return shiftElements(appState, elements, \"left\");\n};\n\nexport const moveOneRight = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return shiftElements(appState, elements, \"right\");\n};\n\nexport const moveAllLeft = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return shiftElementsToEnd(elements, appState, \"left\");\n};\n\nexport const moveAllRight = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return shiftElementsToEnd(elements, appState, \"right\");\n};\n","import React from \"react\";\nimport {\n  moveOneLeft,\n  moveOneRight,\n  moveAllLeft,\n  moveAllRight,\n} from \"../zindex\";\nimport { KEYS, isDarwin, CODES } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport {\n  SendBackwardIcon,\n  BringToFrontIcon,\n  SendToBackIcon,\n  BringForwardIcon,\n} from \"../components/icons\";\n\nexport const actionSendBackward = register({\n  name: \"sendBackward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveOneLeft(elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendBackward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] &&\n    !event.shiftKey &&\n    event.code === CODES.BRACKET_LEFT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendBackward\")} — ${getShortcutKey(\"CtrlOrCmd+[\")}`}\n    >\n      <SendBackwardIcon theme={appState.theme} />\n    </button>\n  ),\n});\n\nexport const actionBringForward = register({\n  name: \"bringForward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveOneRight(elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringForward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] &&\n    !event.shiftKey &&\n    event.code === CODES.BRACKET_RIGHT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.bringForward\")} — ${getShortcutKey(\"CtrlOrCmd+]\")}`}\n    >\n      <BringForwardIcon theme={appState.theme} />\n    </button>\n  ),\n});\n\nexport const actionSendToBack = register({\n  name: \"sendToBack\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveAllLeft(elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendToBack\",\n  keyTest: (event) =>\n    isDarwin\n      ? event[KEYS.CTRL_OR_CMD] &&\n        event.altKey &&\n        event.code === CODES.BRACKET_LEFT\n      : event[KEYS.CTRL_OR_CMD] &&\n        event.shiftKey &&\n        event.code === CODES.BRACKET_LEFT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendToBack\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+[\")\n      }`}\n    >\n      <SendToBackIcon theme={appState.theme} />\n    </button>\n  ),\n});\n\nexport const actionBringToFront = register({\n  name: \"bringToFront\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveAllRight(elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringToFront\",\n  keyTest: (event) =>\n    isDarwin\n      ? event[KEYS.CTRL_OR_CMD] &&\n        event.altKey &&\n        event.code === CODES.BRACKET_RIGHT\n      : event[KEYS.CTRL_OR_CMD] &&\n        event.shiftKey &&\n        event.code === CODES.BRACKET_RIGHT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={(event) => updateData(null)}\n      title={`${t(\"labels.bringToFront\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+]\")\n      }`}\n    >\n      <BringToFrontIcon theme={appState.theme} />\n    </button>\n  ),\n});\n","import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { selectGroupsForSelectedElements } from \"../groups\";\nimport { getNonDeletedElements, isTextElement } from \"../element\";\n\nexport const actionSelectAll = register({\n  name: \"selectAll\",\n  perform: (elements, appState) => {\n    if (appState.editingLinearElement) {\n      return false;\n    }\n    return {\n      appState: selectGroupsForSelectedElements(\n        {\n          ...appState,\n          editingGroupId: null,\n          selectedElementIds: elements.reduce((map, element) => {\n            if (\n              !element.isDeleted &&\n              !(isTextElement(element) && element.containerId)\n            ) {\n              map[element.id] = true;\n            }\n            return map;\n          }, {} as any),\n        },\n        getNonDeletedElements(elements),\n      ),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.selectAll\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.A,\n});\n","import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { duplicateElement, getNonDeletedElements } from \"../element\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { clone } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { arrayToMap, getShortcutKey } from \"../utils\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport {\n  selectGroupsForSelectedElements,\n  getSelectedGroupForElement,\n  getElementsInGroup,\n} from \"../groups\";\nimport { AppState } from \"../types\";\nimport { fixBindingsAfterDuplication } from \"../element/binding\";\nimport { ActionResult } from \"./types\";\nimport { GRID_SIZE } from \"../constants\";\nimport { bindTextToShapeAfterDuplication } from \"../element/textElement\";\nimport { isBoundToContainer } from \"../element/typeChecks\";\n\nexport const actionDuplicateSelection = register({\n  name: \"duplicateSelection\",\n  perform: (elements, appState) => {\n    // duplicate selected point(s) if editing a line\n    if (appState.editingLinearElement) {\n      const ret = LinearElementEditor.duplicateSelectedPoints(appState);\n\n      if (!ret) {\n        return false;\n      }\n\n      return {\n        elements,\n        appState: ret.appState,\n        commitToHistory: true,\n      };\n    }\n\n    return {\n      ...duplicateElements(elements, appState),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.duplicateSelection\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.D,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={clone}\n      title={`${t(\"labels.duplicateSelection\")} — ${getShortcutKey(\n        \"CtrlOrCmd+D\",\n      )}`}\n      aria-label={t(\"labels.duplicateSelection\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nconst duplicateElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n): Partial<ActionResult> => {\n  const groupIdMap = new Map();\n  const newElements: ExcalidrawElement[] = [];\n  const oldElements: ExcalidrawElement[] = [];\n  const oldIdToDuplicatedId = new Map();\n\n  const duplicateAndOffsetElement = (element: ExcalidrawElement) => {\n    const newElement = duplicateElement(\n      appState.editingGroupId,\n      groupIdMap,\n      element,\n      {\n        x: element.x + GRID_SIZE / 2,\n        y: element.y + GRID_SIZE / 2,\n      },\n    );\n    oldIdToDuplicatedId.set(element.id, newElement.id);\n    oldElements.push(element);\n    newElements.push(newElement);\n    return newElement;\n  };\n\n  const finalElements: ExcalidrawElement[] = [];\n\n  let index = 0;\n  const selectedElementIds = arrayToMap(\n    getSelectedElements(elements, appState, true),\n  );\n  while (index < elements.length) {\n    const element = elements[index];\n    if (selectedElementIds.get(element.id)) {\n      if (element.groupIds.length) {\n        const groupId = getSelectedGroupForElement(appState, element);\n        // if group selected, duplicate it atomically\n        if (groupId) {\n          const groupElements = getElementsInGroup(elements, groupId);\n          finalElements.push(\n            ...groupElements,\n            ...groupElements.map((element) =>\n              duplicateAndOffsetElement(element),\n            ),\n          );\n          index = index + groupElements.length;\n          continue;\n        }\n      }\n      finalElements.push(element, duplicateAndOffsetElement(element));\n    } else {\n      finalElements.push(element);\n    }\n    index++;\n  }\n  bindTextToShapeAfterDuplication(\n    finalElements,\n    oldElements,\n    oldIdToDuplicatedId,\n  );\n  fixBindingsAfterDuplication(finalElements, oldElements, oldIdToDuplicatedId);\n\n  return {\n    elements: finalElements,\n    appState: selectGroupsForSelectedElements(\n      {\n        ...appState,\n        selectedGroupIds: {},\n        selectedElementIds: newElements.reduce((acc, element) => {\n          if (!isBoundToContainer(element)) {\n            acc[element.id] = true;\n          }\n          return acc;\n        }, {} as any),\n      },\n      getNonDeletedElements(finalElements),\n    ),\n  };\n};\n","import { KEYS } from \"../keys\";\nimport { isInvisiblySmallElement } from \"../element\";\nimport { resetCursor } from \"../utils\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { done } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { isPathALoop } from \"../math\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport Scene from \"../scene/Scene\";\nimport {\n  maybeBindLinearElement,\n  bindOrUnbindLinearElement,\n} from \"../element/binding\";\nimport { isBindingElement } from \"../element/typeChecks\";\n\nexport const actionFinalize = register({\n  name: \"finalize\",\n  perform: (elements, appState, _, { canvas, focusContainer }) => {\n    if (appState.editingLinearElement) {\n      const { elementId, startBindingElement, endBindingElement } =\n        appState.editingLinearElement;\n      const element = LinearElementEditor.getElement(elementId);\n\n      if (element) {\n        if (isBindingElement(element)) {\n          bindOrUnbindLinearElement(\n            element,\n            startBindingElement,\n            endBindingElement,\n          );\n        }\n        return {\n          elements:\n            element.points.length < 2 || isInvisiblySmallElement(element)\n              ? elements.filter((el) => el.id !== element.id)\n              : undefined,\n          appState: {\n            ...appState,\n            editingLinearElement: null,\n          },\n          commitToHistory: true,\n        };\n      }\n    }\n\n    let newElements = elements;\n\n    if (appState.pendingImageElement) {\n      mutateElement(appState.pendingImageElement, { isDeleted: true }, false);\n    }\n\n    if (window.document.activeElement instanceof HTMLElement) {\n      focusContainer();\n    }\n\n    const multiPointElement = appState.multiElement\n      ? appState.multiElement\n      : appState.editingElement?.type === \"freedraw\"\n      ? appState.editingElement\n      : null;\n\n    if (multiPointElement) {\n      // pen and mouse have hover\n      if (\n        multiPointElement.type !== \"freedraw\" &&\n        appState.lastPointerDownWith !== \"touch\"\n      ) {\n        const { points, lastCommittedPoint } = multiPointElement;\n        if (\n          !lastCommittedPoint ||\n          points[points.length - 1] !== lastCommittedPoint\n        ) {\n          mutateElement(multiPointElement, {\n            points: multiPointElement.points.slice(0, -1),\n          });\n        }\n      }\n      if (isInvisiblySmallElement(multiPointElement)) {\n        newElements = newElements.slice(0, -1);\n      }\n\n      // If the multi point line closes the loop,\n      // set the last point to first point.\n      // This ensures that loop remains closed at different scales.\n      const isLoop = isPathALoop(multiPointElement.points, appState.zoom.value);\n      if (\n        multiPointElement.type === \"line\" ||\n        multiPointElement.type === \"freedraw\"\n      ) {\n        if (isLoop) {\n          const linePoints = multiPointElement.points;\n          const firstPoint = linePoints[0];\n          mutateElement(multiPointElement, {\n            points: linePoints.map((point, index) =>\n              index === linePoints.length - 1\n                ? ([firstPoint[0], firstPoint[1]] as const)\n                : point,\n            ),\n          });\n        }\n      }\n\n      if (\n        isBindingElement(multiPointElement) &&\n        !isLoop &&\n        multiPointElement.points.length > 1\n      ) {\n        const [x, y] = LinearElementEditor.getPointAtIndexGlobalCoordinates(\n          multiPointElement,\n          -1,\n        );\n        maybeBindLinearElement(\n          multiPointElement,\n          appState,\n          Scene.getScene(multiPointElement)!,\n          { x, y },\n        );\n      }\n\n      if (!appState.elementLocked && appState.elementType !== \"freedraw\") {\n        appState.selectedElementIds[multiPointElement.id] = true;\n      }\n    }\n\n    if (\n      (!appState.elementLocked && appState.elementType !== \"freedraw\") ||\n      !multiPointElement\n    ) {\n      resetCursor(canvas);\n    }\n\n    return {\n      elements: newElements,\n      appState: {\n        ...appState,\n        elementType:\n          (appState.elementLocked || appState.elementType === \"freedraw\") &&\n          multiPointElement\n            ? appState.elementType\n            : \"selection\",\n        draggingElement: null,\n        multiElement: null,\n        editingElement: null,\n        startBoundElement: null,\n        suggestedBindings: [],\n        selectedElementIds:\n          multiPointElement &&\n          !appState.elementLocked &&\n          appState.elementType !== \"freedraw\"\n            ? {\n                ...appState.selectedElementIds,\n                [multiPointElement.id]: true,\n              }\n            : appState.selectedElementIds,\n        pendingImageElement: null,\n      },\n      commitToHistory: appState.elementType === \"freedraw\",\n    };\n  },\n  keyTest: (event, appState) =>\n    (event.key === KEYS.ESCAPE &&\n      (appState.editingLinearElement !== null ||\n        (!appState.draggingElement && appState.multiElement === null))) ||\n    ((event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) &&\n      appState.multiElement !== null),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={done}\n      title={t(\"buttons.done\")}\n      aria-label={t(\"buttons.done\")}\n      onClick={updateData}\n      visible={appState.multiElement != null}\n    />\n  ),\n});\n","import \"./TextInput.scss\";\n\nimport React, { useState } from \"react\";\nimport { focusNearestParent } from \"../utils\";\n\nimport \"./ProjectName.scss\";\nimport { useExcalidrawContainer } from \"./App\";\n\ntype Props = {\n  value: string;\n  onChange: (value: string) => void;\n  label: string;\n  isNameEditable: boolean;\n};\n\nexport const ProjectName = (props: Props) => {\n  const { id } = useExcalidrawContainer();\n  const [fileName, setFileName] = useState<string>(props.value);\n\n  const handleBlur = (event: any) => {\n    focusNearestParent(event.target);\n    const value = event.target.value;\n    if (value !== props.value) {\n      props.onChange(value);\n    }\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      if (event.nativeEvent.isComposing || event.keyCode === 229) {\n        return;\n      }\n      event.currentTarget.blur();\n    }\n  };\n\n  return (\n    <div className=\"ProjectName\">\n      <label className=\"ProjectName-label\" htmlFor=\"filename\">\n        {`${props.label}${props.isNameEditable ? \"\" : \":\"}`}\n      </label>\n      {props.isNameEditable ? (\n        <input\n          type=\"text\"\n          className=\"TextInput\"\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          id={`${id}-filename`}\n          value={fileName}\n          onChange={(event) => setFileName(event.target.value)}\n        />\n      ) : (\n        <span className=\"TextInput TextInput--readonly\" id={`${id}-filename`}>\n          {props.value}\n        </span>\n      )}\n    </div>\n  );\n};\n","import colors from \"./colors\";\nimport { AppState } from \"./types\";\n\nexport const getClientColors = (clientId: string, appState: AppState) => {\n  if (appState?.collaborators) {\n    const currentUser = appState.collaborators.get(clientId);\n    if (currentUser?.color) {\n      return currentUser.color;\n    }\n  }\n  // Naive way of getting an integer out of the clientId\n  const sum = clientId.split(\"\").reduce((a, str) => a + str.charCodeAt(0), 0);\n\n  // Skip transparent background.\n  const backgrounds = colors.elementBackground.slice(1);\n  const strokes = colors.elementStroke.slice(1);\n  return {\n    background: backgrounds[sum % backgrounds.length],\n    stroke: strokes[sum % strokes.length],\n  };\n};\n\nexport const getClientInitials = (username?: string | null) => {\n  if (!username) {\n    return \"?\";\n  }\n  const names = username.trim().split(\" \");\n\n  if (names.length < 2) {\n    return names[0].substring(0, 2).toUpperCase();\n  }\n\n  const firstName = names[0];\n  const lastName = names[names.length - 1];\n\n  return (firstName[0] + lastName[0]).toUpperCase();\n};\n","import { AppState, ExcalidrawProps, Point } from \"../types\";\nimport {\n  getShortcutKey,\n  sceneCoordsToViewportCoords,\n  viewportCoordsToSceneCoords,\n  wrapEvent,\n} from \"../utils\";\nimport { mutateElement } from \"./mutateElement\";\nimport { NonDeletedExcalidrawElement } from \"./types\";\n\nimport { register } from \"../actions/register\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { editIcon, link, trash } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport clsx from \"clsx\";\nimport { KEYS } from \"../keys\";\nimport { DEFAULT_LINK_SIZE } from \"../renderer/renderElement\";\nimport { rotate } from \"../math\";\nimport { EVENT, HYPERLINK_TOOLTIP_DELAY, MIME_TYPES } from \"../constants\";\nimport { Bounds } from \"./bounds\";\nimport { getTooltipDiv, updateTooltipPosition } from \"../components/Tooltip\";\nimport { getSelectedElements } from \"../scene\";\nimport { isPointHittingElementBoundingBox } from \"./collision\";\nimport { getElementAbsoluteCoords } from \"./\";\n\nimport \"./Hyperlink.scss\";\nimport { trackEvent } from \"../analytics\";\n\nconst CONTAINER_WIDTH = 320;\nconst SPACE_BOTTOM = 85;\nconst CONTAINER_PADDING = 5;\nconst CONTAINER_HEIGHT = 42;\nconst AUTO_HIDE_TIMEOUT = 500;\n\nexport const EXTERNAL_LINK_IMG = document.createElement(\"img\");\nEXTERNAL_LINK_IMG.src = `data:${MIME_TYPES.svg}, ${encodeURIComponent(\n  `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#1971c2\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-external-link\"><path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path><polyline points=\"15 3 21 3 21 9\"></polyline><line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line></svg>`,\n)}`;\n\nlet IS_HYPERLINK_TOOLTIP_VISIBLE = false;\n\nexport const Hyperlink = ({\n  element,\n  appState,\n  setAppState,\n  onLinkOpen,\n}: {\n  element: NonDeletedExcalidrawElement;\n  appState: AppState;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  onLinkOpen: ExcalidrawProps[\"onLinkOpen\"];\n}) => {\n  const linkVal = element.link || \"\";\n\n  const [inputVal, setInputVal] = useState(linkVal);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isEditing = appState.showHyperlinkPopup === \"editor\" || !linkVal;\n\n  const handleSubmit = useCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    const link = normalizeLink(inputRef.current.value);\n\n    if (!element.link && link) {\n      trackEvent(\"hyperlink\", \"create\");\n    }\n\n    mutateElement(element, { link });\n    setAppState({ showHyperlinkPopup: \"info\" });\n  }, [element, setAppState]);\n\n  useLayoutEffect(() => {\n    return () => {\n      handleSubmit();\n    };\n  }, [handleSubmit]);\n\n  useEffect(() => {\n    let timeoutId: number | null = null;\n    const handlePointerMove = (event: PointerEvent) => {\n      if (isEditing) {\n        return;\n      }\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      const shouldHide = shouldHideLinkPopup(element, appState, [\n        event.clientX,\n        event.clientY,\n      ]) as boolean;\n      if (shouldHide) {\n        timeoutId = window.setTimeout(() => {\n          setAppState({ showHyperlinkPopup: false });\n        }, AUTO_HIDE_TIMEOUT);\n      }\n    };\n    window.addEventListener(EVENT.POINTER_MOVE, handlePointerMove, false);\n    return () => {\n      window.removeEventListener(EVENT.POINTER_MOVE, handlePointerMove, false);\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [appState, element, isEditing, setAppState]);\n\n  const handleRemove = useCallback(() => {\n    trackEvent(\"hyperlink\", \"delete\");\n    mutateElement(element, { link: null });\n    if (isEditing) {\n      inputRef.current!.value = \"\";\n    }\n    setAppState({ showHyperlinkPopup: false });\n  }, [setAppState, element, isEditing]);\n\n  const onEdit = () => {\n    trackEvent(\"hyperlink\", \"edit\", \"popup-ui\");\n    setAppState({ showHyperlinkPopup: \"editor\" });\n  };\n  const { x, y } = getCoordsForPopover(element, appState);\n  if (\n    appState.draggingElement ||\n    appState.resizingElement ||\n    appState.isRotating ||\n    appState.openMenu\n  ) {\n    return null;\n  }\n  return (\n    <div\n      className=\"excalidraw-hyperlinkContainer\"\n      style={{\n        top: `${y}px`,\n        left: `${x}px`,\n        width: CONTAINER_WIDTH,\n        padding: CONTAINER_PADDING,\n      }}\n    >\n      {isEditing ? (\n        <input\n          className={clsx(\"excalidraw-hyperlinkContainer-input\")}\n          placeholder=\"Type or paste your link here\"\n          ref={inputRef}\n          value={inputVal}\n          onChange={(event) => setInputVal(event.target.value)}\n          autoFocus\n          onKeyDown={(event) => {\n            event.stopPropagation();\n            // prevent cmd/ctrl+k shortcut when editing link\n            if (event[KEYS.CTRL_OR_CMD] && event.key === KEYS.K) {\n              event.preventDefault();\n            }\n            if (event.key === KEYS.ENTER || event.key === KEYS.ESCAPE) {\n              handleSubmit();\n            }\n          }}\n        />\n      ) : (\n        <a\n          href={element.link || \"\"}\n          className={clsx(\"excalidraw-hyperlinkContainer-link\", {\n            \"d-none\": isEditing,\n          })}\n          target={isLocalLink(element.link) ? \"_self\" : \"_blank\"}\n          onClick={(event) => {\n            if (element.link && onLinkOpen) {\n              const customEvent = wrapEvent(\n                EVENT.EXCALIDRAW_LINK,\n                event.nativeEvent,\n              );\n              onLinkOpen(element, customEvent);\n              if (customEvent.defaultPrevented) {\n                event.preventDefault();\n              }\n            }\n          }}\n          rel=\"noopener noreferrer\"\n        >\n          {element.link}\n        </a>\n      )}\n      <div className=\"excalidraw-hyperlinkContainer__buttons\">\n        {!isEditing && (\n          <ToolButton\n            type=\"button\"\n            title={t(\"buttons.edit\")}\n            aria-label={t(\"buttons.edit\")}\n            label={t(\"buttons.edit\")}\n            onClick={onEdit}\n            className=\"excalidraw-hyperlinkContainer--edit\"\n            icon={editIcon}\n          />\n        )}\n\n        {linkVal && (\n          <ToolButton\n            type=\"button\"\n            title={t(\"buttons.remove\")}\n            aria-label={t(\"buttons.remove\")}\n            label={t(\"buttons.remove\")}\n            onClick={handleRemove}\n            className=\"excalidraw-hyperlinkContainer--remove\"\n            icon={trash}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst getCoordsForPopover = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n) => {\n  const [x1, y1] = getElementAbsoluteCoords(element);\n  const { x: viewportX, y: viewportY } = sceneCoordsToViewportCoords(\n    { sceneX: x1 + element.width / 2, sceneY: y1 },\n    appState,\n  );\n  const x = viewportX - appState.offsetLeft - CONTAINER_WIDTH / 2;\n  const y = viewportY - appState.offsetTop - SPACE_BOTTOM;\n  return { x, y };\n};\n\nexport const normalizeLink = (link: string) => {\n  link = link.trim();\n  if (link) {\n    // prefix with protocol if not fully-qualified\n    if (!link.includes(\"://\") && !/^[[\\\\/]/.test(link)) {\n      link = `https://${link}`;\n    }\n  }\n  return link;\n};\n\nexport const isLocalLink = (link: string | null) => {\n  return !!(link?.includes(location.origin) || link?.startsWith(\"/\"));\n};\n\nexport const actionLink = register({\n  name: \"hyperlink\",\n  perform: (elements, appState) => {\n    if (appState.showHyperlinkPopup === \"editor\") {\n      return false;\n    }\n\n    return {\n      elements,\n      appState: {\n        ...appState,\n        showHyperlinkPopup: \"editor\",\n        openMenu: null,\n      },\n      commitToHistory: true,\n    };\n  },\n  trackEvent: (action, source) => {\n    trackEvent(\"hyperlink\", \"edit\", source);\n  },\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.K,\n  contextItemLabel: (elements, appState) =>\n    getContextMenuLabel(elements, appState),\n  contextItemPredicate: (elements, appState) => {\n    const selectedElements = getSelectedElements(elements, appState);\n    return selectedElements.length === 1;\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const selectedElements = getSelectedElements(elements, appState);\n\n    return (\n      <ToolButton\n        type=\"button\"\n        icon={link}\n        aria-label={t(getContextMenuLabel(elements, appState))}\n        title={`${t(\"labels.link.label\")} - ${getShortcutKey(\"CtrlOrCmd+K\")}`}\n        onClick={() => updateData(null)}\n        selected={selectedElements.length === 1 && !!selectedElements[0].link}\n      />\n    );\n  },\n});\n\nexport const getContextMenuLabel = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  const selectedElements = getSelectedElements(elements, appState);\n  const label = selectedElements[0]!.link\n    ? \"labels.link.edit\"\n    : \"labels.link.create\";\n  return label;\n};\nexport const getLinkHandleFromCoords = (\n  [x1, y1, x2, y2]: Bounds,\n  angle: number,\n  appState: AppState,\n): [x: number, y: number, width: number, height: number] => {\n  const size = DEFAULT_LINK_SIZE;\n  const linkWidth = size / appState.zoom.value;\n  const linkHeight = size / appState.zoom.value;\n  const linkMarginY = size / appState.zoom.value;\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n  const centeringOffset = (size - 8) / (2 * appState.zoom.value);\n  const dashedLineMargin = 4 / appState.zoom.value;\n\n  // Same as `ne` resize handle\n  const x = x2 + dashedLineMargin - centeringOffset;\n  const y = y1 - dashedLineMargin - linkMarginY + centeringOffset;\n\n  const [rotatedX, rotatedY] = rotate(\n    x + linkWidth / 2,\n    y + linkHeight / 2,\n    centerX,\n    centerY,\n    angle,\n  );\n  return [\n    rotatedX - linkWidth / 2,\n    rotatedY - linkHeight / 2,\n    linkWidth,\n    linkHeight,\n  ];\n};\n\nexport const isPointHittingLinkIcon = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  [x, y]: Point,\n  isMobile: boolean,\n) => {\n  const threshold = 4 / appState.zoom.value;\n  if (\n    !isMobile &&\n    appState.viewModeEnabled &&\n    isPointHittingElementBoundingBox(element, [x, y], threshold)\n  ) {\n    return true;\n  }\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n\n  const [linkX, linkY, linkWidth, linkHeight] = getLinkHandleFromCoords(\n    [x1, y1, x2, y2],\n    element.angle,\n    appState,\n  );\n  const hitLink =\n    x > linkX - threshold &&\n    x < linkX + threshold + linkWidth &&\n    y > linkY - threshold &&\n    y < linkY + linkHeight + threshold;\n  return hitLink;\n};\n\nlet HYPERLINK_TOOLTIP_TIMEOUT_ID: number | null = null;\nexport const showHyperlinkTooltip = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n) => {\n  if (HYPERLINK_TOOLTIP_TIMEOUT_ID) {\n    clearTimeout(HYPERLINK_TOOLTIP_TIMEOUT_ID);\n  }\n  HYPERLINK_TOOLTIP_TIMEOUT_ID = window.setTimeout(\n    () => renderTooltip(element, appState),\n    HYPERLINK_TOOLTIP_DELAY,\n  );\n};\n\nconst renderTooltip = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n) => {\n  if (!element.link) {\n    return;\n  }\n\n  const tooltipDiv = getTooltipDiv();\n\n  tooltipDiv.classList.add(\"excalidraw-tooltip--visible\");\n  tooltipDiv.style.maxWidth = \"20rem\";\n  tooltipDiv.textContent = element.link;\n\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n\n  const [linkX, linkY, linkWidth, linkHeight] = getLinkHandleFromCoords(\n    [x1, y1, x2, y2],\n    element.angle,\n    appState,\n  );\n\n  const linkViewportCoords = sceneCoordsToViewportCoords(\n    { sceneX: linkX, sceneY: linkY },\n    appState,\n  );\n\n  updateTooltipPosition(\n    tooltipDiv,\n    {\n      left: linkViewportCoords.x,\n      top: linkViewportCoords.y,\n      width: linkWidth,\n      height: linkHeight,\n    },\n    \"top\",\n  );\n  trackEvent(\"hyperlink\", \"tooltip\", \"link-icon\");\n\n  IS_HYPERLINK_TOOLTIP_VISIBLE = true;\n};\nexport const hideHyperlinkToolip = () => {\n  if (HYPERLINK_TOOLTIP_TIMEOUT_ID) {\n    clearTimeout(HYPERLINK_TOOLTIP_TIMEOUT_ID);\n  }\n  if (IS_HYPERLINK_TOOLTIP_VISIBLE) {\n    IS_HYPERLINK_TOOLTIP_VISIBLE = false;\n    getTooltipDiv().classList.remove(\"excalidraw-tooltip--visible\");\n  }\n};\n\nexport const shouldHideLinkPopup = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  [clientX, clientY]: Point,\n): Boolean => {\n  const { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n    { clientX, clientY },\n    appState,\n  );\n\n  const threshold = 15 / appState.zoom.value;\n  // hitbox to prevent hiding when hovered in element bounding box\n  if (isPointHittingElementBoundingBox(element, [sceneX, sceneY], threshold)) {\n    return false;\n  }\n  const [x1, y1, x2] = getElementAbsoluteCoords(element);\n  // hit box to prevent hiding when hovered in the vertical area between element and popover\n  if (\n    sceneX >= x1 &&\n    sceneX <= x2 &&\n    sceneY >= y1 - SPACE_BOTTOM &&\n    sceneY <= y1\n  ) {\n    return false;\n  }\n  // hit box to prevent hiding when hovered around popover within threshold\n  const { x: popoverX, y: popoverY } = getCoordsForPopover(element, appState);\n\n  if (\n    clientX >= popoverX - threshold &&\n    clientX <= popoverX + CONTAINER_WIDTH + CONTAINER_PADDING * 2 + threshold &&\n    clientY >= popoverY - threshold &&\n    clientY <= popoverY + threshold + CONTAINER_PADDING * 2 + CONTAINER_HEIGHT\n  ) {\n    return false;\n  }\n  return true;\n};\n","import { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport oc from \"open-color\";\n\nimport { AppState, BinaryFiles, Zoom } from \"../types\";\nimport {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  ExcalidrawLinearElement,\n  NonDeleted,\n  GroupId,\n  ExcalidrawBindableElement,\n} from \"../element/types\";\nimport {\n  getElementAbsoluteCoords,\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  getTransformHandlesFromCoords,\n  getTransformHandles,\n  getElementBounds,\n  getCommonBounds,\n} from \"../element\";\n\nimport { roundRect } from \"./roundRect\";\nimport { RenderConfig } from \"../scene/types\";\nimport {\n  getScrollBars,\n  SCROLLBAR_COLOR,\n  SCROLLBAR_WIDTH,\n} from \"../scene/scrollbars\";\nimport { getSelectedElements } from \"../scene/selection\";\n\nimport { renderElement, renderElementToSvg } from \"./renderElement\";\nimport { getClientColors } from \"../clients\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport {\n  isSelectedViaGroup,\n  getSelectedGroupIds,\n  getElementsInGroup,\n} from \"../groups\";\nimport { maxBindingGap } from \"../element/collision\";\nimport {\n  SuggestedBinding,\n  SuggestedPointBinding,\n  isBindingEnabled,\n} from \"../element/binding\";\nimport {\n  TransformHandles,\n  TransformHandleType,\n} from \"../element/transformHandles\";\nimport { viewportCoordsToSceneCoords, supportsEmoji } from \"../utils\";\nimport { UserIdleState } from \"../types\";\nimport { THEME_FILTER } from \"../constants\";\nimport {\n  EXTERNAL_LINK_IMG,\n  getLinkHandleFromCoords,\n} from \"../element/Hyperlink\";\n\nconst hasEmojiSupport = supportsEmoji();\n\nconst strokeRectWithRotation = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n  fill: boolean = false,\n) => {\n  context.save();\n  context.translate(cx, cy);\n  context.rotate(angle);\n  if (fill) {\n    context.fillRect(x - cx, y - cy, width, height);\n  }\n  context.strokeRect(x - cx, y - cy, width, height);\n  context.restore();\n};\n\nconst strokeDiamondWithRotation = (\n  context: CanvasRenderingContext2D,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n) => {\n  context.save();\n  context.translate(cx, cy);\n  context.rotate(angle);\n  context.beginPath();\n  context.moveTo(0, height / 2);\n  context.lineTo(width / 2, 0);\n  context.lineTo(0, -height / 2);\n  context.lineTo(-width / 2, 0);\n  context.closePath();\n  context.stroke();\n  context.restore();\n};\n\nconst strokeEllipseWithRotation = (\n  context: CanvasRenderingContext2D,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n) => {\n  context.beginPath();\n  context.ellipse(cx, cy, width / 2, height / 2, angle, 0, Math.PI * 2);\n  context.stroke();\n};\n\nconst fillCircle = (\n  context: CanvasRenderingContext2D,\n  cx: number,\n  cy: number,\n  radius: number,\n) => {\n  context.beginPath();\n  context.arc(cx, cy, radius, 0, Math.PI * 2);\n  context.fill();\n  context.stroke();\n};\n\nconst strokeGrid = (\n  context: CanvasRenderingContext2D,\n  gridSize: number,\n  offsetX: number,\n  offsetY: number,\n  width: number,\n  height: number,\n) => {\n  context.save();\n  context.strokeStyle = \"rgba(0,0,0,0.1)\";\n  context.beginPath();\n  for (let x = offsetX; x < offsetX + width + gridSize * 2; x += gridSize) {\n    context.moveTo(x, offsetY - gridSize);\n    context.lineTo(x, offsetY + height + gridSize * 2);\n  }\n  for (let y = offsetY; y < offsetY + height + gridSize * 2; y += gridSize) {\n    context.moveTo(offsetX - gridSize, y);\n    context.lineTo(offsetX + width + gridSize * 2, y);\n  }\n  context.stroke();\n  context.restore();\n};\n\nconst renderLinearPointHandles = (\n  context: CanvasRenderingContext2D,\n  appState: AppState,\n  renderConfig: RenderConfig,\n  element: NonDeleted<ExcalidrawLinearElement>,\n) => {\n  context.save();\n  context.translate(renderConfig.scrollX, renderConfig.scrollY);\n  context.lineWidth = 1 / renderConfig.zoom.value;\n\n  LinearElementEditor.getPointsGlobalCoordinates(element).forEach(\n    (point, idx) => {\n      context.strokeStyle = \"red\";\n      context.setLineDash([]);\n      context.fillStyle =\n        appState.editingLinearElement?.selectedPointsIndices?.includes(idx)\n          ? \"rgba(255, 127, 127, 0.9)\"\n          : \"rgba(255, 255, 255, 0.9)\";\n      const { POINT_HANDLE_SIZE } = LinearElementEditor;\n      fillCircle(\n        context,\n        point[0],\n        point[1],\n        POINT_HANDLE_SIZE / 2 / renderConfig.zoom.value,\n      );\n    },\n  );\n  context.restore();\n};\n\nexport const renderScene = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  selectionElement: NonDeletedExcalidrawElement | null,\n  scale: number,\n  rc: RoughCanvas,\n  canvas: HTMLCanvasElement,\n  renderConfig: RenderConfig,\n  // extra options passed to the renderer\n) => {\n  if (canvas === null) {\n    return { atLeastOneVisibleElement: false };\n  }\n\n  const {\n    renderScrollbars = true,\n    renderSelection = true,\n    renderGrid = true,\n    isExporting,\n  } = renderConfig;\n\n  const context = canvas.getContext(\"2d\")!;\n\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.save();\n  context.scale(scale, scale);\n\n  // When doing calculations based on canvas width we should used normalized one\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n\n  if (isExporting && renderConfig.theme === \"dark\") {\n    context.filter = THEME_FILTER;\n  }\n\n  // Paint background\n  if (typeof renderConfig.viewBackgroundColor === \"string\") {\n    const hasTransparence =\n      renderConfig.viewBackgroundColor === \"transparent\" ||\n      renderConfig.viewBackgroundColor.length === 5 || // #RGBA\n      renderConfig.viewBackgroundColor.length === 9 || // #RRGGBBA\n      /(hsla|rgba)\\(/.test(renderConfig.viewBackgroundColor);\n    if (hasTransparence) {\n      context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n    }\n    context.save();\n    context.fillStyle = renderConfig.viewBackgroundColor;\n    context.fillRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n    context.restore();\n  } else {\n    context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n  }\n\n  // Apply zoom\n  context.save();\n  context.scale(renderConfig.zoom.value, renderConfig.zoom.value);\n\n  // Grid\n  if (renderGrid && appState.gridSize) {\n    strokeGrid(\n      context,\n      appState.gridSize,\n      -Math.ceil(renderConfig.zoom.value / appState.gridSize) *\n        appState.gridSize +\n        (renderConfig.scrollX % appState.gridSize),\n      -Math.ceil(renderConfig.zoom.value / appState.gridSize) *\n        appState.gridSize +\n        (renderConfig.scrollY % appState.gridSize),\n      normalizedCanvasWidth / renderConfig.zoom.value,\n      normalizedCanvasHeight / renderConfig.zoom.value,\n    );\n  }\n\n  // Paint visible elements\n  const visibleElements = elements.filter((element) =>\n    isVisibleElement(element, normalizedCanvasWidth, normalizedCanvasHeight, {\n      zoom: renderConfig.zoom,\n      offsetLeft: appState.offsetLeft,\n      offsetTop: appState.offsetTop,\n      scrollX: renderConfig.scrollX,\n      scrollY: renderConfig.scrollY,\n    }),\n  );\n\n  visibleElements.forEach((element) => {\n    try {\n      renderElement(element, rc, context, renderConfig);\n      if (!isExporting) {\n        renderLinkIcon(element, context, appState);\n      }\n    } catch (error: any) {\n      console.error(error);\n    }\n  });\n\n  if (appState.editingLinearElement) {\n    const element = LinearElementEditor.getElement(\n      appState.editingLinearElement.elementId,\n    );\n    if (element) {\n      renderLinearPointHandles(context, appState, renderConfig, element);\n    }\n  }\n\n  // Paint selection element\n  if (selectionElement) {\n    try {\n      renderElement(selectionElement, rc, context, renderConfig);\n    } catch (error: any) {\n      console.error(error);\n    }\n  }\n\n  if (isBindingEnabled(appState)) {\n    appState.suggestedBindings\n      .filter((binding) => binding != null)\n      .forEach((suggestedBinding) => {\n        renderBindingHighlight(context, renderConfig, suggestedBinding!);\n      });\n  }\n\n  // Paint selected elements\n  if (\n    renderSelection &&\n    !appState.multiElement &&\n    !appState.editingLinearElement\n  ) {\n    const selections = elements.reduce((acc, element) => {\n      const selectionColors = [];\n      // local user\n      if (\n        appState.selectedElementIds[element.id] &&\n        !isSelectedViaGroup(appState, element)\n      ) {\n        selectionColors.push(oc.black);\n      }\n      // remote users\n      if (renderConfig.remoteSelectedElementIds[element.id]) {\n        selectionColors.push(\n          ...renderConfig.remoteSelectedElementIds[element.id].map(\n            (socketId) => {\n              const { background } = getClientColors(socketId, appState);\n              return background;\n            },\n          ),\n        );\n      }\n      if (selectionColors.length) {\n        const [elementX1, elementY1, elementX2, elementY2] =\n          getElementAbsoluteCoords(element);\n        acc.push({\n          angle: element.angle,\n          elementX1,\n          elementY1,\n          elementX2,\n          elementY2,\n          selectionColors,\n        });\n      }\n      return acc;\n    }, [] as { angle: number; elementX1: number; elementY1: number; elementX2: number; elementY2: number; selectionColors: string[] }[]);\n\n    const addSelectionForGroupId = (groupId: GroupId) => {\n      const groupElements = getElementsInGroup(elements, groupId);\n      const [elementX1, elementY1, elementX2, elementY2] =\n        getCommonBounds(groupElements);\n      selections.push({\n        angle: 0,\n        elementX1,\n        elementX2,\n        elementY1,\n        elementY2,\n        selectionColors: [oc.black],\n      });\n    };\n\n    for (const groupId of getSelectedGroupIds(appState)) {\n      // TODO: support multiplayer selected group IDs\n      addSelectionForGroupId(groupId);\n    }\n\n    if (appState.editingGroupId) {\n      addSelectionForGroupId(appState.editingGroupId);\n    }\n\n    selections.forEach((selection) =>\n      renderSelectionBorder(context, renderConfig, selection),\n    );\n\n    const locallySelectedElements = getSelectedElements(elements, appState);\n\n    // Paint resize transformHandles\n    context.save();\n    context.translate(renderConfig.scrollX, renderConfig.scrollY);\n    if (locallySelectedElements.length === 1) {\n      context.fillStyle = oc.white;\n      const transformHandles = getTransformHandles(\n        locallySelectedElements[0],\n        renderConfig.zoom,\n        \"mouse\", // when we render we don't know which pointer type so use mouse\n      );\n      if (!appState.viewModeEnabled) {\n        renderTransformHandles(\n          context,\n          renderConfig,\n          transformHandles,\n          locallySelectedElements[0].angle,\n        );\n      }\n    } else if (locallySelectedElements.length > 1 && !appState.isRotating) {\n      const dashedLinePadding = 4 / renderConfig.zoom.value;\n      context.fillStyle = oc.white;\n      const [x1, y1, x2, y2] = getCommonBounds(locallySelectedElements);\n      const initialLineDash = context.getLineDash();\n      context.setLineDash([2 / renderConfig.zoom.value]);\n      const lineWidth = context.lineWidth;\n      context.lineWidth = 1 / renderConfig.zoom.value;\n      strokeRectWithRotation(\n        context,\n        x1 - dashedLinePadding,\n        y1 - dashedLinePadding,\n        x2 - x1 + dashedLinePadding * 2,\n        y2 - y1 + dashedLinePadding * 2,\n        (x1 + x2) / 2,\n        (y1 + y2) / 2,\n        0,\n      );\n      context.lineWidth = lineWidth;\n      context.setLineDash(initialLineDash);\n      const transformHandles = getTransformHandlesFromCoords(\n        [x1, y1, x2, y2],\n        0,\n        renderConfig.zoom,\n        \"mouse\",\n        OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n      );\n      renderTransformHandles(context, renderConfig, transformHandles, 0);\n    }\n    context.restore();\n  }\n\n  // Reset zoom\n  context.restore();\n\n  // Paint remote pointers\n  for (const clientId in renderConfig.remotePointerViewportCoords) {\n    let { x, y } = renderConfig.remotePointerViewportCoords[clientId];\n\n    x -= appState.offsetLeft;\n    y -= appState.offsetTop;\n\n    const width = 9;\n    const height = 14;\n\n    const isOutOfBounds =\n      x < 0 ||\n      x > normalizedCanvasWidth - width ||\n      y < 0 ||\n      y > normalizedCanvasHeight - height;\n\n    x = Math.max(x, 0);\n    x = Math.min(x, normalizedCanvasWidth - width);\n    y = Math.max(y, 0);\n    y = Math.min(y, normalizedCanvasHeight - height);\n\n    const { background, stroke } = getClientColors(clientId, appState);\n\n    context.save();\n    context.strokeStyle = stroke;\n    context.fillStyle = background;\n\n    const userState = renderConfig.remotePointerUserStates[clientId];\n    if (isOutOfBounds || userState === UserIdleState.AWAY) {\n      context.globalAlpha = 0.48;\n    }\n\n    if (\n      renderConfig.remotePointerButton &&\n      renderConfig.remotePointerButton[clientId] === \"down\"\n    ) {\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 3;\n      context.strokeStyle = \"#ffffff88\";\n      context.stroke();\n      context.closePath();\n\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 1;\n      context.strokeStyle = stroke;\n      context.stroke();\n      context.closePath();\n    }\n\n    context.beginPath();\n    context.moveTo(x, y);\n    context.lineTo(x + 1, y + 14);\n    context.lineTo(x + 4, y + 9);\n    context.lineTo(x + 9, y + 10);\n    context.lineTo(x, y);\n    context.fill();\n    context.stroke();\n\n    const username = renderConfig.remotePointerUsernames[clientId];\n\n    let idleState = \"\";\n    if (userState === UserIdleState.AWAY) {\n      idleState = hasEmojiSupport ? \"⚫️\" : ` (${UserIdleState.AWAY})`;\n    } else if (userState === UserIdleState.IDLE) {\n      idleState = hasEmojiSupport ? \"💤\" : ` (${UserIdleState.IDLE})`;\n    } else if (userState === UserIdleState.ACTIVE) {\n      idleState = hasEmojiSupport ? \"🟢\" : \"\";\n    }\n\n    const usernameAndIdleState = `${\n      username ? `${username} ` : \"\"\n    }${idleState}`;\n\n    if (!isOutOfBounds && usernameAndIdleState) {\n      const offsetX = x + width;\n      const offsetY = y + height;\n      const paddingHorizontal = 4;\n      const paddingVertical = 4;\n      const measure = context.measureText(usernameAndIdleState);\n      const measureHeight =\n        measure.actualBoundingBoxDescent + measure.actualBoundingBoxAscent;\n\n      // Border\n      context.fillStyle = stroke;\n      context.fillRect(\n        offsetX - 1,\n        offsetY - 1,\n        measure.width + 2 * paddingHorizontal + 2,\n        measureHeight + 2 * paddingVertical + 2,\n      );\n      // Background\n      context.fillStyle = background;\n      context.fillRect(\n        offsetX,\n        offsetY,\n        measure.width + 2 * paddingHorizontal,\n        measureHeight + 2 * paddingVertical,\n      );\n      context.fillStyle = oc.white;\n\n      context.fillText(\n        usernameAndIdleState,\n        offsetX + paddingHorizontal,\n        offsetY + paddingVertical + measure.actualBoundingBoxAscent,\n      );\n    }\n\n    context.restore();\n    context.closePath();\n  }\n\n  // Paint scrollbars\n  let scrollBars;\n  if (renderScrollbars) {\n    scrollBars = getScrollBars(\n      elements,\n      normalizedCanvasWidth,\n      normalizedCanvasHeight,\n      renderConfig,\n    );\n\n    context.save();\n    context.fillStyle = SCROLLBAR_COLOR;\n    context.strokeStyle = \"rgba(255,255,255,0.8)\";\n    [scrollBars.horizontal, scrollBars.vertical].forEach((scrollBar) => {\n      if (scrollBar) {\n        roundRect(\n          context,\n          scrollBar.x,\n          scrollBar.y,\n          scrollBar.width,\n          scrollBar.height,\n          SCROLLBAR_WIDTH / 2,\n        );\n      }\n    });\n    context.restore();\n  }\n\n  context.restore();\n  return { atLeastOneVisibleElement: visibleElements.length > 0, scrollBars };\n};\n\nconst renderTransformHandles = (\n  context: CanvasRenderingContext2D,\n  renderConfig: RenderConfig,\n  transformHandles: TransformHandles,\n  angle: number,\n): void => {\n  Object.keys(transformHandles).forEach((key) => {\n    const transformHandle = transformHandles[key as TransformHandleType];\n    if (transformHandle !== undefined) {\n      context.save();\n      context.lineWidth = 1 / renderConfig.zoom.value;\n      if (key === \"rotation\") {\n        fillCircle(\n          context,\n          transformHandle[0] + transformHandle[2] / 2,\n          transformHandle[1] + transformHandle[3] / 2,\n          transformHandle[2] / 2,\n        );\n      } else {\n        strokeRectWithRotation(\n          context,\n          transformHandle[0],\n          transformHandle[1],\n          transformHandle[2],\n          transformHandle[3],\n          transformHandle[0] + transformHandle[2] / 2,\n          transformHandle[1] + transformHandle[3] / 2,\n          angle,\n          true, // fill before stroke\n        );\n      }\n      context.restore();\n    }\n  });\n};\n\nconst renderSelectionBorder = (\n  context: CanvasRenderingContext2D,\n  renderConfig: RenderConfig,\n  elementProperties: {\n    angle: number;\n    elementX1: number;\n    elementY1: number;\n    elementX2: number;\n    elementY2: number;\n    selectionColors: string[];\n  },\n) => {\n  const { angle, elementX1, elementY1, elementX2, elementY2, selectionColors } =\n    elementProperties;\n  const elementWidth = elementX2 - elementX1;\n  const elementHeight = elementY2 - elementY1;\n\n  const dashedLinePadding = 4 / renderConfig.zoom.value;\n  const dashWidth = 8 / renderConfig.zoom.value;\n  const spaceWidth = 4 / renderConfig.zoom.value;\n\n  context.save();\n  context.translate(renderConfig.scrollX, renderConfig.scrollY);\n  context.lineWidth = 1 / renderConfig.zoom.value;\n\n  const count = selectionColors.length;\n  for (let index = 0; index < count; ++index) {\n    context.strokeStyle = selectionColors[index];\n    context.setLineDash([\n      dashWidth,\n      spaceWidth + (dashWidth + spaceWidth) * (count - 1),\n    ]);\n    context.lineDashOffset = (dashWidth + spaceWidth) * index;\n    strokeRectWithRotation(\n      context,\n      elementX1 - dashedLinePadding,\n      elementY1 - dashedLinePadding,\n      elementWidth + dashedLinePadding * 2,\n      elementHeight + dashedLinePadding * 2,\n      elementX1 + elementWidth / 2,\n      elementY1 + elementHeight / 2,\n      angle,\n    );\n  }\n  context.restore();\n};\n\nconst renderBindingHighlight = (\n  context: CanvasRenderingContext2D,\n  renderConfig: RenderConfig,\n  suggestedBinding: SuggestedBinding,\n) => {\n  const renderHighlight = Array.isArray(suggestedBinding)\n    ? renderBindingHighlightForSuggestedPointBinding\n    : renderBindingHighlightForBindableElement;\n\n  context.save();\n  context.translate(renderConfig.scrollX, renderConfig.scrollY);\n  renderHighlight(context, suggestedBinding as any);\n\n  context.restore();\n};\n\nconst renderBindingHighlightForBindableElement = (\n  context: CanvasRenderingContext2D,\n  element: ExcalidrawBindableElement,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const width = x2 - x1;\n  const height = y2 - y1;\n  const threshold = maxBindingGap(element, width, height);\n\n  // So that we don't overlap the element itself\n  const strokeOffset = 4;\n  context.strokeStyle = \"rgba(0,0,0,.05)\";\n  context.lineWidth = threshold - strokeOffset;\n  const padding = strokeOffset / 2 + threshold / 2;\n\n  switch (element.type) {\n    case \"rectangle\":\n    case \"text\":\n    case \"image\":\n      strokeRectWithRotation(\n        context,\n        x1 - padding,\n        y1 - padding,\n        width + padding * 2,\n        height + padding * 2,\n        x1 + width / 2,\n        y1 + height / 2,\n        element.angle,\n      );\n      break;\n    case \"diamond\":\n      const side = Math.hypot(width, height);\n      const wPadding = (padding * side) / height;\n      const hPadding = (padding * side) / width;\n      strokeDiamondWithRotation(\n        context,\n        width + wPadding * 2,\n        height + hPadding * 2,\n        x1 + width / 2,\n        y1 + height / 2,\n        element.angle,\n      );\n      break;\n    case \"ellipse\":\n      strokeEllipseWithRotation(\n        context,\n        width + padding * 2,\n        height + padding * 2,\n        x1 + width / 2,\n        y1 + height / 2,\n        element.angle,\n      );\n      break;\n  }\n};\n\nconst renderBindingHighlightForSuggestedPointBinding = (\n  context: CanvasRenderingContext2D,\n  suggestedBinding: SuggestedPointBinding,\n) => {\n  const [element, startOrEnd, bindableElement] = suggestedBinding;\n\n  const threshold = maxBindingGap(\n    bindableElement,\n    bindableElement.width,\n    bindableElement.height,\n  );\n\n  context.strokeStyle = \"rgba(0,0,0,0)\";\n  context.fillStyle = \"rgba(0,0,0,.05)\";\n\n  const pointIndices =\n    startOrEnd === \"both\" ? [0, -1] : startOrEnd === \"start\" ? [0] : [-1];\n  pointIndices.forEach((index) => {\n    const [x, y] = LinearElementEditor.getPointAtIndexGlobalCoordinates(\n      element,\n      index,\n    );\n    fillCircle(context, x, y, threshold);\n  });\n};\n\nlet linkCanvasCache: any;\nconst renderLinkIcon = (\n  element: NonDeletedExcalidrawElement,\n  context: CanvasRenderingContext2D,\n  appState: AppState,\n) => {\n  if (element.link && !appState.selectedElementIds[element.id]) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const [x, y, width, height] = getLinkHandleFromCoords(\n      [x1, y1, x2, y2],\n      element.angle,\n      appState,\n    );\n    const centerX = x + width / 2;\n    const centerY = y + height / 2;\n    context.save();\n    context.translate(appState.scrollX + centerX, appState.scrollY + centerY);\n    context.rotate(element.angle);\n\n    if (!linkCanvasCache || linkCanvasCache.zoom !== appState.zoom.value) {\n      linkCanvasCache = document.createElement(\"canvas\");\n      linkCanvasCache.zoom = appState.zoom.value;\n      linkCanvasCache.width =\n        width * window.devicePixelRatio * appState.zoom.value;\n      linkCanvasCache.height =\n        height * window.devicePixelRatio * appState.zoom.value;\n      const linkCanvasCacheContext = linkCanvasCache.getContext(\"2d\")!;\n      linkCanvasCacheContext.scale(\n        window.devicePixelRatio * appState.zoom.value,\n        window.devicePixelRatio * appState.zoom.value,\n      );\n      linkCanvasCacheContext.fillStyle = \"#fff\";\n      linkCanvasCacheContext.fillRect(0, 0, width, height);\n      linkCanvasCacheContext.drawImage(EXTERNAL_LINK_IMG, 0, 0, width, height);\n      linkCanvasCacheContext.restore();\n      context.drawImage(\n        linkCanvasCache,\n        x - centerX,\n        y - centerY,\n        width,\n        height,\n      );\n    } else {\n      context.drawImage(\n        linkCanvasCache,\n        x - centerX,\n        y - centerY,\n        width,\n        height,\n      );\n    }\n    context.restore();\n  }\n};\n\nconst isVisibleElement = (\n  element: ExcalidrawElement,\n  canvasWidth: number,\n  canvasHeight: number,\n  viewTransformations: {\n    zoom: Zoom;\n    offsetLeft: number;\n    offsetTop: number;\n    scrollX: number;\n    scrollY: number;\n  },\n) => {\n  const [x1, y1, x2, y2] = getElementBounds(element); // scene coordinates\n  const topLeftSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft,\n      clientY: viewTransformations.offsetTop,\n    },\n    viewTransformations,\n  );\n  const bottomRightSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft + canvasWidth,\n      clientY: viewTransformations.offsetTop + canvasHeight,\n    },\n    viewTransformations,\n  );\n\n  return (\n    topLeftSceneCoords.x <= x2 &&\n    topLeftSceneCoords.y <= y2 &&\n    bottomRightSceneCoords.x >= x1 &&\n    bottomRightSceneCoords.y >= y1\n  );\n};\n\n// This should be only called for exporting purposes\nexport const renderSceneToSvg = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  files: BinaryFiles,\n  {\n    offsetX = 0,\n    offsetY = 0,\n    exportWithDarkMode = false,\n  }: {\n    offsetX?: number;\n    offsetY?: number;\n    exportWithDarkMode?: boolean;\n  } = {},\n) => {\n  if (!svgRoot) {\n    return;\n  }\n  // render elements\n  elements.forEach((element) => {\n    if (!element.isDeleted) {\n      try {\n        renderElementToSvg(\n          element,\n          rsvg,\n          svgRoot,\n          files,\n          element.x + offsetX,\n          element.y + offsetY,\n          exportWithDarkMode,\n        );\n      } catch (error: any) {\n        console.error(error);\n      }\n    }\n  });\n};\n","/**\n * https://stackoverflow.com/a/3368118\n * Draws a rounded rectangle using the current state of the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} radius The corner radius\n */\nexport const roundRect = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number,\n) => {\n  context.beginPath();\n  context.moveTo(x + radius, y);\n  context.lineTo(x + width - radius, y);\n  context.quadraticCurveTo(x + width, y, x + width, y + radius);\n  context.lineTo(x + width, y + height - radius);\n  context.quadraticCurveTo(\n    x + width,\n    y + height,\n    x + width - radius,\n    y + height,\n  );\n  context.lineTo(x + radius, y + height);\n  context.quadraticCurveTo(x, y + height, x, y + height - radius);\n  context.lineTo(x, y + radius);\n  context.quadraticCurveTo(x, y, x + radius, y);\n  context.closePath();\n  context.fill();\n  context.stroke();\n};\n","import {\n  FileWithHandle,\n  fileOpen as _fileOpen,\n  fileSave as _fileSave,\n  FileSystemHandle,\n  supported as nativeFileSystemSupported,\n} from \"browser-fs-access\";\nimport { EVENT, MIME_TYPES } from \"../constants\";\nimport { AbortError } from \"../errors\";\nimport { debounce } from \"../utils\";\n\ntype FILE_EXTENSION =\n  | \"gif\"\n  | \"jpg\"\n  | \"png\"\n  | \"svg\"\n  | \"json\"\n  | \"excalidraw\"\n  | \"excalidrawlib\";\n\nconst INPUT_CHANGE_INTERVAL_MS = 500;\n\nexport const fileOpen = <M extends boolean | undefined = false>(opts: {\n  extensions?: FILE_EXTENSION[];\n  description: string;\n  multiple?: M;\n}): Promise<\n  M extends false | undefined ? FileWithHandle : FileWithHandle[]\n> => {\n  // an unsafe TS hack, alas not much we can do AFAIK\n  type RetType = M extends false | undefined\n    ? FileWithHandle\n    : FileWithHandle[];\n\n  const mimeTypes = opts.extensions?.reduce((mimeTypes, type) => {\n    mimeTypes.push(MIME_TYPES[type]);\n\n    return mimeTypes;\n  }, [] as string[]);\n\n  const extensions = opts.extensions?.reduce((acc, ext) => {\n    if (ext === \"jpg\") {\n      return acc.concat(\".jpg\", \".jpeg\");\n    }\n    return acc.concat(`.${ext}`);\n  }, [] as string[]);\n\n  return _fileOpen({\n    description: opts.description,\n    extensions,\n    mimeTypes,\n    multiple: opts.multiple ?? false,\n    legacySetup: (resolve, reject, input) => {\n      const scheduleRejection = debounce(reject, INPUT_CHANGE_INTERVAL_MS);\n      const focusHandler = () => {\n        checkForFile();\n        document.addEventListener(EVENT.KEYUP, scheduleRejection);\n        document.addEventListener(EVENT.POINTER_UP, scheduleRejection);\n        scheduleRejection();\n      };\n      const checkForFile = () => {\n        // this hack might not work when expecting multiple files\n        if (input.files?.length) {\n          const ret = opts.multiple ? [...input.files] : input.files[0];\n          resolve(ret as RetType);\n        }\n      };\n      requestAnimationFrame(() => {\n        window.addEventListener(EVENT.FOCUS, focusHandler);\n      });\n      const interval = window.setInterval(() => {\n        checkForFile();\n      }, INPUT_CHANGE_INTERVAL_MS);\n      return (rejectPromise) => {\n        clearInterval(interval);\n        scheduleRejection.cancel();\n        window.removeEventListener(EVENT.FOCUS, focusHandler);\n        document.removeEventListener(EVENT.KEYUP, scheduleRejection);\n        document.removeEventListener(EVENT.POINTER_UP, scheduleRejection);\n        if (rejectPromise) {\n          // so that something is shown in console if we need to debug this\n          console.warn(\"Opening the file was canceled (legacy-fs).\");\n          rejectPromise(new AbortError());\n        }\n      };\n    },\n  }) as Promise<RetType>;\n};\n\nexport const fileSave = (\n  blob: Blob,\n  opts: {\n    /** supply without the extension */\n    name: string;\n    /** file extension */\n    extension: FILE_EXTENSION;\n    description: string;\n    /** existing FileSystemHandle */\n    fileHandle?: FileSystemHandle | null;\n  },\n) => {\n  return _fileSave(\n    blob,\n    {\n      fileName: `${opts.name}.${opts.extension}`,\n      description: opts.description,\n      extensions: [`.${opts.extension}`],\n    },\n    opts.fileHandle,\n  );\n};\n\nexport type { FileSystemHandle };\nexport { nativeFileSystemSupported };\n","import {\n  ExcalidrawElement,\n  ExcalidrawSelectionElement,\n  FontFamilyValues,\n} from \"../element/types\";\nimport {\n  AppState,\n  BinaryFiles,\n  LibraryItem,\n  NormalizedZoomValue,\n} from \"../types\";\nimport { ImportedDataState } from \"./types\";\nimport { getNormalizedDimensions, isInvisiblySmallElement } from \"../element\";\nimport { isLinearElementType } from \"../element/typeChecks\";\nimport { randomId } from \"../random\";\nimport {\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_TEXT_ALIGN,\n  DEFAULT_VERTICAL_ALIGN,\n  FONT_FAMILY,\n} from \"../constants\";\nimport { getDefaultAppState } from \"../appState\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { bumpVersion } from \"../element/mutateElement\";\nimport { getUpdatedTimestamp } from \"../utils\";\nimport { arrayToMap } from \"../utils\";\n\ntype RestoredAppState = Omit<\n  AppState,\n  \"offsetTop\" | \"offsetLeft\" | \"width\" | \"height\"\n>;\n\nexport const AllowedExcalidrawElementTypes: Record<\n  AppState[\"elementType\"],\n  boolean\n> = {\n  selection: true,\n  text: true,\n  rectangle: true,\n  diamond: true,\n  ellipse: true,\n  line: true,\n  image: true,\n  arrow: true,\n  freedraw: true,\n  eraser: false,\n};\n\nexport type RestoredDataState = {\n  elements: ExcalidrawElement[];\n  appState: RestoredAppState;\n  files: BinaryFiles;\n};\n\nconst getFontFamilyByName = (fontFamilyName: string): FontFamilyValues => {\n  if (Object.keys(FONT_FAMILY).includes(fontFamilyName)) {\n    return FONT_FAMILY[\n      fontFamilyName as keyof typeof FONT_FAMILY\n    ] as FontFamilyValues;\n  }\n  return DEFAULT_FONT_FAMILY;\n};\n\nconst restoreElementWithProperties = <\n  T extends ExcalidrawElement,\n  K extends Pick<T, keyof Omit<Required<T>, keyof ExcalidrawElement>>,\n>(\n  element: Required<T> & {\n    /** @deprecated */\n    boundElementIds?: readonly ExcalidrawElement[\"id\"][];\n  },\n  extra: Pick<\n    T,\n    // This extra Pick<T, keyof K> ensure no excess properties are passed.\n    // @ts-ignore TS complains here but type checks the call sites fine.\n    keyof K\n  > &\n    Partial<Pick<ExcalidrawElement, \"type\" | \"x\" | \"y\">>,\n): T => {\n  const base: Pick<T, keyof ExcalidrawElement> = {\n    type: extra.type || element.type,\n    // all elements must have version > 0 so getSceneVersion() will pick up\n    // newly added elements\n    version: element.version || 1,\n    versionNonce: element.versionNonce ?? 0,\n    isDeleted: element.isDeleted ?? false,\n    id: element.id || randomId(),\n    fillStyle: element.fillStyle || \"hachure\",\n    strokeWidth: element.strokeWidth || 1,\n    strokeStyle: element.strokeStyle ?? \"solid\",\n    roughness: element.roughness ?? 1,\n    opacity: element.opacity == null ? 100 : element.opacity,\n    angle: element.angle || 0,\n    x: extra.x ?? element.x ?? 0,\n    y: extra.y ?? element.y ?? 0,\n    strokeColor: element.strokeColor,\n    backgroundColor: element.backgroundColor,\n    width: element.width || 0,\n    height: element.height || 0,\n    seed: element.seed ?? 1,\n    groupIds: element.groupIds ?? [],\n    strokeSharpness:\n      element.strokeSharpness ??\n      (isLinearElementType(element.type) ? \"round\" : \"sharp\"),\n    boundElements: element.boundElementIds\n      ? element.boundElementIds.map((id) => ({ type: \"arrow\", id }))\n      : element.boundElements ?? [],\n    updated: element.updated ?? getUpdatedTimestamp(),\n    link: element.link ?? null,\n  };\n\n  return {\n    ...base,\n    ...getNormalizedDimensions(base),\n    ...extra,\n  } as unknown as T;\n};\n\nconst restoreElement = (\n  element: Exclude<ExcalidrawElement, ExcalidrawSelectionElement>,\n): typeof element | null => {\n  switch (element.type) {\n    case \"text\":\n      let fontSize = element.fontSize;\n      let fontFamily = element.fontFamily;\n      if (\"font\" in element) {\n        const [fontPx, _fontFamily]: [string, string] = (\n          element as any\n        ).font.split(\" \");\n        fontSize = parseInt(fontPx, 10);\n        fontFamily = getFontFamilyByName(_fontFamily);\n      }\n      return restoreElementWithProperties(element, {\n        fontSize,\n        fontFamily,\n        text: element.text ?? \"\",\n        baseline: element.baseline,\n        textAlign: element.textAlign || DEFAULT_TEXT_ALIGN,\n        verticalAlign: element.verticalAlign || DEFAULT_VERTICAL_ALIGN,\n        containerId: element.containerId ?? null,\n        originalText: element.originalText || element.text,\n      });\n    case \"freedraw\": {\n      return restoreElementWithProperties(element, {\n        points: element.points,\n        lastCommittedPoint: null,\n        simulatePressure: element.simulatePressure,\n        pressures: element.pressures,\n      });\n    }\n    case \"image\":\n      return restoreElementWithProperties(element, {\n        status: element.status || \"pending\",\n        fileId: element.fileId,\n        scale: element.scale || [1, 1],\n      });\n    case \"line\":\n    // @ts-ignore LEGACY type\n    // eslint-disable-next-line no-fallthrough\n    case \"draw\":\n    case \"arrow\": {\n      const {\n        startArrowhead = null,\n        endArrowhead = element.type === \"arrow\" ? \"arrow\" : null,\n      } = element;\n\n      let x = element.x;\n      let y = element.y;\n      let points = // migrate old arrow model to new one\n        !Array.isArray(element.points) || element.points.length < 2\n          ? [\n              [0, 0],\n              [element.width, element.height],\n            ]\n          : element.points;\n\n      if (points[0][0] !== 0 || points[0][1] !== 0) {\n        ({ points, x, y } = LinearElementEditor.getNormalizedPoints(element));\n      }\n\n      return restoreElementWithProperties(element, {\n        type:\n          (element.type as ExcalidrawElement[\"type\"] | \"draw\") === \"draw\"\n            ? \"line\"\n            : element.type,\n        startBinding: element.startBinding,\n        endBinding: element.endBinding,\n        lastCommittedPoint: null,\n        startArrowhead,\n        endArrowhead,\n        points,\n        x,\n        y,\n      });\n    }\n    // generic elements\n    case \"ellipse\":\n      return restoreElementWithProperties(element, {});\n    case \"rectangle\":\n      return restoreElementWithProperties(element, {});\n    case \"diamond\":\n      return restoreElementWithProperties(element, {});\n\n    // Don't use default case so as to catch a missing an element type case.\n    // We also don't want to throw, but instead return void so we filter\n    // out these unsupported elements from the restored array.\n  }\n};\n\nexport const restoreElements = (\n  elements: ImportedDataState[\"elements\"],\n  /** NOTE doesn't serve for reconciliation */\n  localElements: readonly ExcalidrawElement[] | null | undefined,\n): ExcalidrawElement[] => {\n  const localElementsMap = localElements ? arrayToMap(localElements) : null;\n  return (elements || []).reduce((elements, element) => {\n    // filtering out selection, which is legacy, no longer kept in elements,\n    // and causing issues if retained\n    if (element.type !== \"selection\" && !isInvisiblySmallElement(element)) {\n      let migratedElement: ExcalidrawElement | null = restoreElement(element);\n      if (migratedElement) {\n        const localElement = localElementsMap?.get(element.id);\n        if (localElement && localElement.version > migratedElement.version) {\n          migratedElement = bumpVersion(migratedElement, localElement.version);\n        }\n        elements.push(migratedElement);\n      }\n    }\n    return elements;\n  }, [] as ExcalidrawElement[]);\n};\n\nexport const restoreAppState = (\n  appState: ImportedDataState[\"appState\"],\n  localAppState: Partial<AppState> | null | undefined,\n): RestoredAppState => {\n  appState = appState || {};\n\n  const defaultAppState = getDefaultAppState();\n  const nextAppState = {} as typeof defaultAppState;\n\n  for (const [key, defaultValue] of Object.entries(defaultAppState) as [\n    keyof typeof defaultAppState,\n    any,\n  ][]) {\n    const suppliedValue = appState[key];\n    const localValue = localAppState ? localAppState[key] : undefined;\n    (nextAppState as any)[key] =\n      suppliedValue !== undefined\n        ? suppliedValue\n        : localValue !== undefined\n        ? localValue\n        : defaultValue;\n  }\n\n  return {\n    ...nextAppState,\n    elementType: AllowedExcalidrawElementTypes[nextAppState.elementType]\n      ? nextAppState.elementType\n      : \"selection\",\n    // Migrates from previous version where appState.zoom was a number\n    zoom:\n      typeof appState.zoom === \"number\"\n        ? {\n            value: appState.zoom as NormalizedZoomValue,\n          }\n        : appState.zoom || defaultAppState.zoom,\n  };\n};\n\nexport const restore = (\n  data: ImportedDataState | null,\n  /**\n   * Local AppState (`this.state` or initial state from localStorage) so that we\n   * don't overwrite local state with default values (when values not\n   * explicitly specified).\n   * Supply `null` if you can't get access to it.\n   */\n  localAppState: Partial<AppState> | null | undefined,\n  localElements: readonly ExcalidrawElement[] | null | undefined,\n): RestoredDataState => {\n  return {\n    elements: restoreElements(data?.elements, localElements),\n    appState: restoreAppState(data?.appState, localAppState || null),\n    files: data?.files || {},\n  };\n};\n\nexport const restoreLibraryItems = (\n  libraryItems: NonOptional<ImportedDataState[\"libraryItems\"]>,\n  defaultStatus: LibraryItem[\"status\"],\n) => {\n  const restoredItems: LibraryItem[] = [];\n  for (const item of libraryItems) {\n    // migrate older libraries\n    if (Array.isArray(item)) {\n      restoredItems.push({\n        status: defaultStatus,\n        elements: item,\n        id: randomId(),\n        created: Date.now(),\n      });\n    } else {\n      const _item = item as MarkOptional<LibraryItem, \"id\" | \"status\">;\n      restoredItems.push({\n        ..._item,\n        id: _item.id || randomId(),\n        status: _item.status || defaultStatus,\n        created: _item.created || Date.now(),\n      });\n    }\n  }\n  return restoredItems;\n};\n","import { nanoid } from \"nanoid\";\nimport { cleanAppStateForExport } from \"../appState\";\nimport {\n  ALLOWED_IMAGE_MIME_TYPES,\n  EXPORT_DATA_TYPES,\n  MIME_TYPES,\n} from \"../constants\";\nimport { clearElementsForExport } from \"../element\";\nimport { ExcalidrawElement, FileId } from \"../element/types\";\nimport { CanvasError } from \"../errors\";\nimport { t } from \"../i18n\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { AppState, DataURL } from \"../types\";\nimport { bytesToHexString } from \"../utils\";\nimport { FileSystemHandle } from \"./filesystem\";\nimport { isValidExcalidrawData } from \"./json\";\nimport { restore } from \"./restore\";\nimport { ImportedLibraryData } from \"./types\";\n\nconst parseFileContents = async (blob: Blob | File) => {\n  let contents: string;\n\n  if (blob.type === MIME_TYPES.png) {\n    try {\n      return await (\n        await import(/* webpackChunkName: \"image\" */ \"./image\")\n      ).decodePngMetadata(blob);\n    } catch (error: any) {\n      if (error.message === \"INVALID\") {\n        throw new DOMException(\n          t(\"alerts.imageDoesNotContainScene\"),\n          \"EncodingError\",\n        );\n      } else {\n        throw new DOMException(\n          t(\"alerts.cannotRestoreFromImage\"),\n          \"EncodingError\",\n        );\n      }\n    }\n  } else {\n    if (\"text\" in Blob) {\n      contents = await blob.text();\n    } else {\n      contents = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsText(blob, \"utf8\");\n        reader.onloadend = () => {\n          if (reader.readyState === FileReader.DONE) {\n            resolve(reader.result as string);\n          }\n        };\n      });\n    }\n    if (blob.type === MIME_TYPES.svg) {\n      try {\n        return await (\n          await import(/* webpackChunkName: \"image\" */ \"./image\")\n        ).decodeSvgMetadata({\n          svg: contents,\n        });\n      } catch (error: any) {\n        if (error.message === \"INVALID\") {\n          throw new DOMException(\n            t(\"alerts.imageDoesNotContainScene\"),\n            \"EncodingError\",\n          );\n        } else {\n          throw new DOMException(\n            t(\"alerts.cannotRestoreFromImage\"),\n            \"EncodingError\",\n          );\n        }\n      }\n    }\n  }\n  return contents;\n};\n\nexport const getMimeType = (blob: Blob | string): string => {\n  let name: string;\n  if (typeof blob === \"string\") {\n    name = blob;\n  } else {\n    if (blob.type) {\n      return blob.type;\n    }\n    name = blob.name || \"\";\n  }\n  if (/\\.(excalidraw|json)$/.test(name)) {\n    return MIME_TYPES.json;\n  } else if (/\\.png$/.test(name)) {\n    return MIME_TYPES.png;\n  } else if (/\\.jpe?g$/.test(name)) {\n    return MIME_TYPES.jpg;\n  } else if (/\\.svg$/.test(name)) {\n    return MIME_TYPES.svg;\n  }\n  return \"\";\n};\n\nexport const getFileHandleType = (handle: FileSystemHandle | null) => {\n  if (!handle) {\n    return null;\n  }\n\n  return handle.name.match(/\\.(json|excalidraw|png|svg)$/)?.[1] || null;\n};\n\nexport const isImageFileHandleType = (\n  type: string | null,\n): type is \"png\" | \"svg\" => {\n  return type === \"png\" || type === \"svg\";\n};\n\nexport const isImageFileHandle = (handle: FileSystemHandle | null) => {\n  const type = getFileHandleType(handle);\n  return type === \"png\" || type === \"svg\";\n};\n\nexport const isSupportedImageFile = (\n  blob: Blob | null | undefined,\n): blob is Blob & { type: typeof ALLOWED_IMAGE_MIME_TYPES[number] } => {\n  const { type } = blob || {};\n  return (\n    !!type && (ALLOWED_IMAGE_MIME_TYPES as readonly string[]).includes(type)\n  );\n};\n\nexport const loadFromBlob = async (\n  blob: Blob,\n  /** @see restore.localAppState */\n  localAppState: AppState | null,\n  localElements: readonly ExcalidrawElement[] | null,\n) => {\n  const contents = await parseFileContents(blob);\n  try {\n    const data = JSON.parse(contents);\n    if (!isValidExcalidrawData(data)) {\n      throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n    }\n    const result = restore(\n      {\n        elements: clearElementsForExport(data.elements || []),\n        appState: {\n          theme: localAppState?.theme,\n          fileHandle: blob.handle || null,\n          ...cleanAppStateForExport(data.appState || {}),\n          ...(localAppState\n            ? calculateScrollCenter(data.elements || [], localAppState, null)\n            : {}),\n        },\n        files: data.files,\n      },\n      localAppState,\n      localElements,\n    );\n\n    return result;\n  } catch (error: any) {\n    console.error(error.message);\n    throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n  }\n};\n\nexport const loadLibraryFromBlob = async (blob: Blob) => {\n  const contents = await parseFileContents(blob);\n  const data: ImportedLibraryData = JSON.parse(contents);\n  if (data.type !== EXPORT_DATA_TYPES.excalidrawLibrary) {\n    throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n  }\n  return data;\n};\n\nexport const canvasToBlob = async (\n  canvas: HTMLCanvasElement,\n): Promise<Blob> => {\n  return new Promise((resolve, reject) => {\n    try {\n      canvas.toBlob((blob) => {\n        if (!blob) {\n          return reject(\n            new CanvasError(\n              t(\"canvasError.canvasTooBig\"),\n              \"CANVAS_POSSIBLY_TOO_BIG\",\n            ),\n          );\n        }\n        resolve(blob);\n      });\n    } catch (error: any) {\n      reject(error);\n    }\n  });\n};\n\n/** generates SHA-1 digest from supplied file (if not supported, falls back\n    to a 40-char base64 random id) */\nexport const generateIdFromFile = async (file: File): Promise<FileId> => {\n  try {\n    const hashBuffer = await window.crypto.subtle.digest(\n      \"SHA-1\",\n      await file.arrayBuffer(),\n    );\n    return bytesToHexString(new Uint8Array(hashBuffer)) as FileId;\n  } catch (error: any) {\n    console.error(error);\n    // length 40 to align with the HEX length of SHA-1 (which is 160 bit)\n    return nanoid(40) as FileId;\n  }\n};\n\nexport const getDataURL = async (file: Blob | File): Promise<DataURL> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      const dataURL = reader.result as DataURL;\n      resolve(dataURL);\n    };\n    reader.onerror = (error) => reject(error);\n    reader.readAsDataURL(file);\n  });\n};\n\nexport const dataURLToFile = (dataURL: DataURL, filename = \"\") => {\n  const dataIndexStart = dataURL.indexOf(\",\");\n  const byteString = atob(dataURL.slice(dataIndexStart + 1));\n  const mimeType = dataURL.slice(0, dataIndexStart).split(\":\")[1].split(\";\")[0];\n\n  const ab = new ArrayBuffer(byteString.length);\n  const ia = new Uint8Array(ab);\n  for (let i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n  return new File([ab], filename, { type: mimeType });\n};\n\nexport const resizeImageFile = async (\n  file: File,\n  opts: {\n    /** undefined indicates auto */\n    outputType?: typeof MIME_TYPES[\"jpg\"];\n    maxWidthOrHeight: number;\n  },\n): Promise<File> => {\n  // SVG files shouldn't a can't be resized\n  if (file.type === MIME_TYPES.svg) {\n    return file;\n  }\n\n  const [pica, imageBlobReduce] = await Promise.all([\n    import(\"pica\").then((res) => res.default),\n    // a wrapper for pica for better API\n    import(\"image-blob-reduce\").then((res) => res.default),\n  ]);\n\n  // CRA's minification settings break pica in WebWorkers, so let's disable\n  // them for now\n  // https://github.com/nodeca/image-blob-reduce/issues/21#issuecomment-757365513\n  const reduce = imageBlobReduce({\n    pica: pica({ features: [\"js\", \"wasm\"] }),\n  });\n\n  if (opts.outputType) {\n    const { outputType } = opts;\n    reduce._create_blob = function (env) {\n      return this.pica.toBlob(env.out_canvas, outputType, 0.8).then((blob) => {\n        env.out_blob = blob;\n        return env;\n      });\n    };\n  }\n\n  if (!isSupportedImageFile(file)) {\n    throw new Error(t(\"errors.unsupportedFileType\"));\n  }\n\n  return new File(\n    [await reduce.toBlob(file, { max: opts.maxWidthOrHeight })],\n    file.name,\n    {\n      type: opts.outputType || file.type,\n    },\n  );\n};\n\nexport const SVGStringToFile = (SVGString: string, filename: string = \"\") => {\n  return new File([new TextEncoder().encode(SVGString)], filename, {\n    type: MIME_TYPES.svg,\n  }) as File & { type: typeof MIME_TYPES.svg };\n};\n","import { fileOpen, fileSave } from \"./filesystem\";\nimport { cleanAppStateForExport, clearAppStateForDatabase } from \"../appState\";\nimport {\n  EXPORT_DATA_TYPES,\n  EXPORT_SOURCE,\n  MIME_TYPES,\n  VERSIONS,\n} from \"../constants\";\nimport { clearElementsForDatabase, clearElementsForExport } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState, BinaryFiles, LibraryItems } from \"../types\";\nimport { isImageFileHandle, loadFromBlob } from \"./blob\";\n\nimport {\n  ExportedDataState,\n  ImportedDataState,\n  ExportedLibraryData,\n} from \"./types\";\nimport Library from \"./library\";\n\n/**\n * Strips out files which are only referenced by deleted elements\n */\nconst filterOutDeletedFiles = (\n  elements: readonly ExcalidrawElement[],\n  files: BinaryFiles,\n) => {\n  const nextFiles: BinaryFiles = {};\n  for (const element of elements) {\n    if (\n      !element.isDeleted &&\n      \"fileId\" in element &&\n      element.fileId &&\n      files[element.fileId]\n    ) {\n      nextFiles[element.fileId] = files[element.fileId];\n    }\n  }\n  return nextFiles;\n};\n\nexport const serializeAsJSON = (\n  elements: readonly ExcalidrawElement[],\n  appState: Partial<AppState>,\n  files: BinaryFiles,\n  type: \"local\" | \"database\",\n): string => {\n  const data: ExportedDataState = {\n    type: EXPORT_DATA_TYPES.excalidraw,\n    version: VERSIONS.excalidraw,\n    source: EXPORT_SOURCE,\n    elements:\n      type === \"local\"\n        ? clearElementsForExport(elements)\n        : clearElementsForDatabase(elements),\n    appState:\n      type === \"local\"\n        ? cleanAppStateForExport(appState)\n        : clearAppStateForDatabase(appState),\n    files:\n      type === \"local\"\n        ? filterOutDeletedFiles(elements, files)\n        : // will be stripped from JSON\n          undefined,\n  };\n\n  return JSON.stringify(data, null, 2);\n};\n\nexport const saveAsJSON = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  files: BinaryFiles,\n) => {\n  const serialized = serializeAsJSON(elements, appState, files, \"local\");\n  const blob = new Blob([serialized], {\n    type: MIME_TYPES.excalidraw,\n  });\n\n  const fileHandle = await fileSave(blob, {\n    name: appState.name,\n    extension: \"excalidraw\",\n    description: \"Excalidraw file\",\n    fileHandle: isImageFileHandle(appState.fileHandle)\n      ? null\n      : appState.fileHandle,\n  });\n  return { fileHandle };\n};\n\nexport const loadFromJSON = async (\n  localAppState: AppState,\n  localElements: readonly ExcalidrawElement[] | null,\n) => {\n  const blob = await fileOpen({\n    description: \"Excalidraw files\",\n    // ToDo: Be over-permissive until https://bugs.webkit.org/show_bug.cgi?id=34442\n    // gets resolved. Else, iOS users cannot open `.excalidraw` files.\n    // extensions: [\"json\", \"excalidraw\", \"png\", \"svg\"],\n  });\n  return loadFromBlob(blob, localAppState, localElements);\n};\n\nexport const isValidExcalidrawData = (data?: {\n  type?: any;\n  elements?: any;\n  appState?: any;\n}): data is ImportedDataState => {\n  return (\n    data?.type === EXPORT_DATA_TYPES.excalidraw &&\n    (!data.elements ||\n      (Array.isArray(data.elements) &&\n        (!data.appState || typeof data.appState === \"object\")))\n  );\n};\n\nexport const isValidLibrary = (json: any) => {\n  return (\n    typeof json === \"object\" &&\n    json &&\n    json.type === EXPORT_DATA_TYPES.excalidrawLibrary &&\n    (json.version === 1 || json.version === 2)\n  );\n};\n\nexport const saveLibraryAsJSON = async (libraryItems: LibraryItems) => {\n  const data: ExportedLibraryData = {\n    type: EXPORT_DATA_TYPES.excalidrawLibrary,\n    version: VERSIONS.excalidrawLibrary,\n    source: EXPORT_SOURCE,\n    libraryItems,\n  };\n  const serialized = JSON.stringify(data, null, 2);\n  await fileSave(\n    new Blob([serialized], {\n      type: MIME_TYPES.excalidrawlib,\n    }),\n    {\n      name: \"library\",\n      extension: \"excalidrawlib\",\n      description: \"Excalidraw library file\",\n    },\n  );\n};\n\nexport const importLibraryFromJSON = async (library: Library) => {\n  const blob = await fileOpen({\n    description: \"Excalidraw library files\",\n    // ToDo: Be over-permissive until https://bugs.webkit.org/show_bug.cgi?id=34442\n    // gets resolved. Else, iOS users cannot open `.excalidraw` files.\n    /*\n    extensions: [\".json\", \".excalidrawlib\"],\n    */\n  });\n  await library.importLibrary(blob);\n};\n","// -----------------------------------------------------------------------------\n// ExcalidrawImageElement & related helpers\n// -----------------------------------------------------------------------------\n\nimport { MIME_TYPES, SVG_NS } from \"../constants\";\nimport { t } from \"../i18n\";\nimport { AppClassProperties, DataURL, BinaryFiles } from \"../types\";\nimport { isInitializedImageElement } from \"./typeChecks\";\nimport {\n  ExcalidrawElement,\n  FileId,\n  InitializedExcalidrawImageElement,\n} from \"./types\";\n\nexport const loadHTMLImageElement = (dataURL: DataURL) => {\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    const image = new Image();\n    image.onload = () => {\n      resolve(image);\n    };\n    image.onerror = (error) => {\n      reject(error);\n    };\n    image.src = dataURL;\n  });\n};\n\n/** NOTE: updates cache even if already populated with given image. Thus,\n * you should filter out the images upstream if you want to optimize this. */\nexport const updateImageCache = async ({\n  fileIds,\n  files,\n  imageCache,\n}: {\n  fileIds: FileId[];\n  files: BinaryFiles;\n  imageCache: AppClassProperties[\"imageCache\"];\n}) => {\n  const updatedFiles = new Map<FileId, true>();\n  const erroredFiles = new Map<FileId, true>();\n\n  await Promise.all(\n    fileIds.reduce((promises, fileId) => {\n      const fileData = files[fileId as string];\n      if (fileData && !updatedFiles.has(fileId)) {\n        updatedFiles.set(fileId, true);\n        return promises.concat(\n          (async () => {\n            try {\n              if (fileData.mimeType === MIME_TYPES.binary) {\n                throw new Error(\"Only images can be added to ImageCache\");\n              }\n\n              const imagePromise = loadHTMLImageElement(fileData.dataURL);\n              const data = {\n                image: imagePromise,\n                mimeType: fileData.mimeType,\n              } as const;\n              // store the promise immediately to indicate there's an in-progress\n              // initialization\n              imageCache.set(fileId, data);\n\n              const image = await imagePromise;\n\n              imageCache.set(fileId, { ...data, image });\n            } catch (error: any) {\n              erroredFiles.set(fileId, true);\n            }\n          })(),\n        );\n      }\n      return promises;\n    }, [] as Promise<any>[]),\n  );\n\n  return {\n    imageCache,\n    /** includes errored files because they cache was updated nonetheless */\n    updatedFiles,\n    /** files that failed when creating HTMLImageElement */\n    erroredFiles,\n  };\n};\n\nexport const getInitializedImageElements = (\n  elements: readonly ExcalidrawElement[],\n) =>\n  elements.filter((element) =>\n    isInitializedImageElement(element),\n  ) as InitializedExcalidrawImageElement[];\n\nexport const isHTMLSVGElement = (node: Node | null): node is SVGElement => {\n  // lower-casing due to XML/HTML convention differences\n  // https://johnresig.com/blog/nodename-case-sensitivity\n  return node?.nodeName.toLowerCase() === \"svg\";\n};\n\nexport const normalizeSVG = async (SVGString: string) => {\n  const doc = new DOMParser().parseFromString(SVGString, MIME_TYPES.svg);\n  const svg = doc.querySelector(\"svg\");\n  const errorNode = doc.querySelector(\"parsererror\");\n  if (errorNode || !isHTMLSVGElement(svg)) {\n    throw new Error(t(\"errors.invalidSVGString\"));\n  } else {\n    if (!svg.hasAttribute(\"xmlns\")) {\n      svg.setAttribute(\"xmlns\", SVG_NS);\n    }\n\n    return svg.outerHTML;\n  }\n};\n","import rough from \"roughjs/bin/rough\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element/bounds\";\nimport { renderScene, renderSceneToSvg } from \"../renderer/renderScene\";\nimport { distance } from \"../utils\";\nimport { AppState, BinaryFiles } from \"../types\";\nimport { DEFAULT_EXPORT_PADDING, SVG_NS, THEME_FILTER } from \"../constants\";\nimport { getDefaultAppState } from \"../appState\";\nimport { serializeAsJSON } from \"../data/json\";\nimport {\n  getInitializedImageElements,\n  updateImageCache,\n} from \"../element/image\";\n\nexport const SVG_EXPORT_TAG = `<!-- svg-source:excalidraw -->`;\n\nexport const exportToCanvas = async (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  files: BinaryFiles,\n  {\n    exportBackground,\n    exportPadding = DEFAULT_EXPORT_PADDING,\n    viewBackgroundColor,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n  },\n  createCanvas: (\n    width: number,\n    height: number,\n  ) => { canvas: HTMLCanvasElement; scale: number } = (width, height) => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width * appState.exportScale;\n    canvas.height = height * appState.exportScale;\n    return { canvas, scale: appState.exportScale };\n  },\n) => {\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  const { canvas, scale = 1 } = createCanvas(width, height);\n\n  const defaultAppState = getDefaultAppState();\n\n  const { imageCache } = await updateImageCache({\n    imageCache: new Map(),\n    fileIds: getInitializedImageElements(elements).map(\n      (element) => element.fileId,\n    ),\n    files,\n  });\n\n  renderScene(elements, appState, null, scale, rough.canvas(canvas), canvas, {\n    viewBackgroundColor: exportBackground ? viewBackgroundColor : null,\n    scrollX: -minX + exportPadding,\n    scrollY: -minY + exportPadding,\n    zoom: defaultAppState.zoom,\n    remotePointerViewportCoords: {},\n    remoteSelectedElementIds: {},\n    shouldCacheIgnoreZoom: false,\n    remotePointerUsernames: {},\n    remotePointerUserStates: {},\n    theme: appState.exportWithDarkMode ? \"dark\" : \"light\",\n    imageCache,\n    renderScrollbars: false,\n    renderSelection: false,\n    renderGrid: false,\n    isExporting: true,\n  });\n\n  return canvas;\n};\n\nexport const exportToSvg = async (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    exportScale?: number;\n    viewBackgroundColor: string;\n    exportWithDarkMode?: boolean;\n    exportEmbedScene?: boolean;\n  },\n  files: BinaryFiles | null,\n): Promise<SVGSVGElement> => {\n  const {\n    exportPadding = DEFAULT_EXPORT_PADDING,\n    viewBackgroundColor,\n    exportScale = 1,\n    exportEmbedScene,\n  } = appState;\n  let metadata = \"\";\n  if (exportEmbedScene) {\n    try {\n      metadata = await (\n        await import(/* webpackChunkName: \"image\" */ \"../../src/data/image\")\n      ).encodeSvgMetadata({\n        text: serializeAsJSON(elements, appState, files || {}, \"local\"),\n      });\n    } catch (error: any) {\n      console.error(error);\n    }\n  }\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  // initialize SVG root\n  const svgRoot = document.createElementNS(SVG_NS, \"svg\");\n  svgRoot.setAttribute(\"version\", \"1.1\");\n  svgRoot.setAttribute(\"xmlns\", SVG_NS);\n  svgRoot.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n  svgRoot.setAttribute(\"width\", `${width * exportScale}`);\n  svgRoot.setAttribute(\"height\", `${height * exportScale}`);\n  if (appState.exportWithDarkMode) {\n    svgRoot.setAttribute(\"filter\", THEME_FILTER);\n  }\n\n  svgRoot.innerHTML = `\n  ${SVG_EXPORT_TAG}\n  ${metadata}\n  <defs>\n    <style>\n      @font-face {\n        font-family: \"Virgil\";\n        src: url(\"https://excalidraw.com/Virgil.woff2\");\n      }\n      @font-face {\n        font-family: \"Cascadia\";\n        src: url(\"https://excalidraw.com/Cascadia.woff2\");\n      }\n    </style>\n  </defs>\n  `;\n\n  // render background rect\n  if (appState.exportBackground && viewBackgroundColor) {\n    const rect = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"rect\");\n    rect.setAttribute(\"x\", \"0\");\n    rect.setAttribute(\"y\", \"0\");\n    rect.setAttribute(\"width\", `${width}`);\n    rect.setAttribute(\"height\", `${height}`);\n    rect.setAttribute(\"fill\", viewBackgroundColor);\n    svgRoot.appendChild(rect);\n  }\n\n  const rsvg = rough.svg(svgRoot);\n  renderSceneToSvg(elements, rsvg, svgRoot, files || {}, {\n    offsetX: -minX + exportPadding,\n    offsetY: -minY + exportPadding,\n    exportWithDarkMode: appState.exportWithDarkMode,\n  });\n\n  return svgRoot;\n};\n\n// calculate smallest area to fit the contents in\nconst getCanvasSize = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  exportPadding: number,\n): [number, number, number, number] => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height = distance(minY, maxY) + exportPadding + exportPadding;\n\n  return [minX, minY, width, height];\n};\n\nexport const getExportSize = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  exportPadding: number,\n  scale: number,\n): [number, number] => {\n  const [, , width, height] = getCanvasSize(elements, exportPadding).map(\n    (dimension) => Math.trunc(dimension * scale),\n  );\n\n  return [width, height];\n};\n","import colors from \"./colors\";\nimport {\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_SIZE,\n  ENV,\n  VERTICAL_ALIGN,\n} from \"./constants\";\nimport { newElement, newLinearElement, newTextElement } from \"./element\";\nimport { NonDeletedExcalidrawElement } from \"./element/types\";\nimport { randomId } from \"./random\";\n\nexport type ChartElements = readonly NonDeletedExcalidrawElement[];\n\nconst BAR_WIDTH = 32;\nconst BAR_GAP = 12;\nconst BAR_HEIGHT = 256;\nconst GRID_OPACITY = 50;\n\nexport interface Spreadsheet {\n  title: string | null;\n  labels: string[] | null;\n  values: number[];\n}\n\nexport const NOT_SPREADSHEET = \"NOT_SPREADSHEET\";\nexport const VALID_SPREADSHEET = \"VALID_SPREADSHEET\";\n\ntype ParseSpreadsheetResult =\n  | { type: typeof NOT_SPREADSHEET; reason: string }\n  | { type: typeof VALID_SPREADSHEET; spreadsheet: Spreadsheet };\n\nconst tryParseNumber = (s: string): number | null => {\n  const match = /^[$€£¥₩]?([0-9,]+(\\.[0-9]+)?)$/.exec(s);\n  if (!match) {\n    return null;\n  }\n  return parseFloat(match[1].replace(/,/g, \"\"));\n};\n\nconst isNumericColumn = (lines: string[][], columnIndex: number) =>\n  lines.slice(1).every((line) => tryParseNumber(line[columnIndex]) !== null);\n\nconst tryParseCells = (cells: string[][]): ParseSpreadsheetResult => {\n  const numCols = cells[0].length;\n\n  if (numCols > 2) {\n    return { type: NOT_SPREADSHEET, reason: \"More than 2 columns\" };\n  }\n\n  if (numCols === 1) {\n    if (!isNumericColumn(cells, 0)) {\n      return { type: NOT_SPREADSHEET, reason: \"Value is not numeric\" };\n    }\n\n    const hasHeader = tryParseNumber(cells[0][0]) === null;\n    const values = (hasHeader ? cells.slice(1) : cells).map((line) =>\n      tryParseNumber(line[0]),\n    );\n\n    if (values.length < 2) {\n      return { type: NOT_SPREADSHEET, reason: \"Less than two rows\" };\n    }\n\n    return {\n      type: VALID_SPREADSHEET,\n      spreadsheet: {\n        title: hasHeader ? cells[0][0] : null,\n        labels: null,\n        values: values as number[],\n      },\n    };\n  }\n\n  const valueColumnIndex = isNumericColumn(cells, 0) ? 0 : 1;\n\n  if (!isNumericColumn(cells, valueColumnIndex)) {\n    return { type: NOT_SPREADSHEET, reason: \"Value is not numeric\" };\n  }\n\n  const labelColumnIndex = (valueColumnIndex + 1) % 2;\n  const hasHeader = tryParseNumber(cells[0][valueColumnIndex]) === null;\n  const rows = hasHeader ? cells.slice(1) : cells;\n\n  if (rows.length < 2) {\n    return { type: NOT_SPREADSHEET, reason: \"Less than 2 rows\" };\n  }\n\n  return {\n    type: VALID_SPREADSHEET,\n    spreadsheet: {\n      title: hasHeader ? cells[0][valueColumnIndex] : null,\n      labels: rows.map((row) => row[labelColumnIndex]),\n      values: rows.map((row) => tryParseNumber(row[valueColumnIndex])!),\n    },\n  };\n};\n\nconst transposeCells = (cells: string[][]) => {\n  const nextCells: string[][] = [];\n  for (let col = 0; col < cells[0].length; col++) {\n    const nextCellRow: string[] = [];\n    for (let row = 0; row < cells.length; row++) {\n      nextCellRow.push(cells[row][col]);\n    }\n    nextCells.push(nextCellRow);\n  }\n  return nextCells;\n};\n\nexport const tryParseSpreadsheet = (text: string): ParseSpreadsheetResult => {\n  // Copy/paste from excel, spreadsheets, tsv, csv.\n  // For now we only accept 2 columns with an optional header\n\n  // Check for tab separated values\n  let lines = text\n    .trim()\n    .split(\"\\n\")\n    .map((line) => line.trim().split(\"\\t\"));\n\n  // Check for comma separated files\n  if (lines.length && lines[0].length !== 2) {\n    lines = text\n      .trim()\n      .split(\"\\n\")\n      .map((line) => line.trim().split(\",\"));\n  }\n\n  if (lines.length === 0) {\n    return { type: NOT_SPREADSHEET, reason: \"No values\" };\n  }\n\n  const numColsFirstLine = lines[0].length;\n  const isSpreadsheet = lines.every((line) => line.length === numColsFirstLine);\n\n  if (!isSpreadsheet) {\n    return {\n      type: NOT_SPREADSHEET,\n      reason: \"All rows don't have same number of columns\",\n    };\n  }\n\n  const result = tryParseCells(lines);\n  if (result.type !== VALID_SPREADSHEET) {\n    const transposedResults = tryParseCells(transposeCells(lines));\n    if (transposedResults.type === VALID_SPREADSHEET) {\n      return transposedResults;\n    }\n  }\n  return result;\n};\n\nconst bgColors = colors.elementBackground.slice(\n  2,\n  colors.elementBackground.length,\n);\n\n// Put all the common properties here so when the whole chart is selected\n// the properties dialog shows the correct selected values\nconst commonProps = {\n  fillStyle: \"hachure\",\n  fontFamily: DEFAULT_FONT_FAMILY,\n  fontSize: DEFAULT_FONT_SIZE,\n  opacity: 100,\n  roughness: 1,\n  strokeColor: colors.elementStroke[0],\n  strokeSharpness: \"sharp\",\n  strokeStyle: \"solid\",\n  strokeWidth: 1,\n  verticalAlign: VERTICAL_ALIGN.MIDDLE,\n} as const;\n\nconst getChartDimentions = (spreadsheet: Spreadsheet) => {\n  const chartWidth =\n    (BAR_WIDTH + BAR_GAP) * spreadsheet.values.length + BAR_GAP;\n  const chartHeight = BAR_HEIGHT + BAR_GAP * 2;\n  return { chartWidth, chartHeight };\n};\n\nconst chartXLabels = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n  groupId: string,\n  backgroundColor: string,\n): ChartElements => {\n  return (\n    spreadsheet.labels?.map((label, index) => {\n      return newTextElement({\n        groupIds: [groupId],\n        backgroundColor,\n        ...commonProps,\n        text: label.length > 8 ? `${label.slice(0, 5)}...` : label,\n        x: x + index * (BAR_WIDTH + BAR_GAP) + BAR_GAP * 2,\n        y: y + BAR_GAP / 2,\n        width: BAR_WIDTH,\n        angle: 5.87,\n        fontSize: 16,\n        textAlign: \"center\",\n        verticalAlign: \"top\",\n      });\n    }) || []\n  );\n};\n\nconst chartYLabels = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n  groupId: string,\n  backgroundColor: string,\n): ChartElements => {\n  const minYLabel = newTextElement({\n    groupIds: [groupId],\n    backgroundColor,\n    ...commonProps,\n    x: x - BAR_GAP,\n    y: y - BAR_GAP,\n    text: \"0\",\n    textAlign: \"right\",\n  });\n\n  const maxYLabel = newTextElement({\n    groupIds: [groupId],\n    backgroundColor,\n    ...commonProps,\n    x: x - BAR_GAP,\n    y: y - BAR_HEIGHT - minYLabel.height / 2,\n    text: Math.max(...spreadsheet.values).toLocaleString(),\n    textAlign: \"right\",\n  });\n\n  return [minYLabel, maxYLabel];\n};\n\nconst chartLines = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n  groupId: string,\n  backgroundColor: string,\n): ChartElements => {\n  const { chartWidth, chartHeight } = getChartDimentions(spreadsheet);\n  const xLine = newLinearElement({\n    backgroundColor,\n    groupIds: [groupId],\n    ...commonProps,\n    type: \"line\",\n    x,\n    y,\n    startArrowhead: null,\n    endArrowhead: null,\n    width: chartWidth,\n    points: [\n      [0, 0],\n      [chartWidth, 0],\n    ],\n  });\n\n  const yLine = newLinearElement({\n    backgroundColor,\n    groupIds: [groupId],\n    ...commonProps,\n    type: \"line\",\n    x,\n    y,\n    startArrowhead: null,\n    endArrowhead: null,\n    height: chartHeight,\n    points: [\n      [0, 0],\n      [0, -chartHeight],\n    ],\n  });\n\n  const maxLine = newLinearElement({\n    backgroundColor,\n    groupIds: [groupId],\n    ...commonProps,\n    type: \"line\",\n    x,\n    y: y - BAR_HEIGHT - BAR_GAP,\n    startArrowhead: null,\n    endArrowhead: null,\n    strokeStyle: \"dotted\",\n    width: chartWidth,\n    opacity: GRID_OPACITY,\n    points: [\n      [0, 0],\n      [chartWidth, 0],\n    ],\n  });\n\n  return [xLine, yLine, maxLine];\n};\n\n// For the maths behind it https://excalidraw.com/#json=6320864370884608,O_5xfD-Agh32tytHpRJx1g\nconst chartBaseElements = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n  groupId: string,\n  backgroundColor: string,\n  debug?: boolean,\n): ChartElements => {\n  const { chartWidth, chartHeight } = getChartDimentions(spreadsheet);\n\n  const title = spreadsheet.title\n    ? newTextElement({\n        backgroundColor,\n        groupIds: [groupId],\n        ...commonProps,\n        text: spreadsheet.title,\n        x: x + chartWidth / 2,\n        y: y - BAR_HEIGHT - BAR_GAP * 2 - DEFAULT_FONT_SIZE,\n        strokeSharpness: \"sharp\",\n        strokeStyle: \"solid\",\n        textAlign: \"center\",\n      })\n    : null;\n\n  const debugRect = debug\n    ? newElement({\n        backgroundColor,\n        groupIds: [groupId],\n        ...commonProps,\n        type: \"rectangle\",\n        x,\n        y: y - chartHeight,\n        width: chartWidth,\n        height: chartHeight,\n        strokeColor: colors.elementStroke[0],\n        fillStyle: \"solid\",\n        opacity: 6,\n      })\n    : null;\n\n  return [\n    ...(debugRect ? [debugRect] : []),\n    ...(title ? [title] : []),\n    ...chartXLabels(spreadsheet, x, y, groupId, backgroundColor),\n    ...chartYLabels(spreadsheet, x, y, groupId, backgroundColor),\n    ...chartLines(spreadsheet, x, y, groupId, backgroundColor),\n  ];\n};\n\nconst chartTypeBar = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n): ChartElements => {\n  const max = Math.max(...spreadsheet.values);\n  const groupId = randomId();\n  const backgroundColor = bgColors[Math.floor(Math.random() * bgColors.length)];\n\n  const bars = spreadsheet.values.map((value, index) => {\n    const barHeight = (value / max) * BAR_HEIGHT;\n    return newElement({\n      backgroundColor,\n      groupIds: [groupId],\n      ...commonProps,\n      type: \"rectangle\",\n      x: x + index * (BAR_WIDTH + BAR_GAP) + BAR_GAP,\n      y: y - barHeight - BAR_GAP,\n      width: BAR_WIDTH,\n      height: barHeight,\n    });\n  });\n\n  return [\n    ...bars,\n    ...chartBaseElements(\n      spreadsheet,\n      x,\n      y,\n      groupId,\n      backgroundColor,\n      process.env.NODE_ENV === ENV.DEVELOPMENT,\n    ),\n  ];\n};\n\nconst chartTypeLine = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n): ChartElements => {\n  const max = Math.max(...spreadsheet.values);\n  const groupId = randomId();\n  const backgroundColor = bgColors[Math.floor(Math.random() * bgColors.length)];\n\n  let index = 0;\n  const points = [];\n  for (const value of spreadsheet.values) {\n    const cx = index * (BAR_WIDTH + BAR_GAP);\n    const cy = -(value / max) * BAR_HEIGHT;\n    points.push([cx, cy]);\n    index++;\n  }\n\n  const maxX = Math.max(...points.map((element) => element[0]));\n  const maxY = Math.max(...points.map((element) => element[1]));\n  const minX = Math.min(...points.map((element) => element[0]));\n  const minY = Math.min(...points.map((element) => element[1]));\n\n  const line = newLinearElement({\n    backgroundColor,\n    groupIds: [groupId],\n    ...commonProps,\n    type: \"line\",\n    x: x + BAR_GAP + BAR_WIDTH / 2,\n    y: y - BAR_GAP,\n    startArrowhead: null,\n    endArrowhead: null,\n    height: maxY - minY,\n    width: maxX - minX,\n    strokeWidth: 2,\n    points: points as any,\n  });\n\n  const dots = spreadsheet.values.map((value, index) => {\n    const cx = index * (BAR_WIDTH + BAR_GAP) + BAR_GAP / 2;\n    const cy = -(value / max) * BAR_HEIGHT + BAR_GAP / 2;\n    return newElement({\n      backgroundColor,\n      groupIds: [groupId],\n      ...commonProps,\n      fillStyle: \"solid\",\n      strokeWidth: 2,\n      type: \"ellipse\",\n      x: x + cx + BAR_WIDTH / 2,\n      y: y + cy - BAR_GAP * 2,\n      width: BAR_GAP,\n      height: BAR_GAP,\n    });\n  });\n\n  const lines = spreadsheet.values.map((value, index) => {\n    const cx = index * (BAR_WIDTH + BAR_GAP) + BAR_GAP / 2;\n    const cy = (value / max) * BAR_HEIGHT + BAR_GAP / 2 + BAR_GAP;\n    return newLinearElement({\n      backgroundColor,\n      groupIds: [groupId],\n      ...commonProps,\n      type: \"line\",\n      x: x + cx + BAR_WIDTH / 2 + BAR_GAP / 2,\n      y: y - cy,\n      startArrowhead: null,\n      endArrowhead: null,\n      height: cy,\n      strokeStyle: \"dotted\",\n      opacity: GRID_OPACITY,\n      points: [\n        [0, 0],\n        [0, cy],\n      ],\n    });\n  });\n\n  return [\n    ...chartBaseElements(\n      spreadsheet,\n      x,\n      y,\n      groupId,\n      backgroundColor,\n      process.env.NODE_ENV === ENV.DEVELOPMENT,\n    ),\n    line,\n    ...lines,\n    ...dots,\n  ];\n};\n\nexport const renderSpreadsheet = (\n  chartType: string,\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n): ChartElements => {\n  if (chartType === \"line\") {\n    return chartTypeLine(spreadsheet, x, y);\n  }\n  return chartTypeBar(spreadsheet, x, y);\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"./element/types\";\nimport { getSelectedElements } from \"./scene\";\nimport { AppState, BinaryFiles } from \"./types\";\nimport { SVG_EXPORT_TAG } from \"./scene/export\";\nimport { tryParseSpreadsheet, Spreadsheet, VALID_SPREADSHEET } from \"./charts\";\nimport { EXPORT_DATA_TYPES, MIME_TYPES } from \"./constants\";\nimport { isInitializedImageElement } from \"./element/typeChecks\";\n\ntype ElementsClipboard = {\n  type: typeof EXPORT_DATA_TYPES.excalidrawClipboard;\n  elements: ExcalidrawElement[];\n  files: BinaryFiles | undefined;\n};\n\nexport interface ClipboardData {\n  spreadsheet?: Spreadsheet;\n  elements?: readonly ExcalidrawElement[];\n  files?: BinaryFiles;\n  text?: string;\n  errorMessage?: string;\n}\n\nlet CLIPBOARD = \"\";\nlet PREFER_APP_CLIPBOARD = false;\n\nexport const probablySupportsClipboardReadText =\n  \"clipboard\" in navigator && \"readText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardWriteText =\n  \"clipboard\" in navigator && \"writeText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardBlob =\n  \"clipboard\" in navigator &&\n  \"write\" in navigator.clipboard &&\n  \"ClipboardItem\" in window &&\n  \"toBlob\" in HTMLCanvasElement.prototype;\n\nconst clipboardContainsElements = (\n  contents: any,\n): contents is { elements: ExcalidrawElement[]; files?: BinaryFiles } => {\n  if (\n    [\n      EXPORT_DATA_TYPES.excalidraw,\n      EXPORT_DATA_TYPES.excalidrawClipboard,\n    ].includes(contents?.type) &&\n    Array.isArray(contents.elements)\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const copyToClipboard = async (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  files: BinaryFiles,\n) => {\n  // select binded text elements when copying\n  const selectedElements = getSelectedElements(elements, appState, true);\n  const contents: ElementsClipboard = {\n    type: EXPORT_DATA_TYPES.excalidrawClipboard,\n    elements: selectedElements,\n    files: selectedElements.reduce((acc, element) => {\n      if (isInitializedImageElement(element) && files[element.fileId]) {\n        acc[element.fileId] = files[element.fileId];\n      }\n      return acc;\n    }, {} as BinaryFiles),\n  };\n  const json = JSON.stringify(contents);\n  CLIPBOARD = json;\n  try {\n    PREFER_APP_CLIPBOARD = false;\n    await copyTextToSystemClipboard(json);\n  } catch (error: any) {\n    PREFER_APP_CLIPBOARD = true;\n    console.error(error);\n  }\n};\n\nconst getAppClipboard = (): Partial<ElementsClipboard> => {\n  if (!CLIPBOARD) {\n    return {};\n  }\n\n  try {\n    return JSON.parse(CLIPBOARD);\n  } catch (error: any) {\n    console.error(error);\n    return {};\n  }\n};\n\nconst parsePotentialSpreadsheet = (\n  text: string,\n): { spreadsheet: Spreadsheet } | { errorMessage: string } | null => {\n  const result = tryParseSpreadsheet(text);\n  if (result.type === VALID_SPREADSHEET) {\n    return { spreadsheet: result.spreadsheet };\n  }\n  return null;\n};\n\n/**\n * Retrieves content from system clipboard (either from ClipboardEvent or\n *  via async clipboard API if supported)\n */\nconst getSystemClipboard = async (\n  event: ClipboardEvent | null,\n): Promise<string> => {\n  try {\n    const text = event\n      ? event.clipboardData?.getData(\"text/plain\").trim()\n      : probablySupportsClipboardReadText &&\n        (await navigator.clipboard.readText());\n\n    return text || \"\";\n  } catch {\n    return \"\";\n  }\n};\n\n/**\n * Attempts to parse clipboard. Prefers system clipboard.\n */\nexport const parseClipboard = async (\n  event: ClipboardEvent | null,\n): Promise<ClipboardData> => {\n  const systemClipboard = await getSystemClipboard(event);\n\n  // if system clipboard empty, couldn't be resolved, or contains previously\n  // copied excalidraw scene as SVG, fall back to previously copied excalidraw\n  // elements\n  if (!systemClipboard || systemClipboard.includes(SVG_EXPORT_TAG)) {\n    return getAppClipboard();\n  }\n\n  // if system clipboard contains spreadsheet, use it even though it's\n  // technically possible it's staler than in-app clipboard\n  const spreadsheetResult = parsePotentialSpreadsheet(systemClipboard);\n  if (spreadsheetResult) {\n    return spreadsheetResult;\n  }\n\n  const appClipboardData = getAppClipboard();\n\n  try {\n    const systemClipboardData = JSON.parse(systemClipboard);\n    if (clipboardContainsElements(systemClipboardData)) {\n      return {\n        elements: systemClipboardData.elements,\n        files: systemClipboardData.files,\n      };\n    }\n    return appClipboardData;\n  } catch {\n    // system clipboard doesn't contain excalidraw elements → return plaintext\n    // unless we set a flag to prefer in-app clipboard because browser didn't\n    // support storing to system clipboard on copy\n    return PREFER_APP_CLIPBOARD && appClipboardData.elements\n      ? appClipboardData\n      : { text: systemClipboard };\n  }\n};\n\nexport const copyBlobToClipboardAsPng = async (blob: Blob) => {\n  await navigator.clipboard.write([\n    new window.ClipboardItem({ [MIME_TYPES.png]: blob }),\n  ]);\n};\n\nexport const copyTextToSystemClipboard = async (text: string | null) => {\n  let copied = false;\n  if (probablySupportsClipboardWriteText) {\n    try {\n      // NOTE: doesn't work on FF on non-HTTPS domains, or when document\n      // not focused\n      await navigator.clipboard.writeText(text || \"\");\n      copied = true;\n    } catch (error: any) {\n      console.error(error);\n    }\n  }\n\n  // Note that execCommand doesn't allow copying empty strings, so if we're\n  // clearing clipboard using this API, we must copy at least an empty char\n  if (!copied && !copyTextViaExecCommand(text || \" \")) {\n    throw new Error(\"couldn't copy\");\n  }\n};\n\n// adapted from https://github.com/zenorocha/clipboard.js/blob/ce79f170aa655c408b6aab33c9472e8e4fa52e19/src/clipboard-action.js#L48\nconst copyTextViaExecCommand = (text: string) => {\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n\n  const textarea = document.createElement(\"textarea\");\n\n  textarea.style.border = \"0\";\n  textarea.style.padding = \"0\";\n  textarea.style.margin = \"0\";\n  textarea.style.position = \"absolute\";\n  textarea.style[isRTL ? \"right\" : \"left\"] = \"-9999px\";\n  const yPosition = window.pageYOffset || document.documentElement.scrollTop;\n  textarea.style.top = `${yPosition}px`;\n  // Prevent zooming on iOS\n  textarea.style.fontSize = \"12pt\";\n\n  textarea.setAttribute(\"readonly\", \"\");\n  textarea.value = text;\n\n  document.body.appendChild(textarea);\n\n  let success = false;\n\n  try {\n    textarea.select();\n    textarea.setSelectionRange(0, textarea.value.length);\n\n    success = document.execCommand(\"copy\");\n  } catch (error: any) {\n    console.error(error);\n  }\n\n  textarea.remove();\n\n  return success;\n};\n","import {\n  copyBlobToClipboardAsPng,\n  copyTextToSystemClipboard,\n} from \"../clipboard\";\nimport { DEFAULT_EXPORT_PADDING, MIME_TYPES } from \"../constants\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { exportToCanvas, exportToSvg } from \"../scene/export\";\nimport { ExportType } from \"../scene/types\";\nimport { AppState, BinaryFiles } from \"../types\";\nimport { canvasToBlob } from \"./blob\";\nimport { fileSave, FileSystemHandle } from \"./filesystem\";\nimport { serializeAsJSON } from \"./json\";\n\nexport { loadFromBlob } from \"./blob\";\nexport { loadFromJSON, saveAsJSON } from \"./json\";\n\nexport const exportCanvas = async (\n  type: ExportType,\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  files: BinaryFiles,\n  {\n    exportBackground,\n    exportPadding = DEFAULT_EXPORT_PADDING,\n    viewBackgroundColor,\n    name,\n    fileHandle = null,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n    name: string;\n    fileHandle?: FileSystemHandle | null;\n  },\n) => {\n  if (elements.length === 0) {\n    throw new Error(t(\"alerts.cannotExportEmptyCanvas\"));\n  }\n  if (type === \"svg\" || type === \"clipboard-svg\") {\n    const tempSvg = await exportToSvg(\n      elements,\n      {\n        exportBackground,\n        exportWithDarkMode: appState.exportWithDarkMode,\n        viewBackgroundColor,\n        exportPadding,\n        exportScale: appState.exportScale,\n        exportEmbedScene: appState.exportEmbedScene && type === \"svg\",\n      },\n      files,\n    );\n    if (type === \"svg\") {\n      return await fileSave(\n        new Blob([tempSvg.outerHTML], { type: MIME_TYPES.svg }),\n        {\n          description: \"Export to SVG\",\n          name,\n          extension: \"svg\",\n          fileHandle,\n        },\n      );\n    } else if (type === \"clipboard-svg\") {\n      await copyTextToSystemClipboard(tempSvg.outerHTML);\n      return;\n    }\n  }\n\n  const tempCanvas = await exportToCanvas(elements, appState, files, {\n    exportBackground,\n    viewBackgroundColor,\n    exportPadding,\n  });\n  tempCanvas.style.display = \"none\";\n  document.body.appendChild(tempCanvas);\n  let blob = await canvasToBlob(tempCanvas);\n  tempCanvas.remove();\n\n  if (type === \"png\") {\n    if (appState.exportEmbedScene) {\n      blob = await (\n        await import(/* webpackChunkName: \"image\" */ \"./image\")\n      ).encodePngMetadata({\n        blob,\n        metadata: serializeAsJSON(elements, appState, files, \"local\"),\n      });\n    }\n\n    return await fileSave(blob, {\n      description: \"Export to PNG\",\n      name,\n      extension: \"png\",\n      fileHandle,\n    });\n  } else if (type === \"clipboard\") {\n    try {\n      await copyBlobToClipboardAsPng(blob);\n    } catch (error: any) {\n      if (error.name === \"CANVAS_POSSIBLY_TOO_BIG\") {\n        throw error;\n      }\n      throw new Error(t(\"alerts.couldNotCopyToClipboard\"));\n    }\n  }\n};\n","import { ExcalidrawElement } from \"../element/types\";\nimport { AppState, BinaryFiles } from \"../types\";\nimport { exportCanvas } from \".\";\nimport { getNonDeletedElements } from \"../element\";\nimport { getFileHandleType, isImageFileHandleType } from \"./blob\";\n\nexport const resaveAsImageWithScene = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  files: BinaryFiles,\n) => {\n  const { exportBackground, viewBackgroundColor, name, fileHandle } = appState;\n\n  const fileHandleType = getFileHandleType(fileHandle);\n\n  if (!fileHandle || !isImageFileHandleType(fileHandleType)) {\n    throw new Error(\n      \"fileHandle should exist and should be of type svg or png when resaving\",\n    );\n  }\n  appState = {\n    ...appState,\n    exportEmbedScene: true,\n  };\n\n  await exportCanvas(\n    fileHandleType,\n    getNonDeletedElements(elements),\n    appState,\n    files,\n    {\n      exportBackground,\n      viewBackgroundColor,\n      name,\n      fileHandle,\n    },\n  );\n\n  return { fileHandle };\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { checkIcon } from \"./icons\";\n\nimport \"./CheckboxItem.scss\";\n\nexport const CheckboxItem: React.FC<{\n  checked: boolean;\n  onChange: (checked: boolean, event: React.MouseEvent) => void;\n  className?: string;\n}> = ({ children, checked, onChange, className }) => {\n  return (\n    <div\n      className={clsx(\"Checkbox\", className, { \"is-checked\": checked })}\n      onClick={(event) => {\n        onChange(!checked, event);\n        (\n          (event.currentTarget as HTMLDivElement).querySelector(\n            \".Checkbox-box\",\n          ) as HTMLButtonElement\n        ).focus();\n      }}\n    >\n      <button className=\"Checkbox-box\" role=\"checkbox\" aria-checked={checked}>\n        {checkIcon}\n      </button>\n      <div className=\"Checkbox-label\">{children}</div>\n    </div>\n  );\n};\n","import \"./Stack.scss\";\n\nimport React from \"react\";\nimport clsx from \"clsx\";\n\ntype StackProps = {\n  children: React.ReactNode;\n  gap?: number;\n  align?: \"start\" | \"center\" | \"end\" | \"baseline\";\n  justifyContent?: \"center\" | \"space-around\" | \"space-between\";\n  className?: string | boolean;\n  style?: React.CSSProperties;\n};\n\nconst RowStack = ({\n  children,\n  gap,\n  align,\n  justifyContent,\n  className,\n  style,\n}: StackProps) => {\n  return (\n    <div\n      className={clsx(\"Stack Stack_horizontal\", className)}\n      style={{\n        \"--gap\": gap,\n        alignItems: align,\n        justifyContent,\n        ...style,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst ColStack = ({\n  children,\n  gap,\n  align,\n  justifyContent,\n  className,\n}: StackProps) => {\n  return (\n    <div\n      className={clsx(\"Stack Stack_vertical\", className)}\n      style={{\n        \"--gap\": gap,\n        justifyItems: align,\n        justifyContent,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default {\n  Row: RowStack,\n  Col: ColStack,\n};\n","import Stack from \"../components/Stack\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { save, file } from \"../components/icons\";\nimport { t } from \"../i18n\";\n\nimport \"./ActiveFile.scss\";\n\ntype ActiveFileProps = {\n  fileName?: string;\n  onSave: () => void;\n};\n\nexport const ActiveFile = ({ fileName, onSave }: ActiveFileProps) => (\n  <Stack.Row className=\"ActiveFile\" gap={1} align=\"center\">\n    <span className=\"ActiveFile__fileName\">\n      {file}\n      <span>{fileName}</span>\n    </span>\n    <ToolButton\n      type=\"icon\"\n      icon={save}\n      title={t(\"buttons.save\")}\n      aria-label={t(\"buttons.save\")}\n      onClick={onSave}\n      data-testid=\"save-button\"\n    />\n  </Stack.Row>\n);\n","import { trackEvent } from \"../analytics\";\nimport { load, questionCircle, saveAs } from \"../components/icons\";\nimport { ProjectName } from \"../components/ProjectName\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport \"../components/ToolIcon.scss\";\nimport { Tooltip } from \"../components/Tooltip\";\nimport { DarkModeToggle } from \"../components/DarkModeToggle\";\nimport { loadFromJSON, saveAsJSON } from \"../data\";\nimport { resaveAsImageWithScene } from \"../data/resave\";\nimport { t } from \"../i18n\";\nimport { useIsMobile } from \"../components/App\";\nimport { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { CheckboxItem } from \"../components/CheckboxItem\";\nimport { getExportSize } from \"../scene/export\";\nimport { DEFAULT_EXPORT_PADDING, EXPORT_SCALES, THEME } from \"../constants\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport { getNonDeletedElements } from \"../element\";\nimport { ActiveFile } from \"../components/ActiveFile\";\nimport { isImageFileHandle } from \"../data/blob\";\nimport { nativeFileSystemSupported } from \"../data/filesystem\";\nimport { Theme } from \"../element/types\";\n\nexport const actionChangeProjectName = register({\n  name: \"changeProjectName\",\n  perform: (_elements, appState, value) => {\n    trackEvent(\"change\", \"title\");\n    return { appState: { ...appState, name: value }, commitToHistory: false };\n  },\n  PanelComponent: ({ appState, updateData, appProps }) => (\n    <ProjectName\n      label={t(\"labels.fileTitle\")}\n      value={appState.name || \"Unnamed\"}\n      onChange={(name: string) => updateData(name)}\n      isNameEditable={\n        typeof appProps.name === \"undefined\" && !appState.viewModeEnabled\n      }\n    />\n  ),\n});\n\nexport const actionChangeExportScale = register({\n  name: \"changeExportScale\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportScale: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ elements: allElements, appState, updateData }) => {\n    const elements = getNonDeletedElements(allElements);\n    const exportSelected = isSomeElementSelected(elements, appState);\n    const exportedElements = exportSelected\n      ? getSelectedElements(elements, appState)\n      : elements;\n\n    return (\n      <>\n        {EXPORT_SCALES.map((s) => {\n          const [width, height] = getExportSize(\n            exportedElements,\n            DEFAULT_EXPORT_PADDING,\n            s,\n          );\n\n          const scaleButtonTitle = `${t(\n            \"buttons.scale\",\n          )} ${s}x (${width}x${height})`;\n\n          return (\n            <ToolButton\n              key={s}\n              size=\"small\"\n              type=\"radio\"\n              icon={`${s}x`}\n              name=\"export-canvas-scale\"\n              title={scaleButtonTitle}\n              aria-label={scaleButtonTitle}\n              id=\"export-canvas-scale\"\n              checked={s === appState.exportScale}\n              onChange={() => updateData(s)}\n            />\n          );\n        })}\n      </>\n    );\n  },\n});\n\nexport const actionChangeExportBackground = register({\n  name: \"changeExportBackground\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportBackground: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <CheckboxItem\n      checked={appState.exportBackground}\n      onChange={(checked) => updateData(checked)}\n    >\n      {t(\"labels.withBackground\")}\n    </CheckboxItem>\n  ),\n});\n\nexport const actionChangeExportEmbedScene = register({\n  name: \"changeExportEmbedScene\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportEmbedScene: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <CheckboxItem\n      checked={appState.exportEmbedScene}\n      onChange={(checked) => updateData(checked)}\n    >\n      {t(\"labels.exportEmbedScene\")}\n      <Tooltip label={t(\"labels.exportEmbedScene_details\")} long={true}>\n        <div className=\"excalidraw-tooltip-icon\">{questionCircle}</div>\n      </Tooltip>\n    </CheckboxItem>\n  ),\n});\n\nexport const actionSaveToActiveFile = register({\n  name: \"saveToActiveFile\",\n  perform: async (elements, appState, value, app) => {\n    const fileHandleExists = !!appState.fileHandle;\n\n    try {\n      const { fileHandle } = isImageFileHandle(appState.fileHandle)\n        ? await resaveAsImageWithScene(elements, appState, app.files)\n        : await saveAsJSON(elements, appState, app.files);\n\n      return {\n        commitToHistory: false,\n        appState: {\n          ...appState,\n          fileHandle,\n          toastMessage: fileHandleExists\n            ? fileHandle?.name\n              ? t(\"toast.fileSavedToFilename\").replace(\n                  \"{filename}\",\n                  `\"${fileHandle.name}\"`,\n                )\n              : t(\"toast.fileSaved\")\n            : null,\n        },\n      };\n    } catch (error: any) {\n      if (error?.name !== \"AbortError\") {\n        console.error(error);\n      } else {\n        console.warn(error);\n      }\n      return { commitToHistory: false };\n    }\n  },\n  keyTest: (event) =>\n    event.key === KEYS.S && event[KEYS.CTRL_OR_CMD] && !event.shiftKey,\n  PanelComponent: ({ updateData, appState }) => (\n    <ActiveFile\n      onSave={() => updateData(null)}\n      fileName={appState.fileHandle?.name}\n    />\n  ),\n});\n\nexport const actionSaveFileToDisk = register({\n  name: \"saveFileToDisk\",\n  perform: async (elements, appState, value, app) => {\n    try {\n      const { fileHandle } = await saveAsJSON(\n        elements,\n        {\n          ...appState,\n          fileHandle: null,\n        },\n        app.files,\n      );\n      return { commitToHistory: false, appState: { ...appState, fileHandle } };\n    } catch (error: any) {\n      if (error?.name !== \"AbortError\") {\n        console.error(error);\n      } else {\n        console.warn(error);\n      }\n      return { commitToHistory: false };\n    }\n  },\n  keyTest: (event) =>\n    event.key === KEYS.S && event.shiftKey && event[KEYS.CTRL_OR_CMD],\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={saveAs}\n      title={t(\"buttons.saveAs\")}\n      aria-label={t(\"buttons.saveAs\")}\n      showAriaLabel={useIsMobile()}\n      hidden={!nativeFileSystemSupported}\n      onClick={() => updateData(null)}\n      data-testid=\"save-as-button\"\n    />\n  ),\n});\n\nexport const actionLoadScene = register({\n  name: \"loadScene\",\n  perform: async (elements, appState, _, app) => {\n    try {\n      const {\n        elements: loadedElements,\n        appState: loadedAppState,\n        files,\n      } = await loadFromJSON(appState, elements);\n      return {\n        elements: loadedElements,\n        appState: loadedAppState,\n        files,\n        commitToHistory: true,\n      };\n    } catch (error: any) {\n      if (error?.name === \"AbortError\") {\n        console.warn(error);\n        return false;\n      }\n      return {\n        elements,\n        appState: { ...appState, errorMessage: error.message },\n        files: app.files,\n        commitToHistory: false,\n      };\n    }\n  },\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.O,\n  PanelComponent: ({ updateData, appState }) => (\n    <ToolButton\n      type=\"button\"\n      icon={load}\n      title={t(\"buttons.load\")}\n      aria-label={t(\"buttons.load\")}\n      showAriaLabel={useIsMobile()}\n      onClick={updateData}\n      data-testid=\"load-button\"\n    />\n  ),\n});\n\nexport const actionExportWithDarkMode = register({\n  name: \"exportWithDarkMode\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportWithDarkMode: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        marginTop: \"-45px\",\n        marginBottom: \"10px\",\n      }}\n    >\n      <DarkModeToggle\n        value={appState.exportWithDarkMode ? THEME.DARK : THEME.LIGHT}\n        onChange={(theme: Theme) => {\n          updateData(theme === THEME.DARK);\n        }}\n        title={t(\"labels.toggleExportColorScheme\")}\n      />\n    </div>\n  ),\n});\n","import {\n  isTextElement,\n  isExcalidrawElement,\n  redrawTextBoundingBox,\n} from \"../element\";\nimport { CODES, KEYS } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport {\n  DEFAULT_FONT_SIZE,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_TEXT_ALIGN,\n} from \"../constants\";\nimport { getContainerElement } from \"../element/textElement\";\n\n// `copiedStyles` is exported only for tests.\nexport let copiedStyles: string = \"{}\";\n\nexport const actionCopyStyles = register({\n  name: \"copyStyles\",\n  perform: (elements, appState) => {\n    const element = elements.find((el) => appState.selectedElementIds[el.id]);\n    if (element) {\n      copiedStyles = JSON.stringify(element);\n    }\n    return {\n      appState: {\n        ...appState,\n        toastMessage: t(\"toast.copyStyles\"),\n      },\n      commitToHistory: false,\n    };\n  },\n  contextItemLabel: \"labels.copyStyles\",\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.C,\n});\n\nexport const actionPasteStyles = register({\n  name: \"pasteStyles\",\n  perform: (elements, appState) => {\n    const pastedElement = JSON.parse(copiedStyles);\n    if (!isExcalidrawElement(pastedElement)) {\n      return { elements, commitToHistory: false };\n    }\n    return {\n      elements: elements.map((element) => {\n        if (appState.selectedElementIds[element.id]) {\n          const newElement = newElementWith(element, {\n            backgroundColor: pastedElement?.backgroundColor,\n            strokeWidth: pastedElement?.strokeWidth,\n            strokeColor: pastedElement?.strokeColor,\n            strokeStyle: pastedElement?.strokeStyle,\n            fillStyle: pastedElement?.fillStyle,\n            opacity: pastedElement?.opacity,\n            roughness: pastedElement?.roughness,\n          });\n          if (isTextElement(newElement) && isTextElement(element)) {\n            mutateElement(newElement, {\n              fontSize: pastedElement?.fontSize || DEFAULT_FONT_SIZE,\n              fontFamily: pastedElement?.fontFamily || DEFAULT_FONT_FAMILY,\n              textAlign: pastedElement?.textAlign || DEFAULT_TEXT_ALIGN,\n            });\n\n            redrawTextBoundingBox(\n              newElement,\n              getContainerElement(newElement),\n              appState,\n            );\n          }\n          return newElement;\n        }\n        return element;\n      }),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.pasteStyles\",\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.V,\n});\n","import { questionCircle } from \"../components/icons\";\n\ntype HelpIconProps = {\n  title?: string;\n  name?: string;\n  id?: string;\n  onClick?(): void;\n};\n\nexport const HelpIcon = (props: HelpIconProps) => (\n  <button\n    className=\"help-icon\"\n    onClick={props.onClick}\n    type=\"button\"\n    title={`${props.title} — ?`}\n    aria-label={props.title}\n  >\n    {questionCircle}\n  </button>\n);\n","import { CODES, KEYS } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { arrayToMap, getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport { UngroupIcon, GroupIcon } from \"../components/icons\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport {\n  getSelectedGroupIds,\n  selectGroup,\n  selectGroupsForSelectedElements,\n  getElementsInGroup,\n  addToGroup,\n  removeFromSelectedGroups,\n  isElementInGroup,\n} from \"../groups\";\nimport { getNonDeletedElements } from \"../element\";\nimport { randomId } from \"../random\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { ExcalidrawElement, ExcalidrawTextElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { isBoundToContainer } from \"../element/typeChecks\";\n\nconst allElementsInSameGroup = (elements: readonly ExcalidrawElement[]) => {\n  if (elements.length >= 2) {\n    const groupIds = elements[0].groupIds;\n    for (const groupId of groupIds) {\n      if (\n        elements.reduce(\n          (acc, element) => acc && isElementInGroup(element, groupId),\n          true,\n        )\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nconst enableActionGroup = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const selectedElements = getSelectedElements(\n    getNonDeletedElements(elements),\n    appState,\n    true,\n  );\n  return (\n    selectedElements.length >= 2 && !allElementsInSameGroup(selectedElements)\n  );\n};\n\nexport const actionGroup = register({\n  name: \"group\",\n  perform: (elements, appState) => {\n    const selectedElements = getSelectedElements(\n      getNonDeletedElements(elements),\n      appState,\n      true,\n    );\n    if (selectedElements.length < 2) {\n      // nothing to group\n      return { appState, elements, commitToHistory: false };\n    }\n    // if everything is already grouped into 1 group, there is nothing to do\n    const selectedGroupIds = getSelectedGroupIds(appState);\n    if (selectedGroupIds.length === 1) {\n      const selectedGroupId = selectedGroupIds[0];\n      const elementIdsInGroup = new Set(\n        getElementsInGroup(elements, selectedGroupId).map(\n          (element) => element.id,\n        ),\n      );\n      const selectedElementIds = new Set(\n        selectedElements.map((element) => element.id),\n      );\n      const combinedSet = new Set([\n        ...Array.from(elementIdsInGroup),\n        ...Array.from(selectedElementIds),\n      ]);\n      if (combinedSet.size === elementIdsInGroup.size) {\n        // no incremental ids in the selected ids\n        return { appState, elements, commitToHistory: false };\n      }\n    }\n    const newGroupId = randomId();\n    const selectElementIds = arrayToMap(selectedElements);\n    const updatedElements = elements.map((element) => {\n      if (!selectElementIds.get(element.id)) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: addToGroup(\n          element.groupIds,\n          newGroupId,\n          appState.editingGroupId,\n        ),\n      });\n    });\n    // keep the z order within the group the same, but move them\n    // to the z order of the highest element in the layer stack\n    const elementsInGroup = getElementsInGroup(updatedElements, newGroupId);\n    const lastElementInGroup = elementsInGroup[elementsInGroup.length - 1];\n    const lastGroupElementIndex =\n      updatedElements.lastIndexOf(lastElementInGroup);\n    const elementsAfterGroup = updatedElements.slice(lastGroupElementIndex + 1);\n    const elementsBeforeGroup = updatedElements\n      .slice(0, lastGroupElementIndex)\n      .filter(\n        (updatedElement) => !isElementInGroup(updatedElement, newGroupId),\n      );\n    const updatedElementsInOrder = [\n      ...elementsBeforeGroup,\n      ...elementsInGroup,\n      ...elementsAfterGroup,\n    ];\n\n    return {\n      appState: selectGroup(\n        newGroupId,\n        { ...appState, selectedGroupIds: {} },\n        getNonDeletedElements(updatedElementsInOrder),\n      ),\n      elements: updatedElementsInOrder,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.group\",\n  contextItemPredicate: (elements, appState) =>\n    enableActionGroup(elements, appState),\n  keyTest: (event) =>\n    !event.shiftKey && event[KEYS.CTRL_OR_CMD] && event.code === CODES.G,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<GroupIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.group\")} — ${getShortcutKey(\"CtrlOrCmd+G\")}`}\n      aria-label={t(\"labels.group\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    ></ToolButton>\n  ),\n});\n\nexport const actionUngroup = register({\n  name: \"ungroup\",\n  perform: (elements, appState) => {\n    const groupIds = getSelectedGroupIds(appState);\n    if (groupIds.length === 0) {\n      return { appState, elements, commitToHistory: false };\n    }\n\n    const boundTextElementIds: ExcalidrawTextElement[\"id\"][] = [];\n    const nextElements = elements.map((element) => {\n      if (isBoundToContainer(element)) {\n        boundTextElementIds.push(element.id);\n      }\n      const nextGroupIds = removeFromSelectedGroups(\n        element.groupIds,\n        appState.selectedGroupIds,\n      );\n      if (nextGroupIds.length === element.groupIds.length) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: nextGroupIds,\n      });\n    });\n\n    const updateAppState = selectGroupsForSelectedElements(\n      { ...appState, selectedGroupIds: {} },\n      getNonDeletedElements(nextElements),\n    );\n\n    // remove binded text elements from selection\n    boundTextElementIds.forEach(\n      (id) => (updateAppState.selectedElementIds[id] = false),\n    );\n    return {\n      appState: updateAppState,\n\n      elements: nextElements,\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    event.shiftKey && event[KEYS.CTRL_OR_CMD] && event.code === CODES.G,\n  contextItemLabel: \"labels.ungroup\",\n  contextItemPredicate: (elements, appState) =>\n    getSelectedGroupIds(appState).length > 0,\n\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      hidden={getSelectedGroupIds(appState).length === 0}\n      icon={<UngroupIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.ungroup\")} — ${getShortcutKey(\"CtrlOrCmd+Shift+G\")}`}\n      aria-label={t(\"labels.ungroup\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    ></ToolButton>\n  ),\n});\n","import { menu, palette } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { showSelectedShapeActions, getNonDeletedElements } from \"../element\";\nimport { register } from \"./register\";\nimport { allowFullScreen, exitFullScreen, isFullScreen } from \"../utils\";\nimport { CODES, KEYS } from \"../keys\";\nimport { HelpIcon } from \"../components/HelpIcon\";\n\nexport const actionToggleCanvasMenu = register({\n  name: \"toggleCanvasMenu\",\n  perform: (_, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"canvas\" ? null : \"canvas\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={menu}\n      aria-label={t(\"buttons.menu\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"canvas\"}\n    />\n  ),\n});\n\nexport const actionToggleEditMenu = register({\n  name: \"toggleEditMenu\",\n  perform: (_elements, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"shape\" ? null : \"shape\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      visible={showSelectedShapeActions(\n        appState,\n        getNonDeletedElements(elements),\n      )}\n      type=\"button\"\n      icon={palette}\n      aria-label={t(\"buttons.edit\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"shape\"}\n    />\n  ),\n});\n\nexport const actionFullScreen = register({\n  name: \"toggleFullScreen\",\n  perform: () => {\n    if (!isFullScreen()) {\n      allowFullScreen();\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    }\n    return {\n      commitToHistory: false,\n    };\n  },\n  keyTest: (event) => event.code === CODES.F && !event[KEYS.CTRL_OR_CMD],\n});\n\nexport const actionShortcuts = register({\n  name: \"toggleShortcuts\",\n  perform: (_elements, appState, _, { focusContainer }) => {\n    if (appState.showHelpDialog) {\n      focusContainer();\n    }\n    return {\n      appState: {\n        ...appState,\n        showHelpDialog: !appState.showHelpDialog,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <HelpIcon title={t(\"helpDialog.title\")} onClick={updateData} />\n  ),\n  keyTest: (event) => event.key === KEYS.QUESTION_MARK,\n});\n","import \"./Avatar.scss\";\n\nimport React from \"react\";\n\ntype AvatarProps = {\n  children: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  color: string;\n  border: string;\n};\n\nexport const Avatar = ({ children, color, border, onClick }: AvatarProps) => (\n  <div\n    className=\"Avatar\"\n    style={{ background: color, border: `1px solid ${border}` }}\n    onClick={onClick}\n  >\n    {children}\n  </div>\n);\n","import { register } from \"./register\";\nimport { getSelectedElements } from \"../scene\";\nimport { getNonDeletedElements } from \"../element\";\nimport { deepCopyElement } from \"../element/newElement\";\nimport { randomId } from \"../random\";\nimport { t } from \"../i18n\";\n\nexport const actionAddToLibrary = register({\n  name: \"addToLibrary\",\n  perform: (elements, appState, _, app) => {\n    const selectedElements = getSelectedElements(\n      getNonDeletedElements(elements),\n      appState,\n      true,\n    );\n    if (selectedElements.some((element) => element.type === \"image\")) {\n      return {\n        commitToHistory: false,\n        appState: {\n          ...appState,\n          errorMessage: \"Support for adding images to the library coming soon!\",\n        },\n      };\n    }\n\n    return app.library\n      .loadLibrary()\n      .then((items) => {\n        return app.library.saveLibrary([\n          {\n            id: randomId(),\n            status: \"unpublished\",\n            elements: selectedElements.map(deepCopyElement),\n            created: Date.now(),\n          },\n          ...items,\n        ]);\n      })\n      .then(() => {\n        return {\n          commitToHistory: false,\n          appState: {\n            ...appState,\n            toastMessage: t(\"toast.addedToLibrary\"),\n          },\n        };\n      })\n      .catch((error) => {\n        return {\n          commitToHistory: false,\n          appState: {\n            ...appState,\n            errorMessage: error.message,\n          },\n        };\n      });\n  },\n  contextItemLabel: \"labels.addToLibrary\",\n});\n","import { getClientColors, getClientInitials } from \"../clients\";\nimport { Avatar } from \"../components/Avatar\";\nimport { centerScrollOn } from \"../scene/scroll\";\nimport { Collaborator } from \"../types\";\nimport { register } from \"./register\";\n\nexport const actionGoToCollaborator = register({\n  name: \"goToCollaborator\",\n  perform: (_elements, appState, value) => {\n    const point = value as Collaborator[\"pointer\"];\n    if (!point) {\n      return { appState, commitToHistory: false };\n    }\n\n    return {\n      appState: {\n        ...appState,\n        ...centerScrollOn({\n          scenePoint: point,\n          viewportDimensions: {\n            width: appState.width,\n            height: appState.height,\n          },\n          zoom: appState.zoom,\n        }),\n        // Close mobile menu\n        openMenu: appState.openMenu === \"canvas\" ? null : appState.openMenu,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData, data }) => {\n    const clientId: string | undefined = data?.id;\n    if (!clientId) {\n      return null;\n    }\n\n    const collaborator = appState.collaborators.get(clientId);\n\n    if (!collaborator) {\n      return null;\n    }\n\n    const { background, stroke } = getClientColors(clientId, appState);\n    const shortName = getClientInitials(collaborator.username);\n\n    return (\n      <Avatar\n        color={background}\n        border={stroke}\n        onClick={() => updateData(collaborator.pointer)}\n      >\n        {shortName}\n      </Avatar>\n    );\n  },\n});\n","import { ExcalidrawElement } from \"./element/types\";\nimport { newElementWith } from \"./element/mutateElement\";\nimport { Box, getCommonBoundingBox } from \"./element/bounds\";\nimport { getMaximumGroups } from \"./groups\";\n\nexport interface Alignment {\n  position: \"start\" | \"center\" | \"end\";\n  axis: \"x\" | \"y\";\n}\n\nexport const alignElements = (\n  selectedElements: ExcalidrawElement[],\n  alignment: Alignment,\n): ExcalidrawElement[] => {\n  const groups: ExcalidrawElement[][] = getMaximumGroups(selectedElements);\n\n  const selectionBoundingBox = getCommonBoundingBox(selectedElements);\n\n  return groups.flatMap((group) => {\n    const translation = calculateTranslation(\n      group,\n      selectionBoundingBox,\n      alignment,\n    );\n    return group.map((element) =>\n      newElementWith(element, {\n        x: element.x + translation.x,\n        y: element.y + translation.y,\n      }),\n    );\n  });\n};\n\nconst calculateTranslation = (\n  group: ExcalidrawElement[],\n  selectionBoundingBox: Box,\n  { axis, position }: Alignment,\n): { x: number; y: number } => {\n  const groupBoundingBox = getCommonBoundingBox(group);\n\n  const [min, max]: [\"minX\" | \"minY\", \"maxX\" | \"maxY\"] =\n    axis === \"x\" ? [\"minX\", \"maxX\"] : [\"minY\", \"maxY\"];\n\n  const noTranslation = { x: 0, y: 0 };\n  if (position === \"start\") {\n    return {\n      ...noTranslation,\n      [axis]: selectionBoundingBox[min] - groupBoundingBox[min],\n    };\n  } else if (position === \"end\") {\n    return {\n      ...noTranslation,\n      [axis]: selectionBoundingBox[max] - groupBoundingBox[max],\n    };\n  } // else if (position === \"center\") {\n  return {\n    ...noTranslation,\n    [axis]:\n      (selectionBoundingBox[min] + selectionBoundingBox[max]) / 2 -\n      (groupBoundingBox[min] + groupBoundingBox[max]) / 2,\n  };\n};\n","import { alignElements, Alignment } from \"../align\";\nimport {\n  AlignBottomIcon,\n  AlignLeftIcon,\n  AlignRightIcon,\n  AlignTopIcon,\n  CenterHorizontallyIcon,\n  CenterVerticallyIcon,\n} from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { KEYS } from \"../keys\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport { AppState } from \"../types\";\nimport { arrayToMap, getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\n\nconst enableActionGroup = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => getSelectedElements(getNonDeletedElements(elements), appState).length > 1;\n\nconst alignSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: Readonly<AppState>,\n  alignment: Alignment,\n) => {\n  const selectedElements = getSelectedElements(\n    getNonDeletedElements(elements),\n    appState,\n  );\n\n  const updatedElements = alignElements(selectedElements, alignment);\n\n  const updatedElementsMap = arrayToMap(updatedElements);\n\n  return elements.map(\n    (element) => updatedElementsMap.get(element.id) || element,\n  );\n};\n\nexport const actionAlignTop = register({\n  name: \"alignTop\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, {\n        position: \"start\",\n        axis: \"y\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_UP,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<AlignTopIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignTop\")} — ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Up\",\n      )}`}\n      aria-label={t(\"labels.alignTop\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignBottom = register({\n  name: \"alignBottom\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, {\n        position: \"end\",\n        axis: \"y\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_DOWN,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<AlignBottomIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignBottom\")} — ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Down\",\n      )}`}\n      aria-label={t(\"labels.alignBottom\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignLeft = register({\n  name: \"alignLeft\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, {\n        position: \"start\",\n        axis: \"x\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_LEFT,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<AlignLeftIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignLeft\")} — ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Left\",\n      )}`}\n      aria-label={t(\"labels.alignLeft\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignRight = register({\n  name: \"alignRight\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, {\n        position: \"end\",\n        axis: \"x\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_RIGHT,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<AlignRightIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignRight\")} — ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Right\",\n      )}`}\n      aria-label={t(\"labels.alignRight\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignVerticallyCentered = register({\n  name: \"alignVerticallyCentered\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, {\n        position: \"center\",\n        axis: \"y\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<CenterVerticallyIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={t(\"labels.centerVertically\")}\n      aria-label={t(\"labels.centerVertically\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignHorizontallyCentered = register({\n  name: \"alignHorizontallyCentered\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, {\n        position: \"center\",\n        axis: \"x\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<CenterHorizontallyIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={t(\"labels.centerHorizontally\")}\n      aria-label={t(\"labels.centerHorizontally\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","import {\n  DistributeHorizontallyIcon,\n  DistributeVerticallyIcon,\n} from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { distributeElements, Distribution } from \"../disitrubte\";\nimport { getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { CODES, KEYS } from \"../keys\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport { AppState } from \"../types\";\nimport { arrayToMap, getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\n\nconst enableActionGroup = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => getSelectedElements(getNonDeletedElements(elements), appState).length > 1;\n\nconst distributeSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: Readonly<AppState>,\n  distribution: Distribution,\n) => {\n  const selectedElements = getSelectedElements(\n    getNonDeletedElements(elements),\n    appState,\n  );\n\n  const updatedElements = distributeElements(selectedElements, distribution);\n\n  const updatedElementsMap = arrayToMap(updatedElements);\n\n  return elements.map(\n    (element) => updatedElementsMap.get(element.id) || element,\n  );\n};\n\nexport const distributeHorizontally = register({\n  name: \"distributeHorizontally\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: distributeSelectedElements(elements, appState, {\n        space: \"between\",\n        axis: \"x\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.H,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<DistributeHorizontallyIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.distributeHorizontally\")} — ${getShortcutKey(\n        \"Alt+H\",\n      )}`}\n      aria-label={t(\"labels.distributeHorizontally\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const distributeVertically = register({\n  name: \"distributeVertically\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: distributeSelectedElements(elements, appState, {\n        space: \"between\",\n        axis: \"y\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.V,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<DistributeVerticallyIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.distributeVertically\")} — ${getShortcutKey(\"Alt+V\")}`}\n      aria-label={t(\"labels.distributeVertically\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","import { ExcalidrawElement } from \"./element/types\";\nimport { newElementWith } from \"./element/mutateElement\";\nimport { getMaximumGroups } from \"./groups\";\nimport { getCommonBoundingBox } from \"./element/bounds\";\n\nexport interface Distribution {\n  space: \"between\";\n  axis: \"x\" | \"y\";\n}\n\nexport const distributeElements = (\n  selectedElements: ExcalidrawElement[],\n  distribution: Distribution,\n): ExcalidrawElement[] => {\n  const [start, mid, end, extent] =\n    distribution.axis === \"x\"\n      ? ([\"minX\", \"midX\", \"maxX\", \"width\"] as const)\n      : ([\"minY\", \"midY\", \"maxY\", \"height\"] as const);\n\n  const bounds = getCommonBoundingBox(selectedElements);\n  const groups = getMaximumGroups(selectedElements)\n    .map((group) => [group, getCommonBoundingBox(group)] as const)\n    .sort((a, b) => a[1][mid] - b[1][mid]);\n\n  let span = 0;\n  for (const group of groups) {\n    span += group[1][extent];\n  }\n\n  const step = (bounds[extent] - span) / (groups.length - 1);\n\n  if (step < 0) {\n    // If we have a negative step, we'll need to distribute from centers\n    // rather than from gaps. Buckle up, this is a weird one.\n\n    // Get indices of boxes that define start and end of our bounding box\n    const index0 = groups.findIndex((g) => g[1][start] === bounds[start]);\n    const index1 = groups.findIndex((g) => g[1][end] === bounds[end]);\n\n    // Get our step, based on the distance between the center points of our\n    // start and end boxes\n    const step =\n      (groups[index1][1][mid] - groups[index0][1][mid]) / (groups.length - 1);\n\n    let pos = groups[index0][1][mid];\n\n    return groups.flatMap(([group, box], index) => {\n      const translation = {\n        x: 0,\n        y: 0,\n      };\n\n      // Don't move our start and end boxes\n      if (index !== index0 && index !== index1) {\n        pos += step;\n        translation[distribution.axis] = pos - box[mid];\n      }\n\n      return group.map((element) =>\n        newElementWith(element, {\n          x: element.x + translation.x,\n          y: element.y + translation.y,\n        }),\n      );\n    });\n  }\n\n  // Distribute from gaps\n\n  let pos = bounds[start];\n\n  return groups.flatMap(([group, box]) => {\n    const translation = {\n      x: 0,\n      y: 0,\n    };\n\n    translation[distribution.axis] = pos - box[start];\n\n    pos += step;\n    pos += box[extent];\n\n    return group.map((element) =>\n      newElementWith(element, {\n        x: element.x + translation.x,\n        y: element.y + translation.y,\n      }),\n    );\n  });\n};\n","import { register } from \"./register\";\nimport { getSelectedElements } from \"../scene\";\nimport { getNonDeletedElements } from \"../element\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { ExcalidrawElement, NonDeleted } from \"../element/types\";\nimport { normalizeAngle, resizeSingleElement } from \"../element/resizeElements\";\nimport { AppState } from \"../types\";\nimport { getTransformHandles } from \"../element/transformHandles\";\nimport { isFreeDrawElement, isLinearElement } from \"../element/typeChecks\";\nimport { updateBoundElements } from \"../element/binding\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { arrayToMap } from \"../utils\";\n\nconst enableActionFlipHorizontal = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const eligibleElements = getSelectedElements(\n    getNonDeletedElements(elements),\n    appState,\n  );\n  return eligibleElements.length === 1 && eligibleElements[0].type !== \"text\";\n};\n\nconst enableActionFlipVertical = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const eligibleElements = getSelectedElements(\n    getNonDeletedElements(elements),\n    appState,\n  );\n  return eligibleElements.length === 1;\n};\n\nexport const actionFlipHorizontal = register({\n  name: \"flipHorizontal\",\n  perform: (elements, appState) => {\n    return {\n      elements: flipSelectedElements(elements, appState, \"horizontal\"),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) => event.shiftKey && event.code === \"KeyH\",\n  contextItemLabel: \"labels.flipHorizontal\",\n  contextItemPredicate: (elements, appState) =>\n    enableActionFlipHorizontal(elements, appState),\n});\n\nexport const actionFlipVertical = register({\n  name: \"flipVertical\",\n  perform: (elements, appState) => {\n    return {\n      elements: flipSelectedElements(elements, appState, \"vertical\"),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) => event.shiftKey && event.code === \"KeyV\",\n  contextItemLabel: \"labels.flipVertical\",\n  contextItemPredicate: (elements, appState) =>\n    enableActionFlipVertical(elements, appState),\n});\n\nconst flipSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: Readonly<AppState>,\n  flipDirection: \"horizontal\" | \"vertical\",\n) => {\n  const selectedElements = getSelectedElements(\n    getNonDeletedElements(elements),\n    appState,\n  );\n\n  // remove once we allow for groups of elements to be flipped\n  if (selectedElements.length > 1) {\n    return elements;\n  }\n\n  const updatedElements = flipElements(\n    selectedElements,\n    appState,\n    flipDirection,\n  );\n\n  const updatedElementsMap = arrayToMap(updatedElements);\n\n  return elements.map(\n    (element) => updatedElementsMap.get(element.id) || element,\n  );\n};\n\nconst flipElements = (\n  elements: NonDeleted<ExcalidrawElement>[],\n  appState: AppState,\n  flipDirection: \"horizontal\" | \"vertical\",\n): ExcalidrawElement[] => {\n  elements.forEach((element) => {\n    flipElement(element, appState);\n    // If vertical flip, rotate an extra 180\n    if (flipDirection === \"vertical\") {\n      rotateElement(element, Math.PI);\n    }\n  });\n  return elements;\n};\n\nconst flipElement = (\n  element: NonDeleted<ExcalidrawElement>,\n  appState: AppState,\n) => {\n  const originalX = element.x;\n  const originalY = element.y;\n  const width = element.width;\n  const height = element.height;\n  const originalAngle = normalizeAngle(element.angle);\n\n  let finalOffsetX = 0;\n  if (isLinearElement(element) || isFreeDrawElement(element)) {\n    finalOffsetX =\n      element.points.reduce((max, point) => Math.max(max, point[0]), 0) * 2 -\n      element.width;\n  }\n\n  // Rotate back to zero, if necessary\n  mutateElement(element, {\n    angle: normalizeAngle(0),\n  });\n  // Flip unrotated by pulling TransformHandle to opposite side\n  const transformHandles = getTransformHandles(element, appState.zoom);\n  let usingNWHandle = true;\n  let newNCoordsX = 0;\n  let nHandle = transformHandles.nw;\n  if (!nHandle) {\n    // Use ne handle instead\n    usingNWHandle = false;\n    nHandle = transformHandles.ne;\n    if (!nHandle) {\n      mutateElement(element, {\n        angle: originalAngle,\n      });\n      return;\n    }\n  }\n\n  if (isLinearElement(element)) {\n    for (let index = 1; index < element.points.length; index++) {\n      LinearElementEditor.movePoints(element, [\n        { index, point: [-element.points[index][0], element.points[index][1]] },\n      ]);\n    }\n    LinearElementEditor.normalizePoints(element);\n  } else {\n    // calculate new x-coord for transformation\n    newNCoordsX = usingNWHandle ? element.x + 2 * width : element.x - 2 * width;\n    resizeSingleElement(\n      new Map().set(element.id, element),\n      true,\n      element,\n      usingNWHandle ? \"nw\" : \"ne\",\n      false,\n      newNCoordsX,\n      nHandle[1],\n    );\n    // fix the size to account for handle sizes\n    mutateElement(element, {\n      width,\n      height,\n    });\n  }\n\n  // Rotate by (360 degrees - original angle)\n  let angle = normalizeAngle(2 * Math.PI - originalAngle);\n  if (angle < 0) {\n    // check, probably unnecessary\n    angle = normalizeAngle(angle + 2 * Math.PI);\n  }\n  mutateElement(element, {\n    angle,\n  });\n\n  // Move back to original spot to appear \"flipped in place\"\n  mutateElement(element, {\n    x: originalX + finalOffsetX,\n    y: originalY,\n  });\n\n  updateBoundElements(element);\n};\n\nconst rotateElement = (element: ExcalidrawElement, rotationAngle: number) => {\n  const originalX = element.x;\n  const originalY = element.y;\n  let angle = normalizeAngle(element.angle + rotationAngle);\n  if (angle < 0) {\n    // check, probably unnecessary\n    angle = normalizeAngle(2 * Math.PI + angle);\n  }\n  mutateElement(element, {\n    angle,\n  });\n\n  // Move back to original spot\n  mutateElement(element, {\n    x: originalX,\n    y: originalY,\n  });\n};\n","import { CODES, KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { copyToClipboard } from \"../clipboard\";\nimport { actionDeleteSelected } from \"./actionDeleteSelected\";\nimport { getSelectedElements } from \"../scene/selection\";\nimport { exportCanvas } from \"../data/index\";\nimport { getNonDeletedElements } from \"../element\";\nimport { t } from \"../i18n\";\n\nexport const actionCopy = register({\n  name: \"copy\",\n  perform: (elements, appState, _, app) => {\n    copyToClipboard(getNonDeletedElements(elements), appState, app.files);\n\n    return {\n      commitToHistory: false,\n    };\n  },\n  contextItemLabel: \"labels.copy\",\n  // don't supply a shortcut since we handle this conditionally via onCopy event\n  keyTest: undefined,\n});\n\nexport const actionCut = register({\n  name: \"cut\",\n  perform: (elements, appState, data, app) => {\n    actionCopy.perform(elements, appState, data, app);\n    return actionDeleteSelected.perform(elements, appState);\n  },\n  contextItemLabel: \"labels.cut\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.code === CODES.X,\n});\n\nexport const actionCopyAsSvg = register({\n  name: \"copyAsSvg\",\n  perform: async (elements, appState, _data, app) => {\n    if (!app.canvas) {\n      return {\n        commitToHistory: false,\n      };\n    }\n    const selectedElements = getSelectedElements(\n      getNonDeletedElements(elements),\n      appState,\n      true,\n    );\n    try {\n      await exportCanvas(\n        \"clipboard-svg\",\n        selectedElements.length\n          ? selectedElements\n          : getNonDeletedElements(elements),\n        appState,\n        app.files,\n        appState,\n      );\n      return {\n        commitToHistory: false,\n      };\n    } catch (error: any) {\n      console.error(error);\n      return {\n        appState: {\n          ...appState,\n          errorMessage: error.message,\n        },\n        commitToHistory: false,\n      };\n    }\n  },\n  contextItemLabel: \"labels.copyAsSvg\",\n});\n\nexport const actionCopyAsPng = register({\n  name: \"copyAsPng\",\n  perform: async (elements, appState, _data, app) => {\n    if (!app.canvas) {\n      return {\n        commitToHistory: false,\n      };\n    }\n    const selectedElements = getSelectedElements(\n      getNonDeletedElements(elements),\n      appState,\n      true,\n    );\n    try {\n      await exportCanvas(\n        \"clipboard\",\n        selectedElements.length\n          ? selectedElements\n          : getNonDeletedElements(elements),\n        appState,\n        app.files,\n        appState,\n      );\n      return {\n        appState: {\n          ...appState,\n          toastMessage: t(\"toast.copyToClipboardAsPng\", {\n            exportSelection: selectedElements.length\n              ? t(\"toast.selection\")\n              : t(\"toast.canvas\"),\n            exportColorScheme: appState.exportWithDarkMode\n              ? t(\"buttons.darkMode\")\n              : t(\"buttons.lightMode\"),\n          }),\n        },\n        commitToHistory: false,\n      };\n    } catch (error: any) {\n      console.error(error);\n      return {\n        appState: {\n          ...appState,\n          errorMessage: error.message,\n        },\n        commitToHistory: false,\n      };\n    }\n  },\n  contextItemLabel: \"labels.copyAsPng\",\n  keyTest: (event) => event.code === CODES.C && event.altKey && event.shiftKey,\n});\n","import { CODES, KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { GRID_SIZE } from \"../constants\";\nimport { AppState } from \"../types\";\nimport { trackEvent } from \"../analytics\";\n\nexport const actionToggleGridMode = register({\n  name: \"gridMode\",\n  perform(elements, appState) {\n    trackEvent(\"view\", \"mode\", \"grid\");\n    return {\n      appState: {\n        ...appState,\n        gridSize: this.checked!(appState) ? null : GRID_SIZE,\n      },\n      commitToHistory: false,\n    };\n  },\n  checked: (appState: AppState) => appState.gridSize !== null,\n  contextItemLabel: \"labels.showGrid\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.code === CODES.QUOTE,\n});\n","import { CODES, KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { trackEvent } from \"../analytics\";\n\nexport const actionToggleZenMode = register({\n  name: \"zenMode\",\n  perform(elements, appState) {\n    trackEvent(\"view\", \"mode\", \"zen\");\n\n    return {\n      appState: {\n        ...appState,\n        zenModeEnabled: !this.checked!(appState),\n      },\n      commitToHistory: false,\n    };\n  },\n  checked: (appState) => appState.zenModeEnabled,\n  contextItemLabel: \"buttons.zenMode\",\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.Z,\n});\n","import { register } from \"./register\";\nimport { CODES, KEYS } from \"../keys\";\n\nexport const actionToggleStats = register({\n  name: \"stats\",\n  perform(elements, appState) {\n    return {\n      appState: {\n        ...appState,\n        showStats: !this.checked!(appState),\n      },\n      commitToHistory: false,\n    };\n  },\n  checked: (appState) => appState.showStats,\n  contextItemLabel: \"stats.title\",\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.SLASH,\n});\n","import { getNonDeletedElements } from \"../element\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { getBoundTextElement, measureText } from \"../element/textElement\";\nimport { ExcalidrawTextElement } from \"../element/types\";\nimport { getSelectedElements } from \"../scene\";\nimport { getFontString } from \"../utils\";\nimport { register } from \"./register\";\n\nexport const actionUnbindText = register({\n  name: \"unbindText\",\n  contextItemLabel: \"labels.unbindText\",\n  perform: (elements, appState) => {\n    const selectedElements = getSelectedElements(\n      getNonDeletedElements(elements),\n      appState,\n    );\n    selectedElements.forEach((element) => {\n      const boundTextElement = getBoundTextElement(element);\n      if (boundTextElement) {\n        const { width, height, baseline } = measureText(\n          boundTextElement.originalText,\n          getFontString(boundTextElement),\n        );\n        mutateElement(boundTextElement as ExcalidrawTextElement, {\n          containerId: null,\n          width,\n          height,\n          baseline,\n          text: boundTextElement.originalText,\n        });\n        mutateElement(element, {\n          boundElements: element.boundElements?.filter(\n            (ele) => ele.id !== boundTextElement.id,\n          ),\n        });\n      }\n    });\n    return {\n      elements,\n      appState,\n      commitToHistory: true,\n    };\n  },\n});\n","import { Action, ActionResult } from \"./types\";\nimport { undo, redo } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport History, { HistoryEntry } from \"../history\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { isWindows, KEYS } from \"../keys\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { fixBindingsAfterDeletion } from \"../element/binding\";\nimport { arrayToMap } from \"../utils\";\n\nconst writeData = (\n  prevElements: readonly ExcalidrawElement[],\n  appState: AppState,\n  updater: () => HistoryEntry | null,\n): ActionResult => {\n  const commitToHistory = false;\n  if (\n    !appState.multiElement &&\n    !appState.resizingElement &&\n    !appState.editingElement &&\n    !appState.draggingElement\n  ) {\n    const data = updater();\n    if (data === null) {\n      return { commitToHistory };\n    }\n\n    const prevElementMap = arrayToMap(prevElements);\n    const nextElements = data.elements;\n    const nextElementMap = arrayToMap(nextElements);\n\n    const deletedElements = prevElements.filter(\n      (prevElement) => !nextElementMap.has(prevElement.id),\n    );\n    const elements = nextElements\n      .map((nextElement) =>\n        newElementWith(\n          prevElementMap.get(nextElement.id) || nextElement,\n          nextElement,\n        ),\n      )\n      .concat(\n        deletedElements.map((prevElement) =>\n          newElementWith(prevElement, { isDeleted: true }),\n        ),\n      );\n    fixBindingsAfterDeletion(elements, deletedElements);\n\n    return {\n      elements,\n      appState: { ...appState, ...data.appState },\n      commitToHistory,\n      syncHistory: true,\n    };\n  }\n  return { commitToHistory };\n};\n\ntype ActionCreator = (history: History) => Action;\n\nexport const createUndoAction: ActionCreator = (history) => ({\n  name: \"undo\",\n  perform: (elements, appState) =>\n    writeData(elements, appState, () => history.undoOnce()),\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] &&\n    event.key.toLowerCase() === KEYS.Z &&\n    !event.shiftKey,\n  PanelComponent: ({ updateData, data }) => (\n    <ToolButton\n      type=\"button\"\n      icon={undo}\n      aria-label={t(\"buttons.undo\")}\n      onClick={updateData}\n      size={data?.size || \"medium\"}\n    />\n  ),\n  commitToHistory: () => false,\n});\n\nexport const createRedoAction: ActionCreator = (history) => ({\n  name: \"redo\",\n  perform: (elements, appState) =>\n    writeData(elements, appState, () => history.redoOnce()),\n  keyTest: (event) =>\n    (event[KEYS.CTRL_OR_CMD] &&\n      event.shiftKey &&\n      event.key.toLowerCase() === KEYS.Z) ||\n    (isWindows && event.ctrlKey && !event.shiftKey && event.key === KEYS.Y),\n  PanelComponent: ({ updateData, data }) => (\n    <ToolButton\n      type=\"button\"\n      icon={redo}\n      aria-label={t(\"buttons.redo\")}\n      onClick={updateData}\n      size={data?.size || \"medium\"}\n    />\n  ),\n  commitToHistory: () => false,\n});\n","import React from \"react\";\nimport {\n  Action,\n  ActionsManagerInterface,\n  UpdaterFn,\n  ActionName,\n  ActionResult,\n  PanelComponentProps,\n} from \"./types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppClassProperties, AppState } from \"../types\";\nimport { MODES } from \"../constants\";\nimport { trackEvent } from \"../analytics\";\n\nconst trackAction = (\n  action: Action,\n  source: \"ui\" | \"keyboard\" | \"api\",\n  value: any,\n) => {\n  if (action.trackEvent !== false) {\n    try {\n      if (action.trackEvent === true) {\n        trackEvent(\n          action.name,\n          source,\n          typeof value === \"number\" || typeof value === \"string\"\n            ? String(value)\n            : undefined,\n        );\n      } else {\n        action.trackEvent?.(action, source, value);\n      }\n    } catch (error) {\n      console.error(\"error while logging action:\", error);\n    }\n  }\n};\n\nexport class ActionManager implements ActionsManagerInterface {\n  actions = {} as ActionsManagerInterface[\"actions\"];\n\n  updater: (actionResult: ActionResult | Promise<ActionResult>) => void;\n\n  getAppState: () => Readonly<AppState>;\n  getElementsIncludingDeleted: () => readonly ExcalidrawElement[];\n  app: AppClassProperties;\n\n  constructor(\n    updater: UpdaterFn,\n    getAppState: () => AppState,\n    getElementsIncludingDeleted: () => readonly ExcalidrawElement[],\n    app: AppClassProperties,\n  ) {\n    this.updater = (actionResult) => {\n      if (actionResult && \"then\" in actionResult) {\n        actionResult.then((actionResult) => {\n          return updater(actionResult);\n        });\n      } else {\n        return updater(actionResult);\n      }\n    };\n    this.getAppState = getAppState;\n    this.getElementsIncludingDeleted = getElementsIncludingDeleted;\n    this.app = app;\n  }\n\n  registerAction(action: Action) {\n    this.actions[action.name] = action;\n  }\n\n  registerAll(actions: readonly Action[]) {\n    actions.forEach((action) => this.registerAction(action));\n  }\n\n  handleKeyDown(event: React.KeyboardEvent | KeyboardEvent) {\n    const canvasActions = this.app.props.UIOptions.canvasActions;\n    const data = Object.values(this.actions)\n      .sort((a, b) => (b.keyPriority || 0) - (a.keyPriority || 0))\n      .filter(\n        (action) =>\n          (action.name in canvasActions\n            ? canvasActions[action.name as keyof typeof canvasActions]\n            : true) &&\n          action.keyTest &&\n          action.keyTest(\n            event,\n            this.getAppState(),\n            this.getElementsIncludingDeleted(),\n          ),\n      );\n\n    if (data.length !== 1) {\n      if (data.length > 1) {\n        console.warn(\"Canceling as multiple actions match this shortcut\", data);\n      }\n      return false;\n    }\n\n    const action = data[0];\n\n    const { viewModeEnabled } = this.getAppState();\n    if (viewModeEnabled) {\n      if (!Object.values(MODES).includes(data[0].name)) {\n        return false;\n      }\n    }\n\n    trackAction(action, \"keyboard\", null);\n\n    event.preventDefault();\n    this.updater(\n      data[0].perform(\n        this.getElementsIncludingDeleted(),\n        this.getAppState(),\n        null,\n        this.app,\n      ),\n    );\n    return true;\n  }\n\n  executeAction(action: Action) {\n    this.updater(\n      action.perform(\n        this.getElementsIncludingDeleted(),\n        this.getAppState(),\n        null,\n        this.app,\n      ),\n    );\n    trackAction(action, \"api\", null);\n  }\n\n  /**\n   * @param data additional data sent to the PanelComponent\n   */\n  renderAction = (name: ActionName, data?: PanelComponentProps[\"data\"]) => {\n    const canvasActions = this.app.props.UIOptions.canvasActions;\n\n    if (\n      this.actions[name] &&\n      \"PanelComponent\" in this.actions[name] &&\n      (name in canvasActions\n        ? canvasActions[name as keyof typeof canvasActions]\n        : true)\n    ) {\n      const action = this.actions[name];\n      const PanelComponent = action.PanelComponent!;\n      const updateData = (formState?: any) => {\n        this.updater(\n          action.perform(\n            this.getElementsIncludingDeleted(),\n            this.getAppState(),\n            formState,\n            this.app,\n          ),\n        );\n\n        trackAction(action, \"ui\", formState);\n      };\n\n      return (\n        <PanelComponent\n          elements={this.getElementsIncludingDeleted()}\n          appState={this.getAppState()}\n          updateData={updateData}\n          appProps={this.app.props}\n          data={data}\n        />\n      );\n    }\n\n    return null;\n  };\n}\n","import { loadLibraryFromBlob } from \"./blob\";\nimport { LibraryItems, LibraryItem } from \"../types\";\nimport { restoreElements, restoreLibraryItems } from \"./restore\";\nimport { getNonDeletedElements } from \"../element\";\nimport type App from \"../components/App\";\n\nclass Library {\n  private libraryCache: LibraryItems | null = null;\n  private app: App;\n\n  constructor(app: App) {\n    this.app = app;\n  }\n\n  resetLibrary = async () => {\n    await this.app.props.onLibraryChange?.([]);\n    this.libraryCache = [];\n  };\n\n  restoreLibraryItem = (libraryItem: LibraryItem): LibraryItem | null => {\n    const elements = getNonDeletedElements(\n      restoreElements(libraryItem.elements, null),\n    );\n    return elements.length ? { ...libraryItem, elements } : null;\n  };\n\n  /** imports library (currently merges, removing duplicates) */\n  async importLibrary(blob: Blob, defaultStatus = \"unpublished\") {\n    const libraryFile = await loadLibraryFromBlob(blob);\n    if (!libraryFile || !(libraryFile.libraryItems || libraryFile.library)) {\n      return;\n    }\n\n    /**\n     * checks if library item does not exist already in current library\n     */\n    const isUniqueitem = (\n      existingLibraryItems: LibraryItems,\n      targetLibraryItem: LibraryItem,\n    ) => {\n      return !existingLibraryItems.find((libraryItem) => {\n        if (libraryItem.elements.length !== targetLibraryItem.elements.length) {\n          return false;\n        }\n\n        // detect z-index difference by checking the excalidraw elements\n        // are in order\n        return libraryItem.elements.every((libItemExcalidrawItem, idx) => {\n          return (\n            libItemExcalidrawItem.id === targetLibraryItem.elements[idx].id &&\n            libItemExcalidrawItem.versionNonce ===\n              targetLibraryItem.elements[idx].versionNonce\n          );\n        });\n      });\n    };\n\n    const existingLibraryItems = await this.loadLibrary();\n\n    const library = libraryFile.libraryItems || libraryFile.library || [];\n    const restoredLibItems = restoreLibraryItems(\n      library,\n      defaultStatus as \"published\" | \"unpublished\",\n    );\n    const filteredItems = [];\n    for (const item of restoredLibItems) {\n      const restoredItem = this.restoreLibraryItem(item as LibraryItem);\n      if (restoredItem && isUniqueitem(existingLibraryItems, restoredItem)) {\n        filteredItems.push(restoredItem);\n      }\n    }\n\n    await this.saveLibrary([...filteredItems, ...existingLibraryItems]);\n  }\n\n  loadLibrary = (): Promise<LibraryItems> => {\n    return new Promise(async (resolve) => {\n      if (this.libraryCache) {\n        return resolve(JSON.parse(JSON.stringify(this.libraryCache)));\n      }\n\n      try {\n        const libraryItems = this.app.libraryItemsFromStorage;\n        if (!libraryItems) {\n          return resolve([]);\n        }\n\n        const items = libraryItems.reduce((acc, item) => {\n          const restoredItem = this.restoreLibraryItem(item);\n          if (restoredItem) {\n            acc.push(item);\n          }\n          return acc;\n        }, [] as Mutable<LibraryItems>);\n\n        // clone to ensure we don't mutate the cached library elements in the app\n        this.libraryCache = JSON.parse(JSON.stringify(items));\n\n        resolve(items);\n      } catch (error: any) {\n        console.error(error);\n        resolve([]);\n      }\n    });\n  };\n\n  saveLibrary = async (items: LibraryItems) => {\n    const prevLibraryItems = this.libraryCache;\n    try {\n      const serializedItems = JSON.stringify(items);\n      // cache optimistically so that the app has access to the latest\n      // immediately\n      this.libraryCache = JSON.parse(serializedItems);\n      await this.app.props.onLibraryChange?.(items);\n    } catch (error: any) {\n      this.libraryCache = prevLibraryItems;\n      throw error;\n    }\n  };\n}\n\nexport default Library;\n","import { PointerCoords } from \"./types\";\n\nexport const getCenter = (pointers: Map<number, PointerCoords>) => {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: sum(allCoords, (coords) => coords.x) / allCoords.length,\n    y: sum(allCoords, (coords) => coords.y) / allCoords.length,\n  };\n};\n\nexport const getDistance = ([a, b]: readonly PointerCoords[]) =>\n  Math.hypot(a.x - b.x, a.y - b.y);\n\nconst sum = <T>(array: readonly T[], mapper: (item: T) => number): number =>\n  array.reduce((acc, item) => acc + mapper(item), 0);\n","import { AppState } from \"./types\";\nimport { ExcalidrawElement } from \"./element/types\";\nimport { isLinearElement } from \"./element/typeChecks\";\nimport { deepCopyElement } from \"./element/newElement\";\n\nexport interface HistoryEntry {\n  appState: ReturnType<typeof clearAppStatePropertiesForHistory>;\n  elements: ExcalidrawElement[];\n}\n\ninterface DehydratedExcalidrawElement {\n  id: string;\n  versionNonce: number;\n}\n\ninterface DehydratedHistoryEntry {\n  appState: string;\n  elements: DehydratedExcalidrawElement[];\n}\n\nconst clearAppStatePropertiesForHistory = (appState: AppState) => {\n  return {\n    selectedElementIds: appState.selectedElementIds,\n    selectedGroupIds: appState.selectedGroupIds,\n    viewBackgroundColor: appState.viewBackgroundColor,\n    editingLinearElement: appState.editingLinearElement,\n    editingGroupId: appState.editingGroupId,\n    name: appState.name,\n  };\n};\n\nclass History {\n  private elementCache = new Map<string, Map<number, ExcalidrawElement>>();\n  private recording: boolean = true;\n  private stateHistory: DehydratedHistoryEntry[] = [];\n  private redoStack: DehydratedHistoryEntry[] = [];\n  private lastEntry: HistoryEntry | null = null;\n\n  private hydrateHistoryEntry({\n    appState,\n    elements,\n  }: DehydratedHistoryEntry): HistoryEntry {\n    return {\n      appState: JSON.parse(appState),\n      elements: elements.map((dehydratedExcalidrawElement) => {\n        const element = this.elementCache\n          .get(dehydratedExcalidrawElement.id)\n          ?.get(dehydratedExcalidrawElement.versionNonce);\n        if (!element) {\n          throw new Error(\n            `Element not found: ${dehydratedExcalidrawElement.id}:${dehydratedExcalidrawElement.versionNonce}`,\n          );\n        }\n        return element;\n      }),\n    };\n  }\n\n  private dehydrateHistoryEntry({\n    appState,\n    elements,\n  }: HistoryEntry): DehydratedHistoryEntry {\n    return {\n      appState: JSON.stringify(appState),\n      elements: elements.map((element: ExcalidrawElement) => {\n        if (!this.elementCache.has(element.id)) {\n          this.elementCache.set(element.id, new Map());\n        }\n        const versions = this.elementCache.get(element.id)!;\n        if (!versions.has(element.versionNonce)) {\n          versions.set(element.versionNonce, deepCopyElement(element));\n        }\n        return {\n          id: element.id,\n          versionNonce: element.versionNonce,\n        };\n      }),\n    };\n  }\n\n  getSnapshotForTest() {\n    return {\n      recording: this.recording,\n      stateHistory: this.stateHistory.map((dehydratedHistoryEntry) =>\n        this.hydrateHistoryEntry(dehydratedHistoryEntry),\n      ),\n      redoStack: this.redoStack.map((dehydratedHistoryEntry) =>\n        this.hydrateHistoryEntry(dehydratedHistoryEntry),\n      ),\n    };\n  }\n\n  clear() {\n    this.stateHistory.length = 0;\n    this.redoStack.length = 0;\n    this.lastEntry = null;\n    this.elementCache.clear();\n  }\n\n  private generateEntry = (\n    appState: AppState,\n    elements: readonly ExcalidrawElement[],\n  ): DehydratedHistoryEntry =>\n    this.dehydrateHistoryEntry({\n      appState: clearAppStatePropertiesForHistory(appState),\n      elements: elements.reduce((elements, element) => {\n        if (\n          isLinearElement(element) &&\n          appState.multiElement &&\n          appState.multiElement.id === element.id\n        ) {\n          // don't store multi-point arrow if still has only one point\n          if (\n            appState.multiElement &&\n            appState.multiElement.id === element.id &&\n            element.points.length < 2\n          ) {\n            return elements;\n          }\n\n          elements.push({\n            ...element,\n            // don't store last point if not committed\n            points:\n              element.lastCommittedPoint !==\n              element.points[element.points.length - 1]\n                ? element.points.slice(0, -1)\n                : element.points,\n          });\n        } else {\n          elements.push(element);\n        }\n        return elements;\n      }, [] as Mutable<typeof elements>),\n    });\n\n  shouldCreateEntry(nextEntry: HistoryEntry): boolean {\n    const { lastEntry } = this;\n\n    if (!lastEntry) {\n      return true;\n    }\n\n    if (nextEntry.elements.length !== lastEntry.elements.length) {\n      return true;\n    }\n\n    // loop from right to left as changes are likelier to happen on new elements\n    for (let i = nextEntry.elements.length - 1; i > -1; i--) {\n      const prev = nextEntry.elements[i];\n      const next = lastEntry.elements[i];\n      if (\n        !prev ||\n        !next ||\n        prev.id !== next.id ||\n        prev.versionNonce !== next.versionNonce\n      ) {\n        return true;\n      }\n    }\n\n    // note: this is safe because entry's appState is guaranteed no excess props\n    let key: keyof typeof nextEntry.appState;\n    for (key in nextEntry.appState) {\n      if (key === \"editingLinearElement\") {\n        if (\n          nextEntry.appState[key]?.elementId ===\n          lastEntry.appState[key]?.elementId\n        ) {\n          continue;\n        }\n      }\n      if (key === \"selectedElementIds\" || key === \"selectedGroupIds\") {\n        continue;\n      }\n      if (nextEntry.appState[key] !== lastEntry.appState[key]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  pushEntry(appState: AppState, elements: readonly ExcalidrawElement[]) {\n    const newEntryDehydrated = this.generateEntry(appState, elements);\n    const newEntry: HistoryEntry = this.hydrateHistoryEntry(newEntryDehydrated);\n\n    if (newEntry) {\n      if (!this.shouldCreateEntry(newEntry)) {\n        return;\n      }\n\n      this.stateHistory.push(newEntryDehydrated);\n      this.lastEntry = newEntry;\n      // As a new entry was pushed, we invalidate the redo stack\n      this.clearRedoStack();\n    }\n  }\n\n  clearRedoStack() {\n    this.redoStack.splice(0, this.redoStack.length);\n  }\n\n  redoOnce(): HistoryEntry | null {\n    if (this.redoStack.length === 0) {\n      return null;\n    }\n\n    const entryToRestore = this.redoStack.pop();\n\n    if (entryToRestore !== undefined) {\n      this.stateHistory.push(entryToRestore);\n      return this.hydrateHistoryEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  undoOnce(): HistoryEntry | null {\n    if (this.stateHistory.length === 1) {\n      return null;\n    }\n\n    const currentEntry = this.stateHistory.pop();\n\n    const entryToRestore = this.stateHistory[this.stateHistory.length - 1];\n\n    if (currentEntry !== undefined) {\n      this.redoStack.push(currentEntry);\n      return this.hydrateHistoryEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  /**\n   * Updates history's `lastEntry` to latest app state. This is necessary\n   *  when doing undo/redo which itself doesn't commit to history, but updates\n   *  app state in a way that would break `shouldCreateEntry` which relies on\n   *  `lastEntry` to reflect last comittable history state.\n   * We can't update `lastEntry` from within history when calling undo/redo\n   *  because the action potentially mutates appState/elements before storing\n   *  it.\n   */\n  setCurrentState(appState: AppState, elements: readonly ExcalidrawElement[]) {\n    this.lastEntry = this.hydrateHistoryEntry(\n      this.generateEntry(appState, elements),\n    );\n  }\n\n  // Suspicious that this is called so many places. Seems error-prone.\n  resumeRecording() {\n    this.recording = true;\n  }\n\n  record(state: AppState, elements: readonly ExcalidrawElement[]) {\n    if (this.recording) {\n      this.pushEntry(state, elements);\n      this.recording = false;\n    }\n  }\n}\n\nexport default History;\n","import { KEYS } from \"./keys\";\n\n// We inline font-awesome icons in order to save on js size rather than including the font awesome react library\nexport const SHAPES = [\n  {\n    icon: (\n      // fa-mouse-pointer\n      <svg viewBox=\"0 0 320 512\" className=\"\">\n        <path d=\"M302.189 329.126H196.105l55.831 135.993c3.889 9.428-.555 19.999-9.444 23.999l-49.165 21.427c-9.165 4-19.443-.571-23.332-9.714l-53.053-129.136-86.664 89.138C18.729 472.71 0 463.554 0 447.977V18.299C0 1.899 19.921-6.096 30.277 5.443l284.412 292.542c11.472 11.179 3.007 31.141-12.5 31.141z\" />\n      </svg>\n    ),\n    value: \"selection\",\n    key: KEYS.V,\n  },\n  {\n    icon: (\n      // fa-square\n      <svg viewBox=\"0 0 448 512\">\n        <path d=\"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\" />\n      </svg>\n    ),\n    value: \"rectangle\",\n    key: KEYS.R,\n  },\n  {\n    icon: (\n      // custom\n      <svg viewBox=\"0 0 223.646 223.646\">\n        <path d=\"M111.823 0L16.622 111.823 111.823 223.646 207.025 111.823z\" />\n      </svg>\n    ),\n    value: \"diamond\",\n    key: KEYS.D,\n  },\n  {\n    icon: (\n      // fa-circle\n      <svg viewBox=\"0 0 512 512\">\n        <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />\n      </svg>\n    ),\n    value: \"ellipse\",\n    key: KEYS.E,\n  },\n  {\n    icon: (\n      // fa-long-arrow-alt-right\n      <svg viewBox=\"0 0 448 512\" className=\"rtl-mirror\">\n        <path d=\"M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z\" />\n      </svg>\n    ),\n    value: \"arrow\",\n    key: KEYS.A,\n  },\n  {\n    icon: (\n      // custom\n      <svg viewBox=\"0 0 6 6\">\n        <line\n          x1=\"0\"\n          y1=\"3\"\n          x2=\"6\"\n          y2=\"3\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n        />\n      </svg>\n    ),\n    value: \"line\",\n    key: [KEYS.P, KEYS.L],\n  },\n  {\n    icon: (\n      // fa-pencil\n      <svg viewBox=\"0 0 512 512\">\n        <path\n          fill=\"currentColor\"\n          d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n        ></path>\n      </svg>\n    ),\n    value: \"freedraw\",\n    key: [KEYS.X, KEYS.P.toUpperCase()],\n  },\n  {\n    icon: (\n      // fa-font\n      <svg viewBox=\"0 0 448 512\">\n        <path d=\"M432 416h-23.41L277.88 53.69A32 32 0 0 0 247.58 32h-47.16a32 32 0 0 0-30.3 21.69L39.41 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-19.58l23.3-64h152.56l23.3 64H304a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM176.85 272L224 142.51 271.15 272z\" />\n      </svg>\n    ),\n    value: \"text\",\n    key: KEYS.T,\n  },\n  {\n    icon: (\n      // fa-image\n      <svg viewBox=\"0 0 512 512\">\n        <path\n          fill=\"currentColor\"\n          d=\"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm-6 336H54a6 6 0 0 1-6-6V118a6 6 0 0 1 6-6h404a6 6 0 0 1 6 6v276a6 6 0 0 1-6 6zM128 152c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zM96 352h320v-80l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L192 304l-39.515-39.515c-4.686-4.686-12.284-4.686-16.971 0L96 304v48z\"\n        ></path>\n      </svg>\n    ),\n    value: \"image\",\n    key: null,\n  },\n] as const;\n\nexport const findShapeByKey = (key: string) => {\n  const shape = SHAPES.find((shape, index) => {\n    return (\n      key === (index + 1).toString() ||\n      (shape.key &&\n        (typeof shape.key === \"string\"\n          ? shape.key === key\n          : (shape.key as readonly string[]).includes(key)))\n    );\n  });\n  return shape?.value || null;\n};\n","import { t } from \"../i18n\";\nimport { isDarwin } from \"../keys\";\nimport { getShortcutKey } from \"../utils\";\nimport { ActionName } from \"./types\";\n\nexport type ShortcutName = SubtypeOf<\n  ActionName,\n  | \"cut\"\n  | \"copy\"\n  | \"paste\"\n  | \"copyStyles\"\n  | \"pasteStyles\"\n  | \"selectAll\"\n  | \"deleteSelectedElements\"\n  | \"duplicateSelection\"\n  | \"sendBackward\"\n  | \"bringForward\"\n  | \"sendToBack\"\n  | \"bringToFront\"\n  | \"copyAsPng\"\n  | \"copyAsSvg\"\n  | \"group\"\n  | \"ungroup\"\n  | \"gridMode\"\n  | \"zenMode\"\n  | \"stats\"\n  | \"addToLibrary\"\n  | \"viewMode\"\n  | \"flipHorizontal\"\n  | \"flipVertical\"\n  | \"hyperlink\"\n>;\n\nconst shortcutMap: Record<ShortcutName, string[]> = {\n  cut: [getShortcutKey(\"CtrlOrCmd+X\")],\n  copy: [getShortcutKey(\"CtrlOrCmd+C\")],\n  paste: [getShortcutKey(\"CtrlOrCmd+V\")],\n  copyStyles: [getShortcutKey(\"CtrlOrCmd+Alt+C\")],\n  pasteStyles: [getShortcutKey(\"CtrlOrCmd+Alt+V\")],\n  selectAll: [getShortcutKey(\"CtrlOrCmd+A\")],\n  deleteSelectedElements: [getShortcutKey(\"Del\")],\n  duplicateSelection: [\n    getShortcutKey(\"CtrlOrCmd+D\"),\n    getShortcutKey(`Alt+${t(\"helpDialog.drag\")}`),\n  ],\n  sendBackward: [getShortcutKey(\"CtrlOrCmd+[\")],\n  bringForward: [getShortcutKey(\"CtrlOrCmd+]\")],\n  sendToBack: [\n    isDarwin\n      ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n      : getShortcutKey(\"CtrlOrCmd+Shift+[\"),\n  ],\n  bringToFront: [\n    isDarwin\n      ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n      : getShortcutKey(\"CtrlOrCmd+Shift+]\"),\n  ],\n  copyAsPng: [getShortcutKey(\"Shift+Alt+C\")],\n  copyAsSvg: [],\n  group: [getShortcutKey(\"CtrlOrCmd+G\")],\n  ungroup: [getShortcutKey(\"CtrlOrCmd+Shift+G\")],\n  gridMode: [getShortcutKey(\"CtrlOrCmd+'\")],\n  zenMode: [getShortcutKey(\"Alt+Z\")],\n  stats: [getShortcutKey(\"Alt+/\")],\n  addToLibrary: [],\n  flipHorizontal: [getShortcutKey(\"Shift+H\")],\n  flipVertical: [getShortcutKey(\"Shift+V\")],\n  viewMode: [getShortcutKey(\"Alt+R\")],\n  hyperlink: [getShortcutKey(\"CtrlOrCmd+K\")],\n};\n\nexport const getShortcutFromShortcutName = (name: ShortcutName) => {\n  const shortcuts = shortcutMap[name];\n  // if multiple shortcuts available, take the first one\n  return shortcuts && shortcuts.length > 0 ? shortcuts[0] : \"\";\n};\n","import { render, unmountComponentAtNode } from \"react-dom\";\nimport clsx from \"clsx\";\nimport { Popover } from \"./Popover\";\nimport { t } from \"../i18n\";\n\nimport \"./ContextMenu.scss\";\nimport {\n  getShortcutFromShortcutName,\n  ShortcutName,\n} from \"../actions/shortcuts\";\nimport { Action } from \"../actions/types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { AppState } from \"../types\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\n\nexport type ContextMenuOption = \"separator\" | Action;\n\ntype ContextMenuProps = {\n  options: ContextMenuOption[];\n  onCloseRequest?(): void;\n  top: number;\n  left: number;\n  actionManager: ActionManager;\n  appState: Readonly<AppState>;\n  elements: readonly NonDeletedExcalidrawElement[];\n};\n\nconst ContextMenu = ({\n  options,\n  onCloseRequest,\n  top,\n  left,\n  actionManager,\n  appState,\n  elements,\n}: ContextMenuProps) => {\n  return (\n    <Popover\n      onCloseRequest={onCloseRequest}\n      top={top}\n      left={left}\n      fitInViewport={true}\n      offsetLeft={appState.offsetLeft}\n      offsetTop={appState.offsetTop}\n      viewportWidth={appState.width}\n      viewportHeight={appState.height}\n    >\n      <ul\n        className=\"context-menu\"\n        onContextMenu={(event) => event.preventDefault()}\n      >\n        {options.map((option, idx) => {\n          if (option === \"separator\") {\n            return <hr key={idx} className=\"context-menu-option-separator\" />;\n          }\n\n          const actionName = option.name;\n          let label = \"\";\n          if (option.contextItemLabel) {\n            if (typeof option.contextItemLabel === \"function\") {\n              label = t(option.contextItemLabel(elements, appState));\n            } else {\n              label = t(option.contextItemLabel);\n            }\n          }\n          return (\n            <li key={idx} data-testid={actionName} onClick={onCloseRequest}>\n              <button\n                className={clsx(\"context-menu-option\", {\n                  dangerous: actionName === \"deleteSelectedElements\",\n                  checkmark: option.checked?.(appState),\n                })}\n                onClick={() => actionManager.executeAction(option)}\n              >\n                <div className=\"context-menu-option__label\">{label}</div>\n                <kbd className=\"context-menu-option__shortcut\">\n                  {actionName\n                    ? getShortcutFromShortcutName(actionName as ShortcutName)\n                    : \"\"}\n                </kbd>\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </Popover>\n  );\n};\n\nconst contextMenuNodeByContainer = new WeakMap<HTMLElement, HTMLDivElement>();\n\nconst getContextMenuNode = (container: HTMLElement): HTMLDivElement => {\n  let contextMenuNode = contextMenuNodeByContainer.get(container);\n  if (contextMenuNode) {\n    return contextMenuNode;\n  }\n  contextMenuNode = document.createElement(\"div\");\n  container\n    .querySelector(\".excalidraw-contextMenuContainer\")!\n    .appendChild(contextMenuNode);\n  contextMenuNodeByContainer.set(container, contextMenuNode);\n  return contextMenuNode;\n};\n\ntype ContextMenuParams = {\n  options: (ContextMenuOption | false | null | undefined)[];\n  top: ContextMenuProps[\"top\"];\n  left: ContextMenuProps[\"left\"];\n  actionManager: ContextMenuProps[\"actionManager\"];\n  appState: Readonly<AppState>;\n  container: HTMLElement;\n  elements: readonly NonDeletedExcalidrawElement[];\n};\n\nconst handleClose = (container: HTMLElement) => {\n  const contextMenuNode = contextMenuNodeByContainer.get(container);\n  if (contextMenuNode) {\n    unmountComponentAtNode(contextMenuNode);\n    contextMenuNode.remove();\n    contextMenuNodeByContainer.delete(container);\n  }\n};\n\nexport default {\n  push(params: ContextMenuParams) {\n    const options = Array.of<ContextMenuOption>();\n    params.options.forEach((option) => {\n      if (option) {\n        options.push(option);\n      }\n    });\n    if (options.length) {\n      render(\n        <ContextMenu\n          top={params.top}\n          left={params.left}\n          options={options}\n          onCloseRequest={() => handleClose(params.container)}\n          actionManager={params.actionManager}\n          appState={params.appState}\n          elements={params.elements}\n        />,\n        getContextMenuNode(params.container),\n      );\n    }\n  },\n};\n","import React from \"react\";\nimport { ActionManager } from \"../actions/manager\";\nimport { getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement, PointerType } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { useIsMobile } from \"../components/App\";\nimport {\n  canChangeSharpness,\n  canHaveArrowheads,\n  getTargetElements,\n  hasBackground,\n  hasStrokeStyle,\n  hasStrokeWidth,\n  hasText,\n} from \"../scene\";\nimport { SHAPES } from \"../shapes\";\nimport { AppState, Zoom } from \"../types\";\nimport { capitalizeString, isTransparent, setCursorForShape } from \"../utils\";\nimport Stack from \"./Stack\";\nimport { ToolButton } from \"./ToolButton\";\nimport { hasStrokeColor } from \"../scene/comparisons\";\nimport { hasBoundTextElement, isBoundToContainer } from \"../element/typeChecks\";\n\nexport const SelectedShapeActions = ({\n  appState,\n  elements,\n  renderAction,\n  elementType,\n}: {\n  appState: AppState;\n  elements: readonly ExcalidrawElement[];\n  renderAction: ActionManager[\"renderAction\"];\n  elementType: AppState[\"elementType\"];\n}) => {\n  const targetElements = getTargetElements(\n    getNonDeletedElements(elements),\n    appState,\n  );\n\n  let isSingleElementBoundContainer = false;\n  if (\n    targetElements.length === 2 &&\n    (hasBoundTextElement(targetElements[0]) ||\n      hasBoundTextElement(targetElements[1]))\n  ) {\n    isSingleElementBoundContainer = true;\n  }\n  const isEditing = Boolean(appState.editingElement);\n  const isMobile = useIsMobile();\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n\n  const showFillIcons =\n    hasBackground(elementType) ||\n    targetElements.some(\n      (element) =>\n        hasBackground(element.type) && !isTransparent(element.backgroundColor),\n    );\n  const showChangeBackgroundIcons =\n    hasBackground(elementType) ||\n    targetElements.some((element) => hasBackground(element.type));\n\n  let commonSelectedType: string | null = targetElements[0]?.type || null;\n\n  for (const element of targetElements) {\n    if (element.type !== commonSelectedType) {\n      commonSelectedType = null;\n      break;\n    }\n  }\n\n  return (\n    <div className=\"panelColumn\">\n      {((hasStrokeColor(elementType) &&\n        elementType !== \"image\" &&\n        commonSelectedType !== \"image\") ||\n        targetElements.some((element) => hasStrokeColor(element.type))) &&\n        renderAction(\"changeStrokeColor\")}\n      {showChangeBackgroundIcons && renderAction(\"changeBackgroundColor\")}\n      {showFillIcons && renderAction(\"changeFillStyle\")}\n\n      {(hasStrokeWidth(elementType) ||\n        targetElements.some((element) => hasStrokeWidth(element.type))) &&\n        renderAction(\"changeStrokeWidth\")}\n\n      {(elementType === \"freedraw\" ||\n        targetElements.some((element) => element.type === \"freedraw\")) &&\n        renderAction(\"changeStrokeShape\")}\n\n      {(hasStrokeStyle(elementType) ||\n        targetElements.some((element) => hasStrokeStyle(element.type))) && (\n        <>\n          {renderAction(\"changeStrokeStyle\")}\n          {renderAction(\"changeSloppiness\")}\n        </>\n      )}\n\n      {(canChangeSharpness(elementType) ||\n        targetElements.some((element) => canChangeSharpness(element.type))) && (\n        <>{renderAction(\"changeSharpness\")}</>\n      )}\n\n      {(hasText(elementType) ||\n        targetElements.some((element) => hasText(element.type))) && (\n        <>\n          {renderAction(\"changeFontSize\")}\n\n          {renderAction(\"changeFontFamily\")}\n\n          {renderAction(\"changeTextAlign\")}\n        </>\n      )}\n\n      {targetElements.some(\n        (element) =>\n          hasBoundTextElement(element) || isBoundToContainer(element),\n      ) && renderAction(\"changeVerticalAlign\")}\n      {(canHaveArrowheads(elementType) ||\n        targetElements.some((element) => canHaveArrowheads(element.type))) && (\n        <>{renderAction(\"changeArrowhead\")}</>\n      )}\n\n      {renderAction(\"changeOpacity\")}\n\n      <fieldset>\n        <legend>{t(\"labels.layers\")}</legend>\n        <div className=\"buttonList\">\n          {renderAction(\"sendToBack\")}\n          {renderAction(\"sendBackward\")}\n          {renderAction(\"bringToFront\")}\n          {renderAction(\"bringForward\")}\n        </div>\n      </fieldset>\n\n      {targetElements.length > 1 && !isSingleElementBoundContainer && (\n        <fieldset>\n          <legend>{t(\"labels.align\")}</legend>\n          <div className=\"buttonList\">\n            {\n              // swap this order for RTL so the button positions always match their action\n              // (i.e. the leftmost button aligns left)\n            }\n            {isRTL ? (\n              <>\n                {renderAction(\"alignRight\")}\n                {renderAction(\"alignHorizontallyCentered\")}\n                {renderAction(\"alignLeft\")}\n              </>\n            ) : (\n              <>\n                {renderAction(\"alignLeft\")}\n                {renderAction(\"alignHorizontallyCentered\")}\n                {renderAction(\"alignRight\")}\n              </>\n            )}\n            {targetElements.length > 2 &&\n              renderAction(\"distributeHorizontally\")}\n            <div className=\"iconRow\">\n              {renderAction(\"alignTop\")}\n              {renderAction(\"alignVerticallyCentered\")}\n              {renderAction(\"alignBottom\")}\n              {targetElements.length > 2 &&\n                renderAction(\"distributeVertically\")}\n            </div>\n          </div>\n        </fieldset>\n      )}\n      {!isEditing && targetElements.length > 0 && (\n        <fieldset>\n          <legend>{t(\"labels.actions\")}</legend>\n          <div className=\"buttonList\">\n            {!isMobile && renderAction(\"duplicateSelection\")}\n            {!isMobile && renderAction(\"deleteSelectedElements\")}\n            {renderAction(\"group\")}\n            {renderAction(\"ungroup\")}\n            {targetElements.length === 1 && renderAction(\"hyperlink\")}\n          </div>\n        </fieldset>\n      )}\n    </div>\n  );\n};\n\nexport const ShapesSwitcher = ({\n  canvas,\n  elementType,\n  setAppState,\n  onImageAction,\n}: {\n  canvas: HTMLCanvasElement | null;\n  elementType: AppState[\"elementType\"];\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  onImageAction: (data: { pointerType: PointerType | null }) => void;\n}) => (\n  <>\n    {SHAPES.map(({ value, icon, key }, index) => {\n      const label = t(`toolBar.${value}`);\n      const letter = key && (typeof key === \"string\" ? key : key[0]);\n      const shortcut = letter\n        ? `${capitalizeString(letter)} ${t(\"helpDialog.or\")} ${index + 1}`\n        : `${index + 1}`;\n      return (\n        <ToolButton\n          className=\"Shape\"\n          key={value}\n          type=\"radio\"\n          icon={icon}\n          checked={elementType === value}\n          name=\"editor-current-shape\"\n          title={`${capitalizeString(label)} — ${shortcut}`}\n          keyBindingLabel={`${index + 1}`}\n          aria-label={capitalizeString(label)}\n          aria-keyshortcuts={shortcut}\n          data-testid={value}\n          onChange={({ pointerType }) => {\n            setAppState({\n              elementType: value,\n              multiElement: null,\n              selectedElementIds: {},\n            });\n            setCursorForShape(canvas, value);\n            if (value === \"image\") {\n              onImageAction({ pointerType });\n            }\n          }}\n        />\n      );\n    })}\n  </>\n);\n\nexport const ZoomActions = ({\n  renderAction,\n  zoom,\n}: {\n  renderAction: ActionManager[\"renderAction\"];\n  zoom: Zoom;\n}) => (\n  <Stack.Col gap={1}>\n    <Stack.Row gap={1} align=\"center\">\n      {renderAction(\"zoomOut\")}\n      {renderAction(\"zoomIn\")}\n      {renderAction(\"resetZoom\")}\n    </Stack.Row>\n  </Stack.Col>\n);\n","import React from \"react\";\nimport { ActionManager } from \"../actions/manager\";\nimport { AppState } from \"../types\";\n\nexport const BackgroundPickerAndDarkModeToggle = ({\n  appState,\n  setAppState,\n  actionManager,\n  showThemeBtn,\n}: {\n  actionManager: ActionManager;\n  appState: AppState;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  showThemeBtn: boolean;\n}) => (\n  <div style={{ display: \"flex\" }}>\n    {actionManager.renderAction(\"changeViewBackgroundColor\")}\n    {showThemeBtn && actionManager.renderAction(\"toggleTheme\")}\n  </div>\n);\n","import clsx from \"clsx\";\nimport { ToolButton } from \"./ToolButton\";\nimport { t } from \"../i18n\";\nimport { useIsMobile } from \"../components/App\";\nimport { users } from \"./icons\";\n\nimport \"./CollabButton.scss\";\n\nconst CollabButton = ({\n  isCollaborating,\n  collaboratorCount,\n  onClick,\n}: {\n  isCollaborating: boolean;\n  collaboratorCount: number;\n  onClick: () => void;\n}) => {\n  return (\n    <>\n      <ToolButton\n        className={clsx(\"CollabButton\", {\n          \"is-collaborating\": isCollaborating,\n        })}\n        onClick={onClick}\n        icon={users}\n        type=\"button\"\n        title={t(\"labels.liveCollaboration\")}\n        aria-label={t(\"labels.liveCollaboration\")}\n        showAriaLabel={useIsMobile()}\n      >\n        {collaboratorCount > 0 && (\n          <div className=\"CollabButton-collaborators\">{collaboratorCount}</div>\n        )}\n      </ToolButton>\n    </>\n  );\n};\n\nexport default CollabButton;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\nimport { ActionsManagerInterface } from \"../actions/types\";\nimport { probablySupportsClipboardBlob } from \"../clipboard\";\nimport { canvasToBlob } from \"../data/blob\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { CanvasError } from \"../errors\";\nimport { t } from \"../i18n\";\nimport { useIsMobile } from \"./App\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport { exportToCanvas } from \"../scene/export\";\nimport { AppState, BinaryFiles } from \"../types\";\nimport { Dialog } from \"./Dialog\";\nimport { clipboard, exportImage } from \"./icons\";\nimport Stack from \"./Stack\";\nimport { ToolButton } from \"./ToolButton\";\nimport \"./ExportDialog.scss\";\nimport OpenColor from \"open-color\";\nimport { CheckboxItem } from \"./CheckboxItem\";\nimport { DEFAULT_EXPORT_PADDING } from \"../constants\";\nimport { nativeFileSystemSupported } from \"../data/filesystem\";\n\nconst supportsContextFilters =\n  \"filter\" in document.createElement(\"canvas\").getContext(\"2d\")!;\n\nexport const ErrorCanvasPreview = () => {\n  return (\n    <div>\n      <h3>{t(\"canvasError.cannotShowPreview\")}</h3>\n      <p>\n        <span>{t(\"canvasError.canvasTooBig\")}</span>\n      </p>\n      <em>({t(\"canvasError.canvasTooBigTip\")})</em>\n    </div>\n  );\n};\n\nconst renderPreview = (\n  content: HTMLCanvasElement | Error,\n  previewNode: HTMLDivElement,\n) => {\n  unmountComponentAtNode(previewNode);\n  previewNode.innerHTML = \"\";\n  if (content instanceof HTMLCanvasElement) {\n    previewNode.appendChild(content);\n  } else {\n    render(<ErrorCanvasPreview />, previewNode);\n  }\n};\n\nexport type ExportCB = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  scale?: number,\n) => void;\n\nconst ExportButton: React.FC<{\n  color: keyof OpenColor;\n  onClick: () => void;\n  title: string;\n  shade?: number;\n}> = ({ children, title, onClick, color, shade = 6 }) => {\n  return (\n    <button\n      className=\"ExportDialog-imageExportButton\"\n      style={{\n        [\"--button-color\" as any]: OpenColor[color][shade],\n        [\"--button-color-darker\" as any]: OpenColor[color][shade + 1],\n        [\"--button-color-darkest\" as any]: OpenColor[color][shade + 2],\n      }}\n      title={title}\n      aria-label={title}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nconst ImageExportModal = ({\n  elements,\n  appState,\n  files,\n  exportPadding = DEFAULT_EXPORT_PADDING,\n  actionManager,\n  onExportToPng,\n  onExportToSvg,\n  onExportToClipboard,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  files: BinaryFiles;\n  exportPadding?: number;\n  actionManager: ActionsManagerInterface;\n  onExportToPng: ExportCB;\n  onExportToSvg: ExportCB;\n  onExportToClipboard: ExportCB;\n  onCloseRequest: () => void;\n}) => {\n  const someElementIsSelected = isSomeElementSelected(elements, appState);\n  const [exportSelected, setExportSelected] = useState(someElementIsSelected);\n  const previewRef = useRef<HTMLDivElement>(null);\n  const { exportBackground, viewBackgroundColor } = appState;\n\n  const exportedElements = exportSelected\n    ? getSelectedElements(elements, appState, true)\n    : elements;\n\n  useEffect(() => {\n    setExportSelected(someElementIsSelected);\n  }, [someElementIsSelected]);\n\n  useEffect(() => {\n    const previewNode = previewRef.current;\n    if (!previewNode) {\n      return;\n    }\n    exportToCanvas(exportedElements, appState, files, {\n      exportBackground,\n      viewBackgroundColor,\n      exportPadding,\n    })\n      .then((canvas) => {\n        // if converting to blob fails, there's some problem that will\n        // likely prevent preview and export (e.g. canvas too big)\n        return canvasToBlob(canvas).then(() => {\n          renderPreview(canvas, previewNode);\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n        renderPreview(new CanvasError(), previewNode);\n      });\n  }, [\n    appState,\n    files,\n    exportedElements,\n    exportBackground,\n    exportPadding,\n    viewBackgroundColor,\n  ]);\n\n  return (\n    <div className=\"ExportDialog\">\n      <div className=\"ExportDialog__preview\" ref={previewRef} />\n      {supportsContextFilters &&\n        actionManager.renderAction(\"exportWithDarkMode\")}\n      <div style={{ display: \"grid\", gridTemplateColumns: \"1fr\" }}>\n        <div\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(auto-fit, minmax(190px, 1fr))\",\n            // dunno why this is needed, but when the items wrap it creates\n            // an overflow\n            overflow: \"hidden\",\n          }}\n        >\n          {actionManager.renderAction(\"changeExportBackground\")}\n          {someElementIsSelected && (\n            <CheckboxItem\n              checked={exportSelected}\n              onChange={(checked) => setExportSelected(checked)}\n            >\n              {t(\"labels.onlySelected\")}\n            </CheckboxItem>\n          )}\n          {actionManager.renderAction(\"changeExportEmbedScene\")}\n        </div>\n      </div>\n      <div style={{ display: \"flex\", alignItems: \"center\", marginTop: \".6em\" }}>\n        <Stack.Row gap={2}>\n          {actionManager.renderAction(\"changeExportScale\")}\n        </Stack.Row>\n        <p style={{ marginLeft: \"1em\", userSelect: \"none\" }}>Scale</p>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          margin: \".6em 0\",\n        }}\n      >\n        {!nativeFileSystemSupported &&\n          actionManager.renderAction(\"changeProjectName\")}\n      </div>\n      <Stack.Row gap={2} justifyContent=\"center\" style={{ margin: \"2em 0\" }}>\n        <ExportButton\n          color=\"indigo\"\n          title={t(\"buttons.exportToPng\")}\n          aria-label={t(\"buttons.exportToPng\")}\n          onClick={() => onExportToPng(exportedElements)}\n        >\n          PNG\n        </ExportButton>\n        <ExportButton\n          color=\"red\"\n          title={t(\"buttons.exportToSvg\")}\n          aria-label={t(\"buttons.exportToSvg\")}\n          onClick={() => onExportToSvg(exportedElements)}\n        >\n          SVG\n        </ExportButton>\n        {probablySupportsClipboardBlob && (\n          <ExportButton\n            title={t(\"buttons.copyPngToClipboard\")}\n            onClick={() => onExportToClipboard(exportedElements)}\n            color=\"gray\"\n            shade={7}\n          >\n            {clipboard}\n          </ExportButton>\n        )}\n      </Stack.Row>\n    </div>\n  );\n};\n\nexport const ImageExportDialog = ({\n  elements,\n  appState,\n  files,\n  exportPadding = DEFAULT_EXPORT_PADDING,\n  actionManager,\n  onExportToPng,\n  onExportToSvg,\n  onExportToClipboard,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  files: BinaryFiles;\n  exportPadding?: number;\n  actionManager: ActionsManagerInterface;\n  onExportToPng: ExportCB;\n  onExportToSvg: ExportCB;\n  onExportToClipboard: ExportCB;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(false);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n  }, []);\n\n  return (\n    <>\n      <ToolButton\n        onClick={() => {\n          setModalIsShown(true);\n        }}\n        data-testid=\"image-export-button\"\n        icon={exportImage}\n        type=\"button\"\n        aria-label={t(\"buttons.exportImage\")}\n        showAriaLabel={useIsMobile()}\n        title={t(\"buttons.exportImage\")}\n      />\n      {modalIsShown && (\n        <Dialog onCloseRequest={handleClose} title={t(\"buttons.exportImage\")}>\n          <ImageExportModal\n            elements={elements}\n            appState={appState}\n            files={files}\n            exportPadding={exportPadding}\n            actionManager={actionManager}\n            onExportToPng={onExportToPng}\n            onExportToSvg={onExportToSvg}\n            onExportToClipboard={onExportToClipboard}\n            onCloseRequest={handleClose}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import \"./FixedSideContainer.scss\";\n\nimport React from \"react\";\nimport clsx from \"clsx\";\n\ntype FixedSideContainerProps = {\n  children: React.ReactNode;\n  side: \"top\" | \"left\" | \"right\";\n  className?: string;\n};\n\nexport const FixedSideContainer = ({\n  children,\n  side,\n  className,\n}: FixedSideContainerProps) => (\n  <div\n    className={clsx(\n      \"FixedSideContainer\",\n      `FixedSideContainer_side_${side}`,\n      className,\n    )}\n  >\n    {children}\n  </div>\n);\n","import { t } from \"../i18n\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { getSelectedElements } from \"../scene\";\n\nimport \"./HintViewer.scss\";\nimport { AppState } from \"../types\";\nimport {\n  isImageElement,\n  isLinearElement,\n  isTextBindableContainer,\n  isTextElement,\n} from \"../element/typeChecks\";\nimport { getShortcutKey } from \"../utils\";\nimport { isEraserActive } from \"../appState\";\n\ninterface HintViewerProps {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  isMobile: boolean;\n}\n\nconst getHints = ({ appState, elements, isMobile }: HintViewerProps) => {\n  const { elementType, isResizing, isRotating, lastPointerDownWith } = appState;\n  const multiMode = appState.multiElement !== null;\n\n  if (isEraserActive(appState)) {\n    return t(\"hints.eraserRevert\");\n  }\n  if (elementType === \"arrow\" || elementType === \"line\") {\n    if (!multiMode) {\n      return t(\"hints.linearElement\");\n    }\n    return t(\"hints.linearElementMulti\");\n  }\n\n  if (elementType === \"freedraw\") {\n    return t(\"hints.freeDraw\");\n  }\n\n  if (elementType === \"text\") {\n    return t(\"hints.text\");\n  }\n\n  if (appState.elementType === \"image\" && appState.pendingImageElement) {\n    return t(\"hints.placeImage\");\n  }\n\n  const selectedElements = getSelectedElements(elements, appState);\n\n  if (\n    isResizing &&\n    lastPointerDownWith === \"mouse\" &&\n    selectedElements.length === 1\n  ) {\n    const targetElement = selectedElements[0];\n    if (isLinearElement(targetElement) && targetElement.points.length === 2) {\n      return t(\"hints.lockAngle\");\n    }\n    return isImageElement(targetElement)\n      ? t(\"hints.resizeImage\")\n      : t(\"hints.resize\");\n  }\n\n  if (isRotating && lastPointerDownWith === \"mouse\") {\n    return t(\"hints.rotate\");\n  }\n\n  if (selectedElements.length === 1 && isTextElement(selectedElements[0])) {\n    return t(\"hints.text_selected\");\n  }\n\n  if (appState.editingElement && isTextElement(appState.editingElement)) {\n    return t(\"hints.text_editing\");\n  }\n\n  if (elementType === \"selection\") {\n    if (\n      appState.draggingElement?.type === \"selection\" &&\n      !appState.editingElement &&\n      !appState.editingLinearElement\n    ) {\n      return t(\"hints.deepBoxSelect\");\n    }\n    if (!selectedElements.length && !isMobile) {\n      return t(\"hints.canvasPanning\");\n    }\n  }\n\n  if (selectedElements.length === 1) {\n    if (isLinearElement(selectedElements[0])) {\n      if (appState.editingLinearElement) {\n        return appState.editingLinearElement.selectedPointsIndices\n          ? t(\"hints.lineEditor_pointSelected\")\n          : t(\"hints.lineEditor_nothingSelected\");\n      }\n      return t(\"hints.lineEditor_info\");\n    }\n    if (isTextBindableContainer(selectedElements[0])) {\n      return t(\"hints.bindTextToElement\");\n    }\n  }\n\n  return null;\n};\n\nexport const HintViewer = ({\n  appState,\n  elements,\n  isMobile,\n}: HintViewerProps) => {\n  let hint = getHints({\n    appState,\n    elements,\n    isMobile,\n  });\n  if (!hint) {\n    return null;\n  }\n\n  hint = getShortcutKey(hint);\n\n  return (\n    <div className=\"HintViewer\">\n      <span>{hint}</span>\n    </div>\n  );\n};\n","import \"./Island.scss\";\n\nimport React from \"react\";\nimport clsx from \"clsx\";\n\ntype IslandProps = {\n  children: React.ReactNode;\n  padding?: number;\n  className?: string | boolean;\n  style?: object;\n};\n\nexport const Island = React.forwardRef<HTMLDivElement, IslandProps>(\n  ({ children, padding, className, style }, ref) => (\n    <div\n      className={clsx(\"Island\", className)}\n      style={{ \"--padding\": padding, ...style }}\n      ref={ref}\n    >\n      {children}\n    </div>\n  ),\n);\n","import { t } from \"../i18n\";\n\nexport const LoadingMessage = () => {\n  // !! KEEP THIS IN SYNC WITH index.html !!\n  return (\n    <div className=\"LoadingMessage\">\n      <span>{t(\"labels.loadingScene\")}</span>\n    </div>\n  );\n};\n","import \"./ToolIcon.scss\";\n\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { ToolButtonSize } from \"./ToolButton\";\n\ntype LockIconProps = {\n  title?: string;\n  name?: string;\n  checked: boolean;\n  onChange?(): void;\n  zenModeEnabled?: boolean;\n  isMobile?: boolean;\n};\n\nconst DEFAULT_SIZE: ToolButtonSize = \"medium\";\n\nconst ICONS = {\n  CHECKED: (\n    <svg\n      width=\"1792\"\n      height=\"1792\"\n      viewBox=\"0 0 1792 1792\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\" />\n    </svg>\n  ),\n  UNCHECKED: (\n    <svg\n      width=\"1792\"\n      height=\"1792\"\n      viewBox=\"0 0 1792 1792\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"unlocked-icon rtl-mirror\"\n    >\n      <path d=\"M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\" />\n    </svg>\n  ),\n};\n\nexport const LockButton = (props: LockIconProps) => {\n  return (\n    <label\n      className={clsx(\n        \"ToolIcon ToolIcon__lock ToolIcon_type_floating\",\n        `ToolIcon_size_${DEFAULT_SIZE}`,\n        {\n          \"is-mobile\": props.isMobile,\n        },\n      )}\n      title={`${props.title} — Q`}\n    >\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"checkbox\"\n        name={props.name}\n        onChange={props.onChange}\n        checked={props.checked}\n        aria-label={props.title}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.checked ? ICONS.CHECKED : ICONS.UNCHECKED}\n      </div>\n    </label>\n  );\n};\n","import React from \"react\";\nimport { t } from \"../i18n\";\nimport { useExcalidrawContainer } from \"./App\";\n\ninterface SectionProps extends React.HTMLProps<HTMLElement> {\n  heading: string;\n  children: React.ReactNode | ((header: React.ReactNode) => React.ReactNode);\n}\n\nexport const Section = ({ heading, children, ...props }: SectionProps) => {\n  const { id } = useExcalidrawContainer();\n  const header = (\n    <h2 className=\"visually-hidden\" id={`${id}-${heading}-title`}>\n      {t(`headings.${heading}`)}\n    </h2>\n  );\n  return (\n    <section {...props} aria-labelledby={`${id}-${heading}-title`}>\n      {typeof children === \"function\" ? (\n        children(header)\n      ) : (\n        <>\n          {header}\n          {children}\n        </>\n      )}\n    </section>\n  );\n};\n","import \"./UserList.scss\";\n\nimport React from \"react\";\nimport clsx from \"clsx\";\n\ntype UserListProps = {\n  children: React.ReactNode;\n  className?: string;\n  mobile?: boolean;\n};\n\nexport const UserList = ({ children, className, mobile }: UserListProps) => {\n  return (\n    <div className={clsx(\"UserList\", className, { UserList_mobile: mobile })}>\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { t } from \"../i18n\";\nimport { AppState } from \"../types\";\nimport { capitalizeString } from \"../utils\";\n\nconst LIBRARY_ICON = (\n  <svg viewBox=\"0 0 576 512\">\n    <path\n      fill=\"currentColor\"\n      d=\"M542.22 32.05c-54.8 3.11-163.72 14.43-230.96 55.59-4.64 2.84-7.27 7.89-7.27 13.17v363.87c0 11.55 12.63 18.85 23.28 13.49 69.18-34.82 169.23-44.32 218.7-46.92 16.89-.89 30.02-14.43 30.02-30.66V62.75c.01-17.71-15.35-31.74-33.77-30.7zM264.73 87.64C197.5 46.48 88.58 35.17 33.78 32.05 15.36 31.01 0 45.04 0 62.75V400.6c0 16.24 13.13 29.78 30.02 30.66 49.49 2.6 149.59 12.11 218.77 46.95 10.62 5.35 23.21-1.94 23.21-13.46V100.63c0-5.29-2.62-10.14-7.27-12.99z\"\n    ></path>\n  </svg>\n);\n\nexport const LibraryButton: React.FC<{\n  appState: AppState;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  isMobile?: boolean;\n}> = ({ appState, setAppState, isMobile }) => {\n  return (\n    <label\n      className={clsx(\n        \"ToolIcon ToolIcon_type_floating ToolIcon__library\",\n        `ToolIcon_size_medium`,\n        {\n          \"is-mobile\": isMobile,\n        },\n      )}\n      title={`${capitalizeString(t(\"toolBar.library\"))} — 0`}\n    >\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"checkbox\"\n        name=\"editor-library\"\n        onChange={(event) => {\n          setAppState({ isLibraryOpen: event.target.checked });\n        }}\n        checked={appState.isLibraryOpen}\n        aria-label={capitalizeString(t(\"toolBar.library\"))}\n        aria-keyshortcuts=\"0\"\n      />\n      <div className=\"ToolIcon__icon\">{LIBRARY_ICON}</div>\n    </label>\n  );\n};\n","import \"./ToolIcon.scss\";\n\nimport clsx from \"clsx\";\nimport { ToolButtonSize } from \"./ToolButton\";\n\ntype PenModeIconProps = {\n  title?: string;\n  name?: string;\n  checked: boolean;\n  onChange?(): void;\n  zenModeEnabled?: boolean;\n  isMobile?: boolean;\n  penDetected: boolean;\n};\n\nconst DEFAULT_SIZE: ToolButtonSize = \"medium\";\n\nconst ICONS = {\n  CHECKED: (\n    <svg\n      width=\"205\"\n      height=\"205\"\n      viewBox=\"0 0 205 205\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"m35 195-25-29.17V50h50v115l-25 30\" />\n      <path d=\"M10 40V10h50v30H10\" />\n      <path d=\"M125 145h70v50h-70\" />\n      <path d=\"M190 145v-30l-10-20h-40l-10 20v30h15v-30l5-5h20l5 5v30h15\" />\n    </svg>\n  ),\n  UNCHECKED: (\n    <svg\n      width=\"205\"\n      height=\"205\"\n      viewBox=\"0 0 205 205\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"unlocked-icon rtl-mirror\"\n    >\n      <path d=\"m35 195-25-29.17V50h50v115l-25 30\" />\n      <path d=\"M10 40V10h50v30H10\" />\n      <path d=\"M125 145h70v50h-70\" />\n      <path d=\"M145 145v-30l-10-20H95l-10 20v30h15v-30l5-5h20l5 5v30h15\" />\n    </svg>\n  ),\n};\n\nexport const PenModeButton = (props: PenModeIconProps) => {\n  if (!props.penDetected) {\n    if (props.isMobile) {\n      return null;\n    }\n    return (\n      <label\n        className={clsx(\n          \"ToolIcon ToolIcon__penMode ToolIcon_type_floating\",\n          `ToolIcon_size_${DEFAULT_SIZE}`,\n          {\n            \"is-mobile\": props.isMobile,\n          },\n        )}\n      >\n        <div className=\"ToolIcon__icon ToolIcon__hidden\" />\n      </label>\n    );\n  }\n  return (\n    <label\n      className={clsx(\n        \"ToolIcon ToolIcon__penMode ToolIcon_type_floating\",\n        `ToolIcon_size_${DEFAULT_SIZE}`,\n        {\n          \"is-mobile\": props.isMobile,\n        },\n      )}\n      title={`${props.title}`}\n    >\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"checkbox\"\n        name={props.name}\n        onChange={props.onChange}\n        checked={props.checked}\n        aria-label={props.title}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.checked ? ICONS.CHECKED : ICONS.UNCHECKED}\n      </div>\n    </label>\n  );\n};\n","import React from \"react\";\nimport { AppState } from \"../types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { t } from \"../i18n\";\nimport Stack from \"./Stack\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { Island } from \"./Island\";\nimport { HintViewer } from \"./HintViewer\";\nimport { calculateScrollCenter, getSelectedElements } from \"../scene\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport CollabButton from \"./CollabButton\";\nimport { SCROLLBAR_WIDTH, SCROLLBAR_MARGIN } from \"../scene/scrollbars\";\nimport { LockButton } from \"./LockButton\";\nimport { UserList } from \"./UserList\";\nimport { BackgroundPickerAndDarkModeToggle } from \"./BackgroundPickerAndDarkModeToggle\";\nimport { LibraryButton } from \"./LibraryButton\";\nimport { PenModeButton } from \"./PenModeButton\";\n\ntype MobileMenuProps = {\n  appState: AppState;\n  actionManager: ActionManager;\n  renderJSONExportDialog: () => React.ReactNode;\n  renderImageExportDialog: () => React.ReactNode;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  elements: readonly NonDeletedExcalidrawElement[];\n  libraryMenu: JSX.Element | null;\n  onCollabButtonClick?: () => void;\n  onLockToggle: () => void;\n  onPenModeToggle: () => void;\n  canvas: HTMLCanvasElement | null;\n  isCollaborating: boolean;\n  renderCustomFooter?: (isMobile: boolean, appState: AppState) => JSX.Element;\n  viewModeEnabled: boolean;\n  showThemeBtn: boolean;\n  onImageAction: (data: { insertOnCanvasDirectly: boolean }) => void;\n  renderTopRightUI?: (\n    isMobile: boolean,\n    appState: AppState,\n  ) => JSX.Element | null;\n};\n\nexport const MobileMenu = ({\n  appState,\n  elements,\n  libraryMenu,\n  actionManager,\n  renderJSONExportDialog,\n  renderImageExportDialog,\n  setAppState,\n  onCollabButtonClick,\n  onLockToggle,\n  onPenModeToggle,\n  canvas,\n  isCollaborating,\n  renderCustomFooter,\n  viewModeEnabled,\n  showThemeBtn,\n  onImageAction,\n  renderTopRightUI,\n}: MobileMenuProps) => {\n  const renderToolbar = () => {\n    return (\n      <FixedSideContainer side=\"top\" className=\"App-top-bar\">\n        <Section heading=\"shapes\">\n          {(heading) => (\n            <Stack.Col gap={4} align=\"center\">\n              <Stack.Row gap={1} className=\"App-toolbar-container\">\n                <Island padding={1} className=\"App-toolbar\">\n                  {heading}\n                  <Stack.Row gap={1}>\n                    <ShapesSwitcher\n                      canvas={canvas}\n                      elementType={appState.elementType}\n                      setAppState={setAppState}\n                      onImageAction={({ pointerType }) => {\n                        onImageAction({\n                          insertOnCanvasDirectly: pointerType !== \"mouse\",\n                        });\n                      }}\n                    />\n                  </Stack.Row>\n                </Island>\n                {renderTopRightUI && renderTopRightUI(true, appState)}\n                <LockButton\n                  checked={appState.elementLocked}\n                  onChange={onLockToggle}\n                  title={t(\"toolBar.lock\")}\n                  isMobile\n                />\n                <LibraryButton\n                  appState={appState}\n                  setAppState={setAppState}\n                  isMobile\n                />\n                <PenModeButton\n                  checked={appState.penMode}\n                  onChange={onPenModeToggle}\n                  title={t(\"toolBar.penMode\")}\n                  isMobile\n                  penDetected={appState.penDetected}\n                />\n              </Stack.Row>\n              {libraryMenu}\n            </Stack.Col>\n          )}\n        </Section>\n        <HintViewer appState={appState} elements={elements} isMobile={true} />\n      </FixedSideContainer>\n    );\n  };\n\n  const renderAppToolbar = () => {\n    // Render eraser conditionally in mobile\n    const showEraser =\n      !appState.viewModeEnabled &&\n      !appState.editingElement &&\n      getSelectedElements(elements, appState).length === 0;\n\n    if (viewModeEnabled) {\n      return (\n        <div className=\"App-toolbar-content\">\n          {actionManager.renderAction(\"toggleCanvasMenu\")}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App-toolbar-content\">\n        {actionManager.renderAction(\"toggleCanvasMenu\")}\n        {actionManager.renderAction(\"toggleEditMenu\")}\n\n        {actionManager.renderAction(\"undo\")}\n        {actionManager.renderAction(\"redo\")}\n        {showEraser && actionManager.renderAction(\"eraser\")}\n\n        {actionManager.renderAction(\n          appState.multiElement ? \"finalize\" : \"duplicateSelection\",\n        )}\n        {actionManager.renderAction(\"deleteSelectedElements\")}\n      </div>\n    );\n  };\n\n  const renderCanvasActions = () => {\n    if (viewModeEnabled) {\n      return (\n        <>\n          {renderJSONExportDialog()}\n          {renderImageExportDialog()}\n        </>\n      );\n    }\n    return (\n      <>\n        {actionManager.renderAction(\"clearCanvas\")}\n        {actionManager.renderAction(\"loadScene\")}\n        {renderJSONExportDialog()}\n        {renderImageExportDialog()}\n        {onCollabButtonClick && (\n          <CollabButton\n            isCollaborating={isCollaborating}\n            collaboratorCount={appState.collaborators.size}\n            onClick={onCollabButtonClick}\n          />\n        )}\n        {\n          <BackgroundPickerAndDarkModeToggle\n            actionManager={actionManager}\n            appState={appState}\n            setAppState={setAppState}\n            showThemeBtn={showThemeBtn}\n          />\n        }\n      </>\n    );\n  };\n  return (\n    <>\n      {!viewModeEnabled && renderToolbar()}\n      <div\n        className=\"App-bottom-bar\"\n        style={{\n          marginBottom: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n          marginLeft: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n          marginRight: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        }}\n      >\n        <Island padding={0}>\n          {appState.openMenu === \"canvas\" ? (\n            <Section className=\"App-mobile-menu\" heading=\"canvasActions\">\n              <div className=\"panelColumn\">\n                <Stack.Col gap={4}>\n                  {renderCanvasActions()}\n                  {renderCustomFooter?.(true, appState)}\n                  {appState.collaborators.size > 0 && (\n                    <fieldset>\n                      <legend>{t(\"labels.collaborators\")}</legend>\n                      <UserList mobile>\n                        {Array.from(appState.collaborators)\n                          // Collaborator is either not initialized or is actually the current user.\n                          .filter(\n                            ([_, client]) => Object.keys(client).length !== 0,\n                          )\n                          .map(([clientId, client]) => (\n                            <React.Fragment key={clientId}>\n                              {actionManager.renderAction(\"goToCollaborator\", {\n                                id: clientId,\n                              })}\n                            </React.Fragment>\n                          ))}\n                      </UserList>\n                    </fieldset>\n                  )}\n                </Stack.Col>\n              </div>\n            </Section>\n          ) : appState.openMenu === \"shape\" &&\n            !viewModeEnabled &&\n            showSelectedShapeActions(appState, elements) ? (\n            <Section className=\"App-mobile-menu\" heading=\"selectedShapeActions\">\n              <SelectedShapeActions\n                appState={appState}\n                elements={elements}\n                renderAction={actionManager.renderAction}\n                elementType={appState.elementType}\n              />\n            </Section>\n          ) : null}\n          <footer className=\"App-toolbar\">\n            {renderAppToolbar()}\n            {appState.scrolledOutside && !appState.openMenu && (\n              <button\n                className=\"scroll-back-to-content\"\n                onClick={() => {\n                  setAppState({\n                    ...calculateScrollCenter(elements, appState, canvas),\n                  });\n                }}\n              >\n                {t(\"buttons.scrollBackToContent\")}\n              </button>\n            )}\n          </footer>\n        </Island>\n      </div>\n    </>\n  );\n};\n","import oc from \"open-color\";\nimport React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { trackEvent } from \"../analytics\";\nimport { ChartElements, renderSpreadsheet, Spreadsheet } from \"../charts\";\nimport { ChartType } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { exportToSvg } from \"../scene/export\";\nimport { AppState, LibraryItem } from \"../types\";\nimport { Dialog } from \"./Dialog\";\nimport \"./PasteChartDialog.scss\";\n\ntype OnInsertChart = (chartType: ChartType, elements: ChartElements) => void;\n\nconst ChartPreviewBtn = (props: {\n  spreadsheet: Spreadsheet | null;\n  chartType: ChartType;\n  selected: boolean;\n  onClick: OnInsertChart;\n}) => {\n  const previewRef = useRef<HTMLDivElement | null>(null);\n  const [chartElements, setChartElements] = useState<ChartElements | null>(\n    null,\n  );\n\n  useLayoutEffect(() => {\n    if (!props.spreadsheet) {\n      return;\n    }\n\n    const elements = renderSpreadsheet(\n      props.chartType,\n      props.spreadsheet,\n      0,\n      0,\n    );\n    setChartElements(elements);\n    let svg: SVGSVGElement;\n    const previewNode = previewRef.current!;\n\n    (async () => {\n      svg = await exportToSvg(\n        elements,\n        {\n          exportBackground: false,\n          viewBackgroundColor: oc.white,\n        },\n        null, // files\n      );\n\n      previewNode.appendChild(svg);\n\n      if (props.selected) {\n        (previewNode.parentNode as HTMLDivElement).focus();\n      }\n    })();\n\n    return () => {\n      previewNode.removeChild(svg);\n    };\n  }, [props.spreadsheet, props.chartType, props.selected]);\n\n  return (\n    <button\n      className=\"ChartPreview\"\n      onClick={() => {\n        if (chartElements) {\n          props.onClick(props.chartType, chartElements);\n        }\n      }}\n    >\n      <div ref={previewRef} />\n    </button>\n  );\n};\n\nexport const PasteChartDialog = ({\n  setAppState,\n  appState,\n  onClose,\n  onInsertChart,\n}: {\n  appState: AppState;\n  onClose: () => void;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  onInsertChart: (elements: LibraryItem[\"elements\"]) => void;\n}) => {\n  const handleClose = React.useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  const handleChartClick = (chartType: ChartType, elements: ChartElements) => {\n    onInsertChart(elements);\n    trackEvent(\"magic\", \"chart\", chartType);\n    setAppState({\n      currentChartType: chartType,\n      pasteDialog: {\n        shown: false,\n        data: null,\n      },\n    });\n  };\n\n  return (\n    <Dialog\n      small\n      onCloseRequest={handleClose}\n      title={t(\"labels.pasteCharts\")}\n      className={\"PasteChartDialog\"}\n      autofocus={false}\n    >\n      <div className={\"container\"}>\n        <ChartPreviewBtn\n          chartType=\"bar\"\n          spreadsheet={appState.pasteDialog.data}\n          selected={appState.currentChartType === \"bar\"}\n          onClick={handleChartClick}\n        />\n        <ChartPreviewBtn\n          chartType=\"line\"\n          spreadsheet={appState.pasteDialog.data}\n          selected={appState.currentChartType === \"line\"}\n          onClick={handleChartClick}\n        />\n      </div>\n    </Dialog>\n  );\n};\n","import React from \"react\";\nimport { t } from \"../i18n\";\nimport { isDarwin, isWindows } from \"../keys\";\nimport { Dialog } from \"./Dialog\";\nimport { getShortcutKey } from \"../utils\";\nimport \"./HelpDialog.scss\";\n\nconst Header = () => (\n  <div className=\"HelpDialog--header\">\n    <a\n      className=\"HelpDialog--btn\"\n      href=\"https://github.com/excalidraw/excalidraw#documentation\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"helpDialog.documentation\")}\n    </a>\n    <a\n      className=\"HelpDialog--btn\"\n      href=\"https://blog.excalidraw.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"helpDialog.blog\")}\n    </a>\n    <a\n      className=\"HelpDialog--btn\"\n      href=\"https://github.com/excalidraw/excalidraw/issues\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"helpDialog.github\")}\n    </a>\n  </div>\n);\n\nconst Section = (props: { title: string; children: React.ReactNode }) => (\n  <>\n    <h3>{props.title}</h3>\n    {props.children}\n  </>\n);\n\nconst Columns = (props: { children: React.ReactNode }) => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n    }}\n  >\n    {props.children}\n  </div>\n);\n\nconst Column = (props: { children: React.ReactNode }) => (\n  <div style={{ width: \"49%\" }}>{props.children}</div>\n);\n\nconst ShortcutIsland = (props: {\n  caption: string;\n  children: React.ReactNode;\n}) => (\n  <div className=\"HelpDialog--island\">\n    <h3 className=\"HelpDialog--island-title\">{props.caption}</h3>\n    {props.children}\n  </div>\n);\n\nconst Shortcut = (props: {\n  label: string;\n  shortcuts: string[];\n  isOr: boolean;\n}) => {\n  return (\n    <div className=\"HelpDialog--shortcut\">\n      <div\n        style={{\n          display: \"flex\",\n          margin: \"0\",\n          padding: \"4px 8px\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          style={{\n            lineHeight: 1.4,\n          }}\n        >\n          {props.label}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"0 0 auto\",\n            justifyContent: \"flex-end\",\n            marginInlineStart: \"auto\",\n            minWidth: \"30%\",\n          }}\n        >\n          {props.shortcuts.map((shortcut, index) => (\n            <React.Fragment key={index}>\n              <ShortcutKey>{shortcut}</ShortcutKey>\n              {props.isOr &&\n                index !== props.shortcuts.length - 1 &&\n                t(\"helpDialog.or\")}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nShortcut.defaultProps = {\n  isOr: true,\n};\n\nconst ShortcutKey = (props: { children: React.ReactNode }) => (\n  <kbd className=\"HelpDialog--key\" {...props} />\n);\n\nexport const HelpDialog = ({ onClose }: { onClose?: () => void }) => {\n  const handleClose = React.useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      <Dialog\n        onCloseRequest={handleClose}\n        title={t(\"helpDialog.title\")}\n        className={\"HelpDialog\"}\n      >\n        <Header />\n        <Section title={t(\"helpDialog.shortcuts\")}>\n          <Columns>\n            <Column>\n              <ShortcutIsland caption={t(\"helpDialog.shapes\")}>\n                <Shortcut\n                  label={t(\"toolBar.selection\")}\n                  shortcuts={[\"V\", \"1\"]}\n                />\n                <Shortcut\n                  label={t(\"toolBar.rectangle\")}\n                  shortcuts={[\"R\", \"2\"]}\n                />\n                <Shortcut label={t(\"toolBar.diamond\")} shortcuts={[\"D\", \"3\"]} />\n                <Shortcut label={t(\"toolBar.ellipse\")} shortcuts={[\"E\", \"4\"]} />\n                <Shortcut label={t(\"toolBar.arrow\")} shortcuts={[\"A\", \"5\"]} />\n                <Shortcut label={t(\"toolBar.line\")} shortcuts={[\"P\", \"6\"]} />\n                <Shortcut\n                  label={t(\"toolBar.freedraw\")}\n                  shortcuts={[\"Shift + P\", \"X\", \"7\"]}\n                />\n                <Shortcut label={t(\"toolBar.text\")} shortcuts={[\"T\", \"8\"]} />\n                <Shortcut label={t(\"toolBar.image\")} shortcuts={[\"9\"]} />\n                <Shortcut label={t(\"toolBar.library\")} shortcuts={[\"0\"]} />\n                <Shortcut\n                  label={t(\"helpDialog.editSelectedShape\")}\n                  shortcuts={[\n                    getShortcutKey(\"Enter\"),\n                    t(\"helpDialog.doubleClick\"),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.textNewLine\")}\n                  shortcuts={[\n                    getShortcutKey(\"Enter\"),\n                    getShortcutKey(\"Shift+Enter\"),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.textFinish\")}\n                  shortcuts={[\n                    getShortcutKey(\"Esc\"),\n                    getShortcutKey(\"CtrlOrCmd+Enter\"),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.curvedArrow\")}\n                  shortcuts={[\n                    \"A\",\n                    t(\"helpDialog.click\"),\n                    t(\"helpDialog.click\"),\n                    t(\"helpDialog.click\"),\n                  ]}\n                  isOr={false}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.curvedLine\")}\n                  shortcuts={[\n                    \"L\",\n                    t(\"helpDialog.click\"),\n                    t(\"helpDialog.click\"),\n                    t(\"helpDialog.click\"),\n                  ]}\n                  isOr={false}\n                />\n                <Shortcut label={t(\"toolBar.lock\")} shortcuts={[\"Q\"]} />\n                <Shortcut\n                  label={t(\"helpDialog.preventBinding\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd\")]}\n                />\n                <Shortcut\n                  label={t(\"toolBar.link\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+K\")]}\n                />\n              </ShortcutIsland>\n              <ShortcutIsland caption={t(\"helpDialog.view\")}>\n                <Shortcut\n                  label={t(\"buttons.zoomIn\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd++\")]}\n                />\n                <Shortcut\n                  label={t(\"buttons.zoomOut\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+-\")]}\n                />\n                <Shortcut\n                  label={t(\"buttons.resetZoom\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+0\")]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.zoomToFit\")}\n                  shortcuts={[\"Shift+1\"]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.zoomToSelection\")}\n                  shortcuts={[\"Shift+2\"]}\n                />\n                <Shortcut label={t(\"buttons.fullScreen\")} shortcuts={[\"F\"]} />\n                <Shortcut\n                  label={t(\"buttons.zenMode\")}\n                  shortcuts={[getShortcutKey(\"Alt+Z\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.showGrid\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+'\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.viewMode\")}\n                  shortcuts={[getShortcutKey(\"Alt+R\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.toggleTheme\")}\n                  shortcuts={[getShortcutKey(\"Alt+Shift+D\")]}\n                />\n                <Shortcut\n                  label={t(\"stats.title\")}\n                  shortcuts={[getShortcutKey(\"Alt+/\")]}\n                />\n              </ShortcutIsland>\n            </Column>\n            <Column>\n              <ShortcutIsland caption={t(\"helpDialog.editor\")}>\n                <Shortcut\n                  label={t(\"labels.selectAll\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+A\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.multiSelect\")}\n                  shortcuts={[getShortcutKey(`Shift+${t(\"helpDialog.click\")}`)]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.deepSelect\")}\n                  shortcuts={[\n                    getShortcutKey(`CtrlOrCmd+${t(\"helpDialog.click\")}`),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.deepBoxSelect\")}\n                  shortcuts={[\n                    getShortcutKey(`CtrlOrCmd+${t(\"helpDialog.drag\")}`),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"labels.moveCanvas\")}\n                  shortcuts={[\n                    getShortcutKey(`Space+${t(\"helpDialog.drag\")}`),\n                    getShortcutKey(`Wheel+${t(\"helpDialog.drag\")}`),\n                  ]}\n                  isOr={true}\n                />\n                <Shortcut\n                  label={t(\"labels.cut\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+X\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.copy\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+C\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.paste\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+V\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.copyAsPng\")}\n                  shortcuts={[getShortcutKey(\"Shift+Alt+C\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.copyStyles\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Alt+C\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.pasteStyles\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Alt+V\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.delete\")}\n                  shortcuts={[getShortcutKey(\"Del\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.sendToBack\")}\n                  shortcuts={[\n                    isDarwin\n                      ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n                      : getShortcutKey(\"CtrlOrCmd+Shift+[\"),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"labels.bringToFront\")}\n                  shortcuts={[\n                    isDarwin\n                      ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n                      : getShortcutKey(\"CtrlOrCmd+Shift+]\"),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"labels.sendBackward\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+[\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.bringForward\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+]\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.alignTop\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Up\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.alignBottom\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Down\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.alignLeft\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Left\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.alignRight\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Right\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.duplicateSelection\")}\n                  shortcuts={[\n                    getShortcutKey(\"CtrlOrCmd+D\"),\n                    getShortcutKey(`Alt+${t(\"helpDialog.drag\")}`),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"buttons.undo\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Z\")]}\n                />\n                <Shortcut\n                  label={t(\"buttons.redo\")}\n                  shortcuts={\n                    isWindows\n                      ? [\n                          getShortcutKey(\"CtrlOrCmd+Y\"),\n                          getShortcutKey(\"CtrlOrCmd+Shift+Z\"),\n                        ]\n                      : [getShortcutKey(\"CtrlOrCmd+Shift+Z\")]\n                  }\n                />\n                <Shortcut\n                  label={t(\"labels.group\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+G\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.ungroup\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+G\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.flipHorizontal\")}\n                  shortcuts={[getShortcutKey(\"Shift+H\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.flipVertical\")}\n                  shortcuts={[getShortcutKey(\"Shift+V\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.showStroke\")}\n                  shortcuts={[getShortcutKey(\"S\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.showBackground\")}\n                  shortcuts={[getShortcutKey(\"G\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.decreaseFontSize\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+<\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.increaseFontSize\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+>\")]}\n                />\n              </ShortcutIsland>\n            </Column>\n          </Columns>\n        </Section>\n      </Dialog>\n    </>\n  );\n};\n","import OpenColor from \"open-color\";\n\nimport \"./Card.scss\";\n\nexport const Card: React.FC<{\n  color: keyof OpenColor | \"primary\";\n}> = ({ children, color }) => {\n  return (\n    <div\n      className=\"Card\"\n      style={{\n        [\"--card-color\" as any]:\n          color === \"primary\" ? \"var(--color-primary)\" : OpenColor[color][7],\n        [\"--card-color-darker\" as any]:\n          color === \"primary\"\n            ? \"var(--color-primary-darker)\"\n            : OpenColor[color][8],\n        [\"--card-color-darkest\" as any]:\n          color === \"primary\"\n            ? \"var(--color-primary-darkest)\"\n            : OpenColor[color][9],\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ActionsManagerInterface } from \"../actions/types\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { useIsMobile } from \"./App\";\nimport { AppState, ExportOpts, BinaryFiles } from \"../types\";\nimport { Dialog } from \"./Dialog\";\nimport { exportFile, exportToFileIcon, link } from \"./icons\";\nimport { ToolButton } from \"./ToolButton\";\nimport { actionSaveFileToDisk } from \"../actions/actionExport\";\nimport { Card } from \"./Card\";\n\nimport \"./ExportDialog.scss\";\nimport { nativeFileSystemSupported } from \"../data/filesystem\";\n\nexport type ExportCB = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  scale?: number,\n) => void;\n\nconst JSONExportModal = ({\n  elements,\n  appState,\n  files,\n  actionManager,\n  exportOpts,\n  canvas,\n}: {\n  appState: AppState;\n  files: BinaryFiles;\n  elements: readonly NonDeletedExcalidrawElement[];\n  actionManager: ActionsManagerInterface;\n  onCloseRequest: () => void;\n  exportOpts: ExportOpts;\n  canvas: HTMLCanvasElement | null;\n}) => {\n  const { onExportToBackend } = exportOpts;\n  return (\n    <div className=\"ExportDialog ExportDialog--json\">\n      <div className=\"ExportDialog-cards\">\n        {exportOpts.saveFileToDisk && (\n          <Card color=\"lime\">\n            <div className=\"Card-icon\">{exportToFileIcon}</div>\n            <h2>{t(\"exportDialog.disk_title\")}</h2>\n            <div className=\"Card-details\">\n              {t(\"exportDialog.disk_details\")}\n              {!nativeFileSystemSupported &&\n                actionManager.renderAction(\"changeProjectName\")}\n            </div>\n            <ToolButton\n              className=\"Card-button\"\n              type=\"button\"\n              title={t(\"exportDialog.disk_button\")}\n              aria-label={t(\"exportDialog.disk_button\")}\n              showAriaLabel={true}\n              onClick={() => {\n                actionManager.executeAction(actionSaveFileToDisk);\n              }}\n            />\n          </Card>\n        )}\n        {onExportToBackend && (\n          <Card color=\"pink\">\n            <div className=\"Card-icon\">{link}</div>\n            <h2>{t(\"exportDialog.link_title\")}</h2>\n            <div className=\"Card-details\">{t(\"exportDialog.link_details\")}</div>\n            <ToolButton\n              className=\"Card-button\"\n              type=\"button\"\n              title={t(\"exportDialog.link_button\")}\n              aria-label={t(\"exportDialog.link_button\")}\n              showAriaLabel={true}\n              onClick={() =>\n                onExportToBackend(elements, appState, files, canvas)\n              }\n            />\n          </Card>\n        )}\n        {exportOpts.renderCustomUI &&\n          exportOpts.renderCustomUI(elements, appState, files, canvas)}\n      </div>\n    </div>\n  );\n};\n\nexport const JSONExportDialog = ({\n  elements,\n  appState,\n  files,\n  actionManager,\n  exportOpts,\n  canvas,\n}: {\n  elements: readonly NonDeletedExcalidrawElement[];\n  appState: AppState;\n  files: BinaryFiles;\n  actionManager: ActionsManagerInterface;\n  exportOpts: ExportOpts;\n  canvas: HTMLCanvasElement | null;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(false);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n  }, []);\n\n  return (\n    <>\n      <ToolButton\n        onClick={() => {\n          setModalIsShown(true);\n        }}\n        data-testid=\"json-export-button\"\n        icon={exportFile}\n        type=\"button\"\n        aria-label={t(\"buttons.export\")}\n        showAriaLabel={useIsMobile()}\n        title={t(\"buttons.export\")}\n      />\n      {modalIsShown && (\n        <Dialog onCloseRequest={handleClose} title={t(\"buttons.export\")}>\n          <JSONExportModal\n            elements={elements}\n            appState={appState}\n            files={files}\n            actionManager={actionManager}\n            onCloseRequest={handleClose}\n            exportOpts={exportOpts}\n            canvas={canvas}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import {\n  exportToCanvas as _exportToCanvas,\n  exportToSvg as _exportToSvg,\n} from \"../scene/export\";\nimport { getDefaultAppState } from \"../appState\";\nimport { AppState, BinaryFiles } from \"../types\";\nimport { ExcalidrawElement, NonDeleted } from \"../element/types\";\nimport { getNonDeletedElements } from \"../element\";\nimport { restore } from \"../data/restore\";\nimport { MIME_TYPES } from \"../constants\";\n\ntype ExportOpts = {\n  elements: readonly NonDeleted<ExcalidrawElement>[];\n  appState?: Partial<Omit<AppState, \"offsetTop\" | \"offsetLeft\">>;\n  files: BinaryFiles | null;\n  maxWidthOrHeight?: number;\n  getDimensions?: (\n    width: number,\n    height: number,\n  ) => { width: number; height: number; scale?: number };\n};\n\nexport const exportToCanvas = ({\n  elements,\n  appState,\n  files,\n  maxWidthOrHeight,\n  getDimensions,\n}: ExportOpts) => {\n  const { elements: restoredElements, appState: restoredAppState } = restore(\n    { elements, appState },\n    null,\n    null,\n  );\n  const { exportBackground, viewBackgroundColor } = restoredAppState;\n  return _exportToCanvas(\n    getNonDeletedElements(restoredElements),\n    { ...restoredAppState, offsetTop: 0, offsetLeft: 0, width: 0, height: 0 },\n    files || {},\n    { exportBackground, viewBackgroundColor },\n    (width: number, height: number) => {\n      const canvas = document.createElement(\"canvas\");\n\n      if (maxWidthOrHeight) {\n        if (typeof getDimensions === \"function\") {\n          console.warn(\n            \"`getDimensions()` is ignored when `maxWidthOrHeight` is supplied.\",\n          );\n        }\n\n        const max = Math.max(width, height);\n\n        const scale = maxWidthOrHeight / max;\n\n        canvas.width = width * scale;\n        canvas.height = height * scale;\n\n        return {\n          canvas,\n          scale,\n        };\n      }\n\n      const ret = getDimensions?.(width, height) || { width, height };\n\n      canvas.width = ret.width;\n      canvas.height = ret.height;\n\n      return {\n        canvas,\n        scale: ret.scale ?? 1,\n      };\n    },\n  );\n};\n\nexport const exportToBlob = async (\n  opts: ExportOpts & {\n    mimeType?: string;\n    quality?: number;\n  },\n): Promise<Blob | null> => {\n  let { mimeType = MIME_TYPES.png, quality } = opts;\n\n  if (mimeType === MIME_TYPES.png && typeof quality === \"number\") {\n    console.warn(`\"quality\" will be ignored for \"${MIME_TYPES.png}\" mimeType`);\n  }\n\n  // typo in MIME type (should be \"jpeg\")\n  if (mimeType === \"image/jpg\") {\n    mimeType = MIME_TYPES.jpg;\n  }\n\n  if (mimeType === MIME_TYPES.jpg && !opts.appState?.exportBackground) {\n    console.warn(\n      `Defaulting \"exportBackground\" to \"true\" for \"${MIME_TYPES.jpg}\" mimeType`,\n    );\n    opts = {\n      ...opts,\n      appState: { ...opts.appState, exportBackground: true },\n    };\n  }\n\n  const canvas = await exportToCanvas(opts);\n\n  quality = quality ? quality : /image\\/jpe?g/.test(mimeType) ? 0.92 : 0.8;\n\n  return new Promise((resolve) => {\n    canvas.toBlob(\n      (blob: Blob | null) => {\n        resolve(blob);\n      },\n      mimeType,\n      quality,\n    );\n  });\n};\n\nexport const exportToSvg = async ({\n  elements,\n  appState = getDefaultAppState(),\n  files = {},\n  exportPadding,\n}: Omit<ExportOpts, \"getDimensions\"> & {\n  exportPadding?: number;\n}): Promise<SVGSVGElement> => {\n  const { elements: restoredElements, appState: restoredAppState } = restore(\n    { elements, appState },\n    null,\n    null,\n  );\n  return _exportToSvg(\n    getNonDeletedElements(restoredElements),\n    {\n      ...restoredAppState,\n      exportPadding,\n    },\n    files,\n  );\n};\n\nexport { serializeAsJSON } from \"../data/json\";\nexport { loadFromBlob, loadLibraryFromBlob } from \"../data/blob\";\nexport { getFreeDrawSvgPath } from \"../renderer/renderElement\";\n","import oc from \"open-color\";\nimport { useEffect, useRef } from \"react\";\nimport { t } from \"../i18n\";\nimport { exportToSvg } from \"../packages/utils\";\nimport { AppState, LibraryItem } from \"../types\";\nimport { close } from \"./icons\";\n\nimport \"./SingleLibraryItem.scss\";\nimport { ToolButton } from \"./ToolButton\";\n\nconst SingleLibraryItem = ({\n  libItem,\n  appState,\n  index,\n  onChange,\n  onRemove,\n}: {\n  libItem: LibraryItem;\n  appState: AppState;\n  index: number;\n  onChange: (val: string, index: number) => void;\n  onRemove: (id: string) => void;\n}) => {\n  const svgRef = useRef<HTMLDivElement | null>(null);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    const node = svgRef.current;\n    if (!node) {\n      return;\n    }\n    (async () => {\n      const svg = await exportToSvg({\n        elements: libItem.elements,\n        appState: {\n          ...appState,\n          viewBackgroundColor: oc.white,\n          exportBackground: true,\n        },\n        files: null,\n      });\n      node.innerHTML = svg.outerHTML;\n    })();\n  }, [libItem.elements, appState]);\n\n  return (\n    <div className=\"single-library-item\">\n      <div ref={svgRef} className=\"single-library-item__svg\" />\n      <ToolButton\n        aria-label={t(\"buttons.remove\")}\n        type=\"button\"\n        icon={close}\n        className=\"single-library-item--remove\"\n        onClick={onRemove.bind(null, libItem.id)}\n        title={t(\"buttons.remove\")}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          margin: \"0.8rem 0.3rem\",\n          width: \"100%\",\n          fontSize: \"14px\",\n          fontWeight: 500,\n          flexDirection: \"column\",\n        }}\n      >\n        <label\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div style={{ padding: \"0.5em 0\" }}>\n            <span style={{ fontWeight: 500, color: oc.gray[6] }}>\n              {t(\"publishDialog.itemName\")}\n            </span>\n            <span aria-hidden=\"true\" className=\"required\">\n              *\n            </span>\n          </div>\n          <input\n            type=\"text\"\n            ref={inputRef}\n            style={{ width: \"80%\", padding: \"0.2rem\" }}\n            defaultValue={libItem.name}\n            placeholder=\"Item name\"\n            onChange={(event) => {\n              onChange(event.target.value, index);\n            }}\n          />\n        </label>\n        <span className=\"error\">{libItem.error}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default SingleLibraryItem;\n","import { ReactNode, useCallback, useEffect, useState } from \"react\";\nimport OpenColor from \"open-color\";\n\nimport { Dialog } from \"./Dialog\";\nimport { t } from \"../i18n\";\n\nimport { ToolButton } from \"./ToolButton\";\n\nimport { AppState, LibraryItems, LibraryItem } from \"../types\";\nimport { exportToCanvas } from \"../packages/utils\";\nimport {\n  EXPORT_DATA_TYPES,\n  EXPORT_SOURCE,\n  MIME_TYPES,\n  VERSIONS,\n} from \"../constants\";\nimport { ExportedLibraryData } from \"../data/types\";\n\nimport \"./PublishLibrary.scss\";\nimport SingleLibraryItem from \"./SingleLibraryItem\";\nimport { canvasToBlob, resizeImageFile } from \"../data/blob\";\nimport { chunk } from \"../utils\";\n\ninterface PublishLibraryDataParams {\n  authorName: string;\n  githubHandle: string;\n  name: string;\n  description: string;\n  twitterHandle: string;\n  website: string;\n}\n\nconst LOCAL_STORAGE_KEY_PUBLISH_LIBRARY = \"publish-library-data\";\n\nconst savePublishLibDataToStorage = (data: PublishLibraryDataParams) => {\n  try {\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY_PUBLISH_LIBRARY,\n      JSON.stringify(data),\n    );\n  } catch (error: any) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\nconst importPublishLibDataFromStorage = () => {\n  try {\n    const data = localStorage.getItem(LOCAL_STORAGE_KEY_PUBLISH_LIBRARY);\n    if (data) {\n      return JSON.parse(data);\n    }\n  } catch (error: any) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  return null;\n};\n\nconst generatePreviewImage = async (libraryItems: LibraryItems) => {\n  const MAX_ITEMS_PER_ROW = 6;\n  const BOX_SIZE = 128;\n  const BOX_PADDING = Math.round(BOX_SIZE / 16);\n  const BORDER_WIDTH = Math.max(Math.round(BOX_SIZE / 64), 2);\n\n  const rows = chunk(libraryItems, MAX_ITEMS_PER_ROW);\n\n  const canvas = document.createElement(\"canvas\");\n\n  canvas.width =\n    rows[0].length * BOX_SIZE +\n    (rows[0].length + 1) * (BOX_PADDING * 2) -\n    BOX_PADDING * 2;\n  canvas.height =\n    rows.length * BOX_SIZE +\n    (rows.length + 1) * (BOX_PADDING * 2) -\n    BOX_PADDING * 2;\n\n  const ctx = canvas.getContext(\"2d\")!;\n\n  ctx.fillStyle = OpenColor.white;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  // draw items\n  // ---------------------------------------------------------------------------\n  for (const [index, item] of libraryItems.entries()) {\n    const itemCanvas = await exportToCanvas({\n      elements: item.elements,\n      files: null,\n      maxWidthOrHeight: BOX_SIZE,\n    });\n\n    const { width, height } = itemCanvas;\n\n    // draw item\n    // -------------------------------------------------------------------------\n    const rowOffset =\n      Math.floor(index / MAX_ITEMS_PER_ROW) * (BOX_SIZE + BOX_PADDING * 2);\n    const colOffset =\n      (index % MAX_ITEMS_PER_ROW) * (BOX_SIZE + BOX_PADDING * 2);\n\n    ctx.drawImage(\n      itemCanvas,\n      colOffset + (BOX_SIZE - width) / 2 + BOX_PADDING,\n      rowOffset + (BOX_SIZE - height) / 2 + BOX_PADDING,\n    );\n\n    // draw item border\n    // -------------------------------------------------------------------------\n    ctx.lineWidth = BORDER_WIDTH;\n    ctx.strokeStyle = OpenColor.gray[4];\n    ctx.strokeRect(\n      colOffset + BOX_PADDING / 2,\n      rowOffset + BOX_PADDING / 2,\n      BOX_SIZE + BOX_PADDING,\n      BOX_SIZE + BOX_PADDING,\n    );\n  }\n\n  return await resizeImageFile(\n    new File([await canvasToBlob(canvas)], \"preview\", { type: MIME_TYPES.png }),\n    {\n      outputType: MIME_TYPES.jpg,\n      maxWidthOrHeight: 5000,\n    },\n  );\n};\n\nconst PublishLibrary = ({\n  onClose,\n  libraryItems,\n  appState,\n  onSuccess,\n  onError,\n  updateItemsInStorage,\n  onRemove,\n}: {\n  onClose: () => void;\n  libraryItems: LibraryItems;\n  appState: AppState;\n  onSuccess: (data: {\n    url: string;\n    authorName: string;\n    items: LibraryItems;\n  }) => void;\n\n  onError: (error: Error) => void;\n  updateItemsInStorage: (items: LibraryItems) => void;\n  onRemove: (id: string) => void;\n}) => {\n  const [libraryData, setLibraryData] = useState<PublishLibraryDataParams>({\n    authorName: \"\",\n    githubHandle: \"\",\n    name: \"\",\n    description: \"\",\n    twitterHandle: \"\",\n    website: \"\",\n  });\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    const data = importPublishLibDataFromStorage();\n    if (data) {\n      setLibraryData(data);\n    }\n  }, []);\n\n  const [clonedLibItems, setClonedLibItems] = useState<LibraryItems>(\n    libraryItems.slice(),\n  );\n\n  useEffect(() => {\n    setClonedLibItems(libraryItems.slice());\n  }, [libraryItems]);\n\n  const onInputChange = (event: any) => {\n    setLibraryData({\n      ...libraryData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsSubmitting(true);\n    const erroredLibItems: LibraryItem[] = [];\n    let isError = false;\n    clonedLibItems.forEach((libItem) => {\n      let error = \"\";\n      if (!libItem.name) {\n        error = t(\"publishDialog.errors.required\");\n        isError = true;\n      }\n      erroredLibItems.push({ ...libItem, error });\n    });\n\n    if (isError) {\n      setClonedLibItems(erroredLibItems);\n      setIsSubmitting(false);\n      return;\n    }\n\n    const previewImage = await generatePreviewImage(clonedLibItems);\n\n    const libContent: ExportedLibraryData = {\n      type: EXPORT_DATA_TYPES.excalidrawLibrary,\n      version: VERSIONS.excalidrawLibrary,\n      source: EXPORT_SOURCE,\n      libraryItems: clonedLibItems,\n    };\n    const content = JSON.stringify(libContent, null, 2);\n    const lib = new Blob([content], { type: \"application/json\" });\n\n    const formData = new FormData();\n    formData.append(\"excalidrawLib\", lib);\n    formData.append(\"previewImage\", previewImage);\n    formData.append(\"previewImageType\", previewImage.type);\n    formData.append(\"title\", libraryData.name);\n    formData.append(\"authorName\", libraryData.authorName);\n    formData.append(\"githubHandle\", libraryData.githubHandle);\n    formData.append(\"name\", libraryData.name);\n    formData.append(\"description\", libraryData.description);\n    formData.append(\"twitterHandle\", libraryData.twitterHandle);\n    formData.append(\"website\", libraryData.website);\n\n    fetch(`${process.env.REACT_APP_LIBRARY_BACKEND}/submit`, {\n      method: \"post\",\n      body: formData,\n    })\n      .then(\n        (response) => {\n          if (response.ok) {\n            return response.json().then(({ url }) => {\n              // flush data from local storage\n              localStorage.removeItem(LOCAL_STORAGE_KEY_PUBLISH_LIBRARY);\n              onSuccess({\n                url,\n                authorName: libraryData.authorName,\n                items: clonedLibItems,\n              });\n            });\n          }\n          return response\n            .json()\n            .catch(() => {\n              throw new Error(response.statusText || \"something went wrong\");\n            })\n            .then((error) => {\n              throw new Error(\n                error.message || response.statusText || \"something went wrong\",\n              );\n            });\n        },\n        (err) => {\n          console.error(err);\n          onError(err);\n          setIsSubmitting(false);\n        },\n      )\n      .catch((err) => {\n        console.error(err);\n        onError(err);\n        setIsSubmitting(false);\n      });\n  };\n\n  const renderLibraryItems = () => {\n    const items: ReactNode[] = [];\n    clonedLibItems.forEach((libItem, index) => {\n      items.push(\n        <div className=\"single-library-item-wrapper\" key={index}>\n          <SingleLibraryItem\n            libItem={libItem}\n            appState={appState}\n            index={index}\n            onChange={(val, index) => {\n              const items = clonedLibItems.slice();\n              items[index].name = val;\n              setClonedLibItems(items);\n            }}\n            onRemove={onRemove}\n          />\n        </div>,\n      );\n    });\n    return <div className=\"selected-library-items\">{items}</div>;\n  };\n\n  const onDialogClose = useCallback(() => {\n    updateItemsInStorage(clonedLibItems);\n    savePublishLibDataToStorage(libraryData);\n    onClose();\n  }, [clonedLibItems, onClose, updateItemsInStorage, libraryData]);\n\n  const shouldRenderForm = !!libraryItems.length;\n  return (\n    <Dialog\n      onCloseRequest={onDialogClose}\n      title={t(\"publishDialog.title\")}\n      className=\"publish-library\"\n    >\n      {shouldRenderForm ? (\n        <form onSubmit={onSubmit}>\n          <div className=\"publish-library-note\">\n            {t(\"publishDialog.noteDescription.pre\")}\n            <a\n              href=\"https://libraries.excalidraw.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {t(\"publishDialog.noteDescription.link\")}\n            </a>{\" \"}\n            {t(\"publishDialog.noteDescription.post\")}\n          </div>\n          <span className=\"publish-library-note\">\n            {t(\"publishDialog.noteGuidelines.pre\")}\n            <a\n              href=\"https://github.com/excalidraw/excalidraw-libraries#guidelines\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {t(\"publishDialog.noteGuidelines.link\")}\n            </a>\n            {t(\"publishDialog.noteGuidelines.post\")}\n          </span>\n\n          <div className=\"publish-library-note\">\n            {t(\"publishDialog.noteItems\")}\n          </div>\n          {renderLibraryItems()}\n          <div className=\"publish-library__fields\">\n            <label>\n              <div>\n                <span>{t(\"publishDialog.libraryName\")}</span>\n                <span aria-hidden=\"true\" className=\"required\">\n                  *\n                </span>\n              </div>\n              <input\n                type=\"text\"\n                name=\"name\"\n                required\n                value={libraryData.name}\n                onChange={onInputChange}\n                placeholder={t(\"publishDialog.placeholder.libraryName\")}\n              />\n            </label>\n            <label style={{ alignItems: \"flex-start\" }}>\n              <div>\n                <span>{t(\"publishDialog.libraryDesc\")}</span>\n                <span aria-hidden=\"true\" className=\"required\">\n                  *\n                </span>\n              </div>\n              <textarea\n                name=\"description\"\n                rows={4}\n                required\n                value={libraryData.description}\n                onChange={onInputChange}\n                placeholder={t(\"publishDialog.placeholder.libraryDesc\")}\n              />\n            </label>\n            <label>\n              <div>\n                <span>{t(\"publishDialog.authorName\")}</span>\n                <span aria-hidden=\"true\" className=\"required\">\n                  *\n                </span>\n              </div>\n              <input\n                type=\"text\"\n                name=\"authorName\"\n                required\n                value={libraryData.authorName}\n                onChange={onInputChange}\n                placeholder={t(\"publishDialog.placeholder.authorName\")}\n              />\n            </label>\n            <label>\n              <span>{t(\"publishDialog.githubUsername\")}</span>\n              <input\n                type=\"text\"\n                name=\"githubHandle\"\n                value={libraryData.githubHandle}\n                onChange={onInputChange}\n                placeholder={t(\"publishDialog.placeholder.githubHandle\")}\n              />\n            </label>\n            <label>\n              <span>{t(\"publishDialog.twitterUsername\")}</span>\n              <input\n                type=\"text\"\n                name=\"twitterHandle\"\n                value={libraryData.twitterHandle}\n                onChange={onInputChange}\n                placeholder={t(\"publishDialog.placeholder.twitterHandle\")}\n              />\n            </label>\n            <label>\n              <span>{t(\"publishDialog.website\")}</span>\n              <input\n                type=\"text\"\n                name=\"website\"\n                pattern=\"https?://.+\"\n                title={t(\"publishDialog.errors.website\")}\n                value={libraryData.website}\n                onChange={onInputChange}\n                placeholder={t(\"publishDialog.placeholder.website\")}\n              />\n            </label>\n            <span className=\"publish-library-note\">\n              {t(\"publishDialog.noteLicense.pre\")}\n              <a\n                href=\"https://github.com/excalidraw/excalidraw-libraries/blob/main/LICENSE\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {t(\"publishDialog.noteLicense.link\")}\n              </a>\n              {t(\"publishDialog.noteLicense.post\")}\n            </span>\n          </div>\n          <div className=\"publish-library__buttons\">\n            <ToolButton\n              type=\"button\"\n              title={t(\"buttons.cancel\")}\n              aria-label={t(\"buttons.cancel\")}\n              label={t(\"buttons.cancel\")}\n              onClick={onDialogClose}\n              data-testid=\"cancel-clear-canvas-button\"\n              className=\"publish-library__buttons--cancel\"\n            />\n            <ToolButton\n              type=\"submit\"\n              title={t(\"buttons.submit\")}\n              aria-label={t(\"buttons.submit\")}\n              label={t(\"buttons.submit\")}\n              className=\"publish-library__buttons--confirm\"\n              isLoading={isSubmitting}\n            />\n          </div>\n        </form>\n      ) : (\n        <p style={{ padding: \"1em\", textAlign: \"center\", fontWeight: 500 }}>\n          {t(\"publishDialog.atleastOneLibItem\")}\n        </p>\n      )}\n    </Dialog>\n  );\n};\n\nexport default PublishLibrary;\n","import clsx from \"clsx\";\nimport oc from \"open-color\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { MIME_TYPES } from \"../constants\";\nimport { useIsMobile } from \"../components/App\";\nimport { exportToSvg } from \"../scene/export\";\nimport { BinaryFiles, LibraryItem } from \"../types\";\nimport \"./LibraryUnit.scss\";\nimport { CheckboxItem } from \"./CheckboxItem\";\n\nconst PLUS_ICON = (\n  <svg viewBox=\"0 0 1792 1792\">\n    <path\n      d=\"M1600 736v192c0 26.667-9.33 49.333-28 68-18.67 18.67-41.33 28-68 28h-416v416c0 26.67-9.33 49.33-28 68s-41.33 28-68 28H800c-26.667 0-49.333-9.33-68-28s-28-41.33-28-68v-416H288c-26.667 0-49.333-9.33-68-28-18.667-18.667-28-41.333-28-68V736c0-26.667 9.333-49.333 28-68s41.333-28 68-28h416V224c0-26.667 9.333-49.333 28-68s41.333-28 68-28h192c26.67 0 49.33 9.333 68 28s28 41.333 28 68v416h416c26.67 0 49.33 9.333 68 28s28 41.333 28 68Z\"\n      style={{\n        stroke: \"#fff\",\n        strokeWidth: 140,\n      }}\n      transform=\"translate(0 64)\"\n    />\n  </svg>\n);\n\nexport const LibraryUnit = ({\n  id,\n  elements,\n  files,\n  isPending,\n  onClick,\n  selected,\n  onToggle,\n}: {\n  id: LibraryItem[\"id\"] | /** for pending item */ null;\n  elements?: LibraryItem[\"elements\"];\n  files: BinaryFiles;\n  isPending?: boolean;\n  onClick: () => void;\n  selected: boolean;\n  onToggle: (id: string, event: React.MouseEvent) => void;\n}) => {\n  const ref = useRef<HTMLDivElement | null>(null);\n  useEffect(() => {\n    const node = ref.current;\n    if (!node) {\n      return;\n    }\n\n    (async () => {\n      if (!elements) {\n        return;\n      }\n      const svg = await exportToSvg(\n        elements,\n        {\n          exportBackground: false,\n          viewBackgroundColor: oc.white,\n        },\n        files,\n      );\n      node.innerHTML = svg.outerHTML;\n    })();\n\n    return () => {\n      node.innerHTML = \"\";\n    };\n  }, [elements, files]);\n\n  const [isHovered, setIsHovered] = useState(false);\n  const isMobile = useIsMobile();\n  const adder = isPending && (\n    <div className=\"library-unit__adder\">{PLUS_ICON}</div>\n  );\n\n  return (\n    <div\n      className={clsx(\"library-unit\", {\n        \"library-unit__active\": elements,\n        \"library-unit--hover\": elements && isHovered,\n        \"library-unit--selected\": selected,\n      })}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      <div\n        className={clsx(\"library-unit__dragger\", {\n          \"library-unit__pulse\": !!isPending,\n        })}\n        ref={ref}\n        draggable={!!elements}\n        onClick={\n          !!elements || !!isPending\n            ? (event) => {\n                if (id && event.shiftKey) {\n                  onToggle(id, event);\n                } else {\n                  onClick();\n                }\n              }\n            : undefined\n        }\n        onDragStart={(event) => {\n          setIsHovered(false);\n          event.dataTransfer.setData(\n            MIME_TYPES.excalidrawlib,\n            JSON.stringify(elements),\n          );\n        }}\n      />\n      {adder}\n      {id && elements && (isHovered || isMobile || selected) && (\n        <CheckboxItem\n          checked={selected}\n          onChange={(checked, event) => onToggle(id, event)}\n          className=\"library-unit__checkbox\"\n        />\n      )}\n    </div>\n  );\n};\n","import { chunk } from \"lodash\";\nimport { useCallback, useState } from \"react\";\nimport { importLibraryFromJSON, saveLibraryAsJSON } from \"../data/json\";\nimport Library from \"../data/library\";\nimport { ExcalidrawElement, NonDeleted } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport {\n  AppState,\n  BinaryFiles,\n  ExcalidrawProps,\n  LibraryItem,\n  LibraryItems,\n} from \"../types\";\nimport { muteFSAbortError } from \"../utils\";\nimport { useIsMobile } from \"./App\";\nimport ConfirmDialog from \"./ConfirmDialog\";\nimport { exportToFileIcon, load, publishIcon, trash } from \"./icons\";\nimport { LibraryUnit } from \"./LibraryUnit\";\nimport Stack from \"./Stack\";\nimport { ToolButton } from \"./ToolButton\";\nimport { Tooltip } from \"./Tooltip\";\n\nimport \"./LibraryMenuItems.scss\";\nimport { VERSIONS } from \"../constants\";\n\nconst LibraryMenuItems = ({\n  libraryItems,\n  onRemoveFromLibrary,\n  onAddToLibrary,\n  onInsertShape,\n  pendingElements,\n  theme,\n  setAppState,\n  libraryReturnUrl,\n  library,\n  files,\n  id,\n  selectedItems,\n  onToggle,\n  onPublish,\n  resetLibrary,\n}: {\n  libraryItems: LibraryItems;\n  pendingElements: LibraryItem[\"elements\"];\n  onRemoveFromLibrary: () => void;\n  onInsertShape: (elements: LibraryItem[\"elements\"]) => void;\n  onAddToLibrary: (elements: LibraryItem[\"elements\"]) => void;\n  theme: AppState[\"theme\"];\n  files: BinaryFiles;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  libraryReturnUrl: ExcalidrawProps[\"libraryReturnUrl\"];\n  library: Library;\n  id: string;\n  selectedItems: LibraryItem[\"id\"][];\n  onToggle: (id: LibraryItem[\"id\"], event: React.MouseEvent) => void;\n  onPublish: () => void;\n  resetLibrary: () => void;\n}) => {\n  const renderRemoveLibAlert = useCallback(() => {\n    const content = selectedItems.length\n      ? t(\"alerts.removeItemsFromsLibrary\", { count: selectedItems.length })\n      : t(\"alerts.resetLibrary\");\n    const title = selectedItems.length\n      ? t(\"confirmDialog.removeItemsFromLib\")\n      : t(\"confirmDialog.resetLibrary\");\n    return (\n      <ConfirmDialog\n        onConfirm={() => {\n          if (selectedItems.length) {\n            onRemoveFromLibrary();\n          } else {\n            resetLibrary();\n          }\n          setShowRemoveLibAlert(false);\n        }}\n        onCancel={() => {\n          setShowRemoveLibAlert(false);\n        }}\n        title={title}\n      >\n        <p>{content}</p>\n      </ConfirmDialog>\n    );\n  }, [selectedItems, onRemoveFromLibrary, resetLibrary]);\n\n  const [showRemoveLibAlert, setShowRemoveLibAlert] = useState(false);\n\n  const isMobile = useIsMobile();\n\n  const renderLibraryActions = () => {\n    const itemsSelected = !!selectedItems.length;\n    const items = itemsSelected\n      ? libraryItems.filter((item) => selectedItems.includes(item.id))\n      : libraryItems;\n    const resetLabel = itemsSelected\n      ? t(\"buttons.remove\")\n      : t(\"buttons.resetLibrary\");\n    return (\n      <div className=\"library-actions\">\n        {(!itemsSelected || !isMobile) && (\n          <ToolButton\n            key=\"import\"\n            type=\"button\"\n            title={t(\"buttons.load\")}\n            aria-label={t(\"buttons.load\")}\n            icon={load}\n            onClick={() => {\n              importLibraryFromJSON(library)\n                .then(() => {\n                  // Close and then open to get the libraries updated\n                  setAppState({ isLibraryOpen: false });\n                  setAppState({ isLibraryOpen: true });\n                })\n                .catch(muteFSAbortError)\n                .catch((error) => {\n                  setAppState({ errorMessage: error.message });\n                });\n            }}\n            className=\"library-actions--load\"\n          />\n        )}\n        {!!items.length && (\n          <>\n            <ToolButton\n              key=\"export\"\n              type=\"button\"\n              title={t(\"buttons.export\")}\n              aria-label={t(\"buttons.export\")}\n              icon={exportToFileIcon}\n              onClick={async () => {\n                const libraryItems = itemsSelected\n                  ? items\n                  : await library.loadLibrary();\n                saveLibraryAsJSON(libraryItems)\n                  .catch(muteFSAbortError)\n                  .catch((error) => {\n                    setAppState({ errorMessage: error.message });\n                  });\n              }}\n              className=\"library-actions--export\"\n            >\n              {selectedItems.length > 0 && (\n                <span className=\"library-actions-counter\">\n                  {selectedItems.length}\n                </span>\n              )}\n            </ToolButton>\n            <ToolButton\n              key=\"reset\"\n              type=\"button\"\n              title={resetLabel}\n              aria-label={resetLabel}\n              icon={trash}\n              onClick={() => setShowRemoveLibAlert(true)}\n              className=\"library-actions--remove\"\n            >\n              {selectedItems.length > 0 && (\n                <span className=\"library-actions-counter\">\n                  {selectedItems.length}\n                </span>\n              )}\n            </ToolButton>\n          </>\n        )}\n        {itemsSelected && !isPublished && (\n          <Tooltip label={t(\"hints.publishLibrary\")}>\n            <ToolButton\n              type=\"button\"\n              aria-label={t(\"buttons.publishLibrary\")}\n              label={t(\"buttons.publishLibrary\")}\n              icon={publishIcon}\n              className=\"library-actions--publish\"\n              onClick={onPublish}\n            >\n              {!isMobile && <label>{t(\"buttons.publishLibrary\")}</label>}\n              {selectedItems.length > 0 && (\n                <span className=\"library-actions-counter\">\n                  {selectedItems.length}\n                </span>\n              )}\n            </ToolButton>\n          </Tooltip>\n        )}\n      </div>\n    );\n  };\n\n  const CELLS_PER_ROW = isMobile ? 4 : 6;\n\n  const referrer =\n    libraryReturnUrl || window.location.origin + window.location.pathname;\n  const isPublished = selectedItems.some(\n    (id) => libraryItems.find((item) => item.id === id)?.status === \"published\",\n  );\n\n  const createLibraryItemCompo = (params: {\n    item:\n      | LibraryItem\n      | /* pending library item */ {\n          id: null;\n          elements: readonly NonDeleted<ExcalidrawElement>[];\n        }\n      | null;\n    onClick?: () => void;\n    key: string;\n  }) => {\n    return (\n      <Stack.Col key={params.key}>\n        <LibraryUnit\n          elements={params.item?.elements}\n          files={files}\n          isPending={!params.item?.id && !!params.item?.elements}\n          onClick={params.onClick || (() => {})}\n          id={params.item?.id || null}\n          selected={!!params.item?.id && selectedItems.includes(params.item.id)}\n          onToggle={(id, event) => {\n            onToggle(id, event);\n          }}\n        />\n      </Stack.Col>\n    );\n  };\n\n  const renderLibrarySection = (\n    items: (\n      | LibraryItem\n      | /* pending library item */ {\n          id: null;\n          elements: readonly NonDeleted<ExcalidrawElement>[];\n        }\n    )[],\n  ) => {\n    const _items = items.map((item) => {\n      if (item.id) {\n        return createLibraryItemCompo({\n          item,\n          onClick: () => onInsertShape(item.elements),\n          key: item.id,\n        });\n      }\n      return createLibraryItemCompo({\n        key: \"__pending__item__\",\n        item,\n        onClick: () => onAddToLibrary(pendingElements),\n      });\n    });\n\n    // ensure we render all empty cells if no items are present\n    let rows = chunk(_items, CELLS_PER_ROW);\n    if (!rows.length) {\n      rows = [[]];\n    }\n\n    return rows.map((rowItems, index, rows) => {\n      if (index === rows.length - 1) {\n        // pad row with empty cells\n        rowItems = rowItems.concat(\n          new Array(CELLS_PER_ROW - rowItems.length)\n            .fill(null)\n            .map((_, index) => {\n              return createLibraryItemCompo({\n                key: `empty_${index}`,\n                item: null,\n              });\n            }),\n        );\n      }\n      return (\n        <Stack.Row align=\"center\" gap={1} key={index}>\n          {rowItems}\n        </Stack.Row>\n      );\n    });\n  };\n\n  const publishedItems = libraryItems.filter(\n    (item) => item.status === \"published\",\n  );\n  const unpublishedItems = [\n    // append pending library item\n    ...(pendingElements.length\n      ? [{ id: null, elements: pendingElements }]\n      : []),\n    ...libraryItems.filter((item) => item.status !== \"published\"),\n  ];\n\n  return (\n    <div className=\"library-menu-items-container\">\n      {showRemoveLibAlert && renderRemoveLibAlert()}\n      <div className=\"layer-ui__library-header\" key=\"library-header\">\n        {renderLibraryActions()}\n        <a\n          href={`${process.env.REACT_APP_LIBRARY_URL}?target=${\n            window.name || \"_blank\"\n          }&referrer=${referrer}&useHash=true&token=${id}&theme=${theme}&version=${\n            VERSIONS.excalidrawLibrary\n          }`}\n          target=\"_excalidraw_libraries\"\n        >\n          {t(\"labels.libraries\")}\n        </a>\n      </div>\n      <Stack.Col\n        className=\"library-menu-items-container__items\"\n        align=\"start\"\n        gap={1}\n      >\n        <>\n          <div className=\"separator\">{t(\"labels.personalLib\")}</div>\n          {renderLibrarySection(unpublishedItems)}\n        </>\n\n        <>\n          <div className=\"separator\">{t(\"labels.excalidrawLib\")} </div>\n\n          {renderLibrarySection(publishedItems)}\n        </>\n      </Stack.Col>\n    </div>\n  );\n};\n\nexport default LibraryMenuItems;\n","import { useRef, useState, useEffect, useCallback, RefObject } from \"react\";\nimport Library from \"../data/library\";\nimport { t } from \"../i18n\";\nimport { randomId } from \"../random\";\nimport {\n  LibraryItems,\n  LibraryItem,\n  AppState,\n  BinaryFiles,\n  ExcalidrawProps,\n} from \"../types\";\nimport { Dialog } from \"./Dialog\";\nimport { Island } from \"./Island\";\nimport PublishLibrary from \"./PublishLibrary\";\nimport { ToolButton } from \"./ToolButton\";\n\nimport \"./LibraryMenu.scss\";\nimport LibraryMenuItems from \"./LibraryMenuItems\";\nimport { EVENT } from \"../constants\";\nimport { KEYS } from \"../keys\";\nimport { arrayToMap } from \"../utils\";\n\nconst useOnClickOutside = (\n  ref: RefObject<HTMLElement>,\n  cb: (event: MouseEvent) => void,\n) => {\n  useEffect(() => {\n    const listener = (event: MouseEvent) => {\n      if (!ref.current) {\n        return;\n      }\n\n      if (\n        event.target instanceof Element &&\n        (ref.current.contains(event.target) ||\n          !document.body.contains(event.target))\n      ) {\n        return;\n      }\n\n      cb(event);\n    };\n    document.addEventListener(\"pointerdown\", listener, false);\n\n    return () => {\n      document.removeEventListener(\"pointerdown\", listener);\n    };\n  }, [ref, cb]);\n};\n\nconst getSelectedItems = (\n  libraryItems: LibraryItems,\n  selectedItems: LibraryItem[\"id\"][],\n) => libraryItems.filter((item) => selectedItems.includes(item.id));\n\nexport const LibraryMenu = ({\n  onClose,\n  onInsertShape,\n  pendingElements,\n  onAddToLibrary,\n  theme,\n  setAppState,\n  files,\n  libraryReturnUrl,\n  focusContainer,\n  library,\n  id,\n  appState,\n}: {\n  pendingElements: LibraryItem[\"elements\"];\n  onClose: () => void;\n  onInsertShape: (elements: LibraryItem[\"elements\"]) => void;\n  onAddToLibrary: () => void;\n  theme: AppState[\"theme\"];\n  files: BinaryFiles;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  libraryReturnUrl: ExcalidrawProps[\"libraryReturnUrl\"];\n  focusContainer: () => void;\n  library: Library;\n  id: string;\n  appState: AppState;\n}) => {\n  const ref = useRef<HTMLDivElement | null>(null);\n\n  useOnClickOutside(ref, (event) => {\n    // If click on the library icon, do nothing.\n    if ((event.target as Element).closest(\".ToolIcon__library\")) {\n      return;\n    }\n    onClose();\n  });\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === KEYS.ESCAPE) {\n        onClose();\n      }\n    };\n    document.addEventListener(EVENT.KEYDOWN, handleKeyDown);\n    return () => {\n      document.removeEventListener(EVENT.KEYDOWN, handleKeyDown);\n    };\n  }, [onClose]);\n\n  const [libraryItems, setLibraryItems] = useState<LibraryItems>([]);\n\n  const [loadingState, setIsLoading] = useState<\n    \"preloading\" | \"loading\" | \"ready\"\n  >(\"preloading\");\n  const [selectedItems, setSelectedItems] = useState<LibraryItem[\"id\"][]>([]);\n  const [showPublishLibraryDialog, setShowPublishLibraryDialog] =\n    useState(false);\n  const [publishLibSuccess, setPublishLibSuccess] = useState<null | {\n    url: string;\n    authorName: string;\n  }>(null);\n  const loadingTimerRef = useRef<number | null>(null);\n\n  useEffect(() => {\n    Promise.race([\n      new Promise((resolve) => {\n        loadingTimerRef.current = window.setTimeout(() => {\n          resolve(\"loading\");\n        }, 100);\n      }),\n      library.loadLibrary().then((items) => {\n        setLibraryItems(items);\n        setIsLoading(\"ready\");\n      }),\n    ]).then((data) => {\n      if (data === \"loading\") {\n        setIsLoading(\"loading\");\n      }\n    });\n    return () => {\n      clearTimeout(loadingTimerRef.current!);\n    };\n  }, [library]);\n\n  const removeFromLibrary = useCallback(async () => {\n    const items = await library.loadLibrary();\n\n    const nextItems = items.filter((item) => !selectedItems.includes(item.id));\n    library.saveLibrary(nextItems).catch((error) => {\n      setLibraryItems(items);\n      setAppState({ errorMessage: t(\"alerts.errorRemovingFromLibrary\") });\n    });\n    setSelectedItems([]);\n    setLibraryItems(nextItems);\n  }, [library, setAppState, selectedItems, setSelectedItems]);\n\n  const resetLibrary = useCallback(() => {\n    library.resetLibrary();\n    setLibraryItems([]);\n    focusContainer();\n  }, [library, focusContainer]);\n\n  const addToLibrary = useCallback(\n    async (elements: LibraryItem[\"elements\"]) => {\n      if (elements.some((element) => element.type === \"image\")) {\n        return setAppState({\n          errorMessage: \"Support for adding images to the library coming soon!\",\n        });\n      }\n      const items = await library.loadLibrary();\n      const nextItems: LibraryItems = [\n        {\n          status: \"unpublished\",\n          elements,\n          id: randomId(),\n          created: Date.now(),\n        },\n        ...items,\n      ];\n      onAddToLibrary();\n      library.saveLibrary(nextItems).catch((error) => {\n        setLibraryItems(items);\n        setAppState({ errorMessage: t(\"alerts.errorAddingToLibrary\") });\n      });\n      setLibraryItems(nextItems);\n    },\n    [onAddToLibrary, library, setAppState],\n  );\n\n  const renderPublishSuccess = useCallback(() => {\n    return (\n      <Dialog\n        onCloseRequest={() => setPublishLibSuccess(null)}\n        title={t(\"publishSuccessDialog.title\")}\n        className=\"publish-library-success\"\n        small={true}\n      >\n        <p>\n          {t(\"publishSuccessDialog.content\", {\n            authorName: publishLibSuccess!.authorName,\n          })}{\" \"}\n          <a\n            href={publishLibSuccess?.url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {t(\"publishSuccessDialog.link\")}\n          </a>\n        </p>\n        <ToolButton\n          type=\"button\"\n          title={t(\"buttons.close\")}\n          aria-label={t(\"buttons.close\")}\n          label={t(\"buttons.close\")}\n          onClick={() => setPublishLibSuccess(null)}\n          data-testid=\"publish-library-success-close\"\n          className=\"publish-library-success-close\"\n        />\n      </Dialog>\n    );\n  }, [setPublishLibSuccess, publishLibSuccess]);\n\n  const onPublishLibSuccess = useCallback(\n    (data) => {\n      setShowPublishLibraryDialog(false);\n      setPublishLibSuccess({ url: data.url, authorName: data.authorName });\n      const nextLibItems = libraryItems.slice();\n      nextLibItems.forEach((libItem) => {\n        if (selectedItems.includes(libItem.id)) {\n          libItem.status = \"published\";\n        }\n      });\n      library.saveLibrary(nextLibItems);\n      setLibraryItems(nextLibItems);\n    },\n    [\n      setShowPublishLibraryDialog,\n      setPublishLibSuccess,\n      libraryItems,\n      selectedItems,\n      library,\n    ],\n  );\n\n  const [lastSelectedItem, setLastSelectedItem] = useState<\n    LibraryItem[\"id\"] | null\n  >(null);\n\n  return loadingState === \"preloading\" ? null : (\n    <Island padding={1} ref={ref} className=\"layer-ui__library\">\n      {showPublishLibraryDialog && (\n        <PublishLibrary\n          onClose={() => setShowPublishLibraryDialog(false)}\n          libraryItems={getSelectedItems(libraryItems, selectedItems)}\n          appState={appState}\n          onSuccess={onPublishLibSuccess}\n          onError={(error) => window.alert(error)}\n          updateItemsInStorage={() => library.saveLibrary(libraryItems)}\n          onRemove={(id: string) =>\n            setSelectedItems(selectedItems.filter((_id) => _id !== id))\n          }\n        />\n      )}\n      {publishLibSuccess && renderPublishSuccess()}\n\n      {loadingState === \"loading\" ? (\n        <div className=\"layer-ui__library-message\">\n          {t(\"labels.libraryLoadingMessage\")}\n        </div>\n      ) : (\n        <LibraryMenuItems\n          libraryItems={libraryItems}\n          onRemoveFromLibrary={removeFromLibrary}\n          onAddToLibrary={addToLibrary}\n          onInsertShape={onInsertShape}\n          pendingElements={pendingElements}\n          setAppState={setAppState}\n          libraryReturnUrl={libraryReturnUrl}\n          library={library}\n          theme={theme}\n          files={files}\n          id={id}\n          selectedItems={selectedItems}\n          onToggle={(id, event) => {\n            const shouldSelect = !selectedItems.includes(id);\n\n            if (shouldSelect) {\n              if (event.shiftKey && lastSelectedItem) {\n                const rangeStart = libraryItems.findIndex(\n                  (item) => item.id === lastSelectedItem,\n                );\n                const rangeEnd = libraryItems.findIndex(\n                  (item) => item.id === id,\n                );\n\n                if (rangeStart === -1 || rangeEnd === -1) {\n                  setSelectedItems([...selectedItems, id]);\n                  return;\n                }\n\n                const selectedItemsMap = arrayToMap(selectedItems);\n                const nextSelectedIds = libraryItems.reduce(\n                  (acc: LibraryItem[\"id\"][], item, idx) => {\n                    if (\n                      (idx >= rangeStart && idx <= rangeEnd) ||\n                      selectedItemsMap.has(item.id)\n                    ) {\n                      acc.push(item.id);\n                    }\n                    return acc;\n                  },\n                  [],\n                );\n\n                setSelectedItems(nextSelectedIds);\n              } else {\n                setSelectedItems([...selectedItems, id]);\n              }\n              setLastSelectedItem(id);\n            } else {\n              setLastSelectedItem(null);\n              setSelectedItems(selectedItems.filter((_id) => _id !== id));\n            }\n          }}\n          onPublish={() => setShowPublishLibraryDialog(true)}\n          resetLibrary={resetLibrary}\n        />\n      )}\n    </Island>\n  );\n};\n","import clsx from \"clsx\";\nimport React, { useCallback } from \"react\";\nimport { ActionManager } from \"../actions/manager\";\nimport { CLASSES } from \"../constants\";\nimport { exportCanvas } from \"../data\";\nimport { isTextElement, showSelectedShapeActions } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { Language, t } from \"../i18n\";\nimport { useIsMobile } from \"../components/App\";\nimport { calculateScrollCenter, getSelectedElements } from \"../scene\";\nimport { ExportType } from \"../scene/types\";\nimport { AppProps, AppState, ExcalidrawProps, BinaryFiles } from \"../types\";\nimport { muteFSAbortError } from \"../utils\";\nimport { SelectedShapeActions, ShapesSwitcher, ZoomActions } from \"./Actions\";\nimport { BackgroundPickerAndDarkModeToggle } from \"./BackgroundPickerAndDarkModeToggle\";\nimport CollabButton from \"./CollabButton\";\nimport { ErrorDialog } from \"./ErrorDialog\";\nimport { ExportCB, ImageExportDialog } from \"./ImageExportDialog\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { HintViewer } from \"./HintViewer\";\nimport { Island } from \"./Island\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { LockButton } from \"./LockButton\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { PasteChartDialog } from \"./PasteChartDialog\";\nimport { Section } from \"./Section\";\nimport { HelpDialog } from \"./HelpDialog\";\nimport Stack from \"./Stack\";\nimport { Tooltip } from \"./Tooltip\";\nimport { UserList } from \"./UserList\";\nimport Library from \"../data/library\";\nimport { JSONExportDialog } from \"./JSONExportDialog\";\nimport { LibraryButton } from \"./LibraryButton\";\nimport { isImageFileHandle } from \"../data/blob\";\nimport { LibraryMenu } from \"./LibraryMenu\";\n\nimport \"./LayerUI.scss\";\nimport \"./Toolbar.scss\";\nimport { PenModeButton } from \"./PenModeButton\";\n\ninterface LayerUIProps {\n  actionManager: ActionManager;\n  appState: AppState;\n  files: BinaryFiles;\n  canvas: HTMLCanvasElement | null;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  elements: readonly NonDeletedExcalidrawElement[];\n  onCollabButtonClick?: () => void;\n  onLockToggle: () => void;\n  onPenModeToggle: () => void;\n  onInsertElements: (elements: readonly NonDeletedExcalidrawElement[]) => void;\n  zenModeEnabled: boolean;\n  showExitZenModeBtn: boolean;\n  showThemeBtn: boolean;\n  toggleZenMode: () => void;\n  langCode: Language[\"code\"];\n  isCollaborating: boolean;\n  renderTopRightUI?: (\n    isMobile: boolean,\n    appState: AppState,\n  ) => JSX.Element | null;\n  renderCustomFooter?: (isMobile: boolean, appState: AppState) => JSX.Element;\n  viewModeEnabled: boolean;\n  libraryReturnUrl: ExcalidrawProps[\"libraryReturnUrl\"];\n  UIOptions: AppProps[\"UIOptions\"];\n  focusContainer: () => void;\n  library: Library;\n  id: string;\n  onImageAction: (data: { insertOnCanvasDirectly: boolean }) => void;\n}\n\nconst LayerUI = ({\n  actionManager,\n  appState,\n  files,\n  setAppState,\n  canvas,\n  elements,\n  onCollabButtonClick,\n  onLockToggle,\n  onPenModeToggle,\n  onInsertElements,\n  zenModeEnabled,\n  showExitZenModeBtn,\n  showThemeBtn,\n  toggleZenMode,\n  isCollaborating,\n  renderTopRightUI,\n  renderCustomFooter,\n  viewModeEnabled,\n  libraryReturnUrl,\n  UIOptions,\n  focusContainer,\n  library,\n  id,\n  onImageAction,\n}: LayerUIProps) => {\n  const isMobile = useIsMobile();\n\n  const renderJSONExportDialog = () => {\n    if (!UIOptions.canvasActions.export) {\n      return null;\n    }\n\n    return (\n      <JSONExportDialog\n        elements={elements}\n        appState={appState}\n        files={files}\n        actionManager={actionManager}\n        exportOpts={UIOptions.canvasActions.export}\n        canvas={canvas}\n      />\n    );\n  };\n\n  const renderImageExportDialog = () => {\n    if (!UIOptions.canvasActions.saveAsImage) {\n      return null;\n    }\n\n    const createExporter =\n      (type: ExportType): ExportCB =>\n      async (exportedElements) => {\n        const fileHandle = await exportCanvas(\n          type,\n          exportedElements,\n          appState,\n          files,\n          {\n            exportBackground: appState.exportBackground,\n            name: appState.name,\n            viewBackgroundColor: appState.viewBackgroundColor,\n          },\n        )\n          .catch(muteFSAbortError)\n          .catch((error) => {\n            console.error(error);\n            setAppState({ errorMessage: error.message });\n          });\n\n        if (\n          appState.exportEmbedScene &&\n          fileHandle &&\n          isImageFileHandle(fileHandle)\n        ) {\n          setAppState({ fileHandle });\n        }\n      };\n\n    return (\n      <ImageExportDialog\n        elements={elements}\n        appState={appState}\n        files={files}\n        actionManager={actionManager}\n        onExportToPng={createExporter(\"png\")}\n        onExportToSvg={createExporter(\"svg\")}\n        onExportToClipboard={createExporter(\"clipboard\")}\n      />\n    );\n  };\n\n  const Separator = () => {\n    return <div style={{ width: \".625em\" }} />;\n  };\n\n  const renderViewModeCanvasActions = () => {\n    return (\n      <Section\n        heading=\"canvasActions\"\n        className={clsx(\"zen-mode-transition\", {\n          \"transition-left\": zenModeEnabled,\n        })}\n      >\n        {/* the zIndex ensures this menu has higher stacking order,\n         see https://github.com/excalidraw/excalidraw/pull/1445 */}\n        <Island padding={2} style={{ zIndex: 1 }}>\n          <Stack.Col gap={4}>\n            <Stack.Row gap={1} justifyContent=\"space-between\">\n              {renderJSONExportDialog()}\n              {renderImageExportDialog()}\n            </Stack.Row>\n          </Stack.Col>\n        </Island>\n      </Section>\n    );\n  };\n\n  const renderCanvasActions = () => (\n    <Section\n      heading=\"canvasActions\"\n      className={clsx(\"zen-mode-transition\", {\n        \"transition-left\": zenModeEnabled,\n      })}\n    >\n      {/* the zIndex ensures this menu has higher stacking order,\n         see https://github.com/excalidraw/excalidraw/pull/1445 */}\n      <Island padding={2} style={{ zIndex: 1 }}>\n        <Stack.Col gap={4}>\n          <Stack.Row gap={1} justifyContent=\"space-between\">\n            {actionManager.renderAction(\"clearCanvas\")}\n            <Separator />\n            {actionManager.renderAction(\"loadScene\")}\n            {renderJSONExportDialog()}\n            {renderImageExportDialog()}\n            <Separator />\n            {onCollabButtonClick && (\n              <CollabButton\n                isCollaborating={isCollaborating}\n                collaboratorCount={appState.collaborators.size}\n                onClick={onCollabButtonClick}\n              />\n            )}\n          </Stack.Row>\n          <BackgroundPickerAndDarkModeToggle\n            actionManager={actionManager}\n            appState={appState}\n            setAppState={setAppState}\n            showThemeBtn={showThemeBtn}\n          />\n          {appState.fileHandle && (\n            <>{actionManager.renderAction(\"saveToActiveFile\")}</>\n          )}\n        </Stack.Col>\n      </Island>\n    </Section>\n  );\n\n  const renderSelectedShapeActions = () => (\n    <Section\n      heading=\"selectedShapeActions\"\n      className={clsx(\"zen-mode-transition\", {\n        \"transition-left\": zenModeEnabled,\n      })}\n    >\n      <Island\n        className={CLASSES.SHAPE_ACTIONS_MENU}\n        padding={2}\n        style={{\n          // we want to make sure this doesn't overflow so subtracting 200\n          // which is approximately height of zoom footer and top left menu items with some buffer\n          // if active file name is displayed, subtracting 248 to account for its height\n          maxHeight: `${appState.height - (appState.fileHandle ? 248 : 200)}px`,\n        }}\n      >\n        <SelectedShapeActions\n          appState={appState}\n          elements={elements}\n          renderAction={actionManager.renderAction}\n          elementType={appState.elementType}\n        />\n      </Island>\n    </Section>\n  );\n\n  const closeLibrary = useCallback(() => {\n    const isDialogOpen = !!document.querySelector(\".Dialog\");\n\n    // Prevent closing if any dialog is open\n    if (isDialogOpen) {\n      return;\n    }\n    setAppState({ isLibraryOpen: false });\n  }, [setAppState]);\n\n  const deselectItems = useCallback(() => {\n    setAppState({\n      selectedElementIds: {},\n      selectedGroupIds: {},\n    });\n  }, [setAppState]);\n\n  const libraryMenu = appState.isLibraryOpen ? (\n    <LibraryMenu\n      pendingElements={getSelectedElements(elements, appState, true)}\n      onClose={closeLibrary}\n      onInsertShape={onInsertElements}\n      onAddToLibrary={deselectItems}\n      setAppState={setAppState}\n      libraryReturnUrl={libraryReturnUrl}\n      focusContainer={focusContainer}\n      library={library}\n      theme={appState.theme}\n      files={files}\n      id={id}\n      appState={appState}\n    />\n  ) : null;\n\n  const renderFixedSideContainer = () => {\n    const shouldRenderSelectedShapeActions = showSelectedShapeActions(\n      appState,\n      elements,\n    );\n\n    return (\n      <FixedSideContainer side=\"top\">\n        <div className=\"App-menu App-menu_top\">\n          <Stack.Col\n            gap={4}\n            className={clsx({ \"disable-pointerEvents\": zenModeEnabled })}\n          >\n            {viewModeEnabled\n              ? renderViewModeCanvasActions()\n              : renderCanvasActions()}\n            {shouldRenderSelectedShapeActions && renderSelectedShapeActions()}\n          </Stack.Col>\n          {!viewModeEnabled && (\n            <Section heading=\"shapes\">\n              {(heading) => (\n                <Stack.Col gap={4} align=\"start\">\n                  <Stack.Row\n                    gap={1}\n                    className={clsx(\"App-toolbar-container\", {\n                      \"zen-mode\": zenModeEnabled,\n                    })}\n                  >\n                    <PenModeButton\n                      zenModeEnabled={zenModeEnabled}\n                      checked={appState.penMode}\n                      onChange={onPenModeToggle}\n                      title={t(\"toolBar.penMode\")}\n                      penDetected={appState.penDetected}\n                    />\n                    <LockButton\n                      zenModeEnabled={zenModeEnabled}\n                      checked={appState.elementLocked}\n                      onChange={onLockToggle}\n                      title={t(\"toolBar.lock\")}\n                    />\n                    <Island\n                      padding={1}\n                      className={clsx(\"App-toolbar\", {\n                        \"zen-mode\": zenModeEnabled,\n                      })}\n                    >\n                      <HintViewer\n                        appState={appState}\n                        elements={elements}\n                        isMobile={isMobile}\n                      />\n                      {heading}\n                      <Stack.Row gap={1}>\n                        <ShapesSwitcher\n                          canvas={canvas}\n                          elementType={appState.elementType}\n                          setAppState={setAppState}\n                          onImageAction={({ pointerType }) => {\n                            onImageAction({\n                              insertOnCanvasDirectly: pointerType !== \"mouse\",\n                            });\n                          }}\n                        />\n                      </Stack.Row>\n                    </Island>\n                    <LibraryButton\n                      appState={appState}\n                      setAppState={setAppState}\n                    />\n                  </Stack.Row>\n                  {libraryMenu}\n                </Stack.Col>\n              )}\n            </Section>\n          )}\n          <div\n            className={clsx(\n              \"layer-ui__wrapper__top-right zen-mode-transition\",\n              {\n                \"transition-right\": zenModeEnabled,\n              },\n            )}\n          >\n            <UserList>\n              {appState.collaborators.size > 0 &&\n                Array.from(appState.collaborators)\n                  // Collaborator is either not initialized or is actually the current user.\n                  .filter(([_, client]) => Object.keys(client).length !== 0)\n                  .map(([clientId, client]) => (\n                    <Tooltip\n                      label={client.username || \"Unknown user\"}\n                      key={clientId}\n                    >\n                      {actionManager.renderAction(\"goToCollaborator\", {\n                        id: clientId,\n                      })}\n                    </Tooltip>\n                  ))}\n            </UserList>\n            {renderTopRightUI?.(isMobile, appState)}\n          </div>\n        </div>\n      </FixedSideContainer>\n    );\n  };\n\n  const renderBottomAppMenu = () => {\n    return (\n      <footer\n        role=\"contentinfo\"\n        className=\"layer-ui__wrapper__footer App-menu App-menu_bottom\"\n      >\n        <div\n          className={clsx(\n            \"layer-ui__wrapper__footer-left zen-mode-transition\",\n            {\n              \"layer-ui__wrapper__footer-left--transition-left\": zenModeEnabled,\n            },\n          )}\n        >\n          <Stack.Col gap={2}>\n            <Section heading=\"canvasActions\">\n              <Island padding={1}>\n                <ZoomActions\n                  renderAction={actionManager.renderAction}\n                  zoom={appState.zoom}\n                />\n              </Island>\n              {!viewModeEnabled && (\n                <div\n                  className={clsx(\"undo-redo-buttons zen-mode-transition\", {\n                    \"layer-ui__wrapper__footer-left--transition-bottom\":\n                      zenModeEnabled,\n                  })}\n                >\n                  {actionManager.renderAction(\"undo\", { size: \"small\" })}\n                  {actionManager.renderAction(\"redo\", { size: \"small\" })}\n                </div>\n              )}\n              <div\n                className={clsx(\"eraser-buttons zen-mode-transition\", {\n                  \"layer-ui__wrapper__footer-left--transition-left\":\n                    zenModeEnabled,\n                })}\n              >\n                {actionManager.renderAction(\"eraser\", { size: \"small\" })}\n              </div>\n            </Section>\n          </Stack.Col>\n        </div>\n        <div\n          className={clsx(\n            \"layer-ui__wrapper__footer-center zen-mode-transition\",\n            {\n              \"layer-ui__wrapper__footer-left--transition-bottom\":\n                zenModeEnabled,\n            },\n          )}\n        >\n          {renderCustomFooter?.(false, appState)}\n        </div>\n        <div\n          className={clsx(\n            \"layer-ui__wrapper__footer-right zen-mode-transition\",\n            {\n              \"transition-right disable-pointerEvents\": zenModeEnabled,\n            },\n          )}\n        >\n          {actionManager.renderAction(\"toggleShortcuts\")}\n        </div>\n        <button\n          className={clsx(\"disable-zen-mode\", {\n            \"disable-zen-mode--visible\": showExitZenModeBtn,\n          })}\n          onClick={toggleZenMode}\n        >\n          {t(\"buttons.exitZenMode\")}\n        </button>\n      </footer>\n    );\n  };\n\n  const dialogs = (\n    <>\n      {appState.isLoading && <LoadingMessage />}\n      {appState.errorMessage && (\n        <ErrorDialog\n          message={appState.errorMessage}\n          onClose={() => setAppState({ errorMessage: null })}\n        />\n      )}\n      {appState.showHelpDialog && (\n        <HelpDialog\n          onClose={() => {\n            setAppState({ showHelpDialog: false });\n          }}\n        />\n      )}\n      {appState.pasteDialog.shown && (\n        <PasteChartDialog\n          setAppState={setAppState}\n          appState={appState}\n          onInsertChart={onInsertElements}\n          onClose={() =>\n            setAppState({\n              pasteDialog: { shown: false, data: null },\n            })\n          }\n        />\n      )}\n    </>\n  );\n\n  return isMobile ? (\n    <>\n      {dialogs}\n      <MobileMenu\n        appState={appState}\n        elements={elements}\n        actionManager={actionManager}\n        libraryMenu={libraryMenu}\n        renderJSONExportDialog={renderJSONExportDialog}\n        renderImageExportDialog={renderImageExportDialog}\n        setAppState={setAppState}\n        onCollabButtonClick={onCollabButtonClick}\n        onLockToggle={onLockToggle}\n        onPenModeToggle={onPenModeToggle}\n        canvas={canvas}\n        isCollaborating={isCollaborating}\n        renderCustomFooter={renderCustomFooter}\n        viewModeEnabled={viewModeEnabled}\n        showThemeBtn={showThemeBtn}\n        onImageAction={onImageAction}\n        renderTopRightUI={renderTopRightUI}\n      />\n    </>\n  ) : (\n    <div\n      className={clsx(\"layer-ui__wrapper\", {\n        \"disable-pointerEvents\":\n          appState.draggingElement ||\n          appState.resizingElement ||\n          (appState.editingElement && !isTextElement(appState.editingElement)),\n      })}\n    >\n      {dialogs}\n      {renderFixedSideContainer()}\n      {renderBottomAppMenu()}\n      {appState.scrolledOutside && (\n        <button\n          className=\"scroll-back-to-content\"\n          onClick={() => {\n            setAppState({\n              ...calculateScrollCenter(elements, appState, canvas),\n            });\n          }}\n        >\n          {t(\"buttons.scrollBackToContent\")}\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst areEqual = (prev: LayerUIProps, next: LayerUIProps) => {\n  const getNecessaryObj = (appState: AppState): Partial<AppState> => {\n    const {\n      suggestedBindings,\n      startBoundElement: boundElement,\n      ...ret\n    } = appState;\n    return ret;\n  };\n  const prevAppState = getNecessaryObj(prev.appState);\n  const nextAppState = getNecessaryObj(next.appState);\n\n  const keys = Object.keys(prevAppState) as (keyof Partial<AppState>)[];\n  return (\n    prev.renderCustomFooter === next.renderCustomFooter &&\n    prev.langCode === next.langCode &&\n    prev.elements === next.elements &&\n    prev.files === next.files &&\n    keys.every((key) => prevAppState[key] === nextAppState[key])\n  );\n};\n\nexport default React.memo(LayerUI, areEqual);\n","import React from \"react\";\nimport { getCommonBounds } from \"../element/bounds\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { useIsMobile } from \"../components/App\";\nimport { getTargetElements } from \"../scene\";\nimport { AppState, ExcalidrawProps } from \"../types\";\nimport { close } from \"./icons\";\nimport { Island } from \"./Island\";\nimport \"./Stats.scss\";\n\nexport const Stats = (props: {\n  appState: AppState;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  elements: readonly NonDeletedExcalidrawElement[];\n  onClose: () => void;\n  renderCustomStats: ExcalidrawProps[\"renderCustomStats\"];\n}) => {\n  const isMobile = useIsMobile();\n\n  const boundingBox = getCommonBounds(props.elements);\n  const selectedElements = getTargetElements(props.elements, props.appState);\n  const selectedBoundingBox = getCommonBounds(selectedElements);\n\n  if (isMobile && props.appState.openMenu) {\n    return null;\n  }\n\n  return (\n    <div className=\"Stats\">\n      <Island padding={2}>\n        <div className=\"close\" onClick={props.onClose}>\n          {close}\n        </div>\n        <h3>{t(\"stats.title\")}</h3>\n        <table>\n          <tbody>\n            <tr>\n              <th colSpan={2}>{t(\"stats.scene\")}</th>\n            </tr>\n            <tr>\n              <td>{t(\"stats.elements\")}</td>\n              <td>{props.elements.length}</td>\n            </tr>\n            <tr>\n              <td>{t(\"stats.width\")}</td>\n              <td>{Math.round(boundingBox[2]) - Math.round(boundingBox[0])}</td>\n            </tr>\n            <tr>\n              <td>{t(\"stats.height\")}</td>\n              <td>{Math.round(boundingBox[3]) - Math.round(boundingBox[1])}</td>\n            </tr>\n\n            {selectedElements.length === 1 && (\n              <tr>\n                <th colSpan={2}>{t(\"stats.element\")}</th>\n              </tr>\n            )}\n\n            {selectedElements.length > 1 && (\n              <>\n                <tr>\n                  <th colSpan={2}>{t(\"stats.selected\")}</th>\n                </tr>\n                <tr>\n                  <td>{t(\"stats.elements\")}</td>\n                  <td>{selectedElements.length}</td>\n                </tr>\n              </>\n            )}\n            {selectedElements.length > 0 && (\n              <>\n                <tr>\n                  <td>{\"x\"}</td>\n                  <td>{Math.round(selectedBoundingBox[0])}</td>\n                </tr>\n                <tr>\n                  <td>{\"y\"}</td>\n                  <td>{Math.round(selectedBoundingBox[1])}</td>\n                </tr>\n                <tr>\n                  <td>{t(\"stats.width\")}</td>\n                  <td>\n                    {Math.round(\n                      selectedBoundingBox[2] - selectedBoundingBox[0],\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>{t(\"stats.height\")}</td>\n                  <td>\n                    {Math.round(\n                      selectedBoundingBox[3] - selectedBoundingBox[1],\n                    )}\n                  </td>\n                </tr>\n              </>\n            )}\n            {selectedElements.length === 1 && (\n              <tr>\n                <td>{t(\"stats.angle\")}</td>\n                <td>\n                  {`${Math.round(\n                    (selectedElements[0].angle * 180) / Math.PI,\n                  )}°`}\n                </td>\n              </tr>\n            )}\n            {props.renderCustomStats?.(props.elements, props.appState)}\n          </tbody>\n        </table>\n      </Island>\n    </div>\n  );\n};\n","import { useCallback, useEffect, useRef } from \"react\";\nimport { TOAST_TIMEOUT } from \"../constants\";\nimport \"./Toast.scss\";\n\nexport const Toast = ({\n  message,\n  clearToast,\n}: {\n  message: string;\n  clearToast: () => void;\n}) => {\n  const timerRef = useRef<number>(0);\n\n  const scheduleTimeout = useCallback(\n    () =>\n      (timerRef.current = window.setTimeout(() => clearToast(), TOAST_TIMEOUT)),\n    [clearToast],\n  );\n\n  useEffect(() => {\n    scheduleTimeout();\n    return () => clearTimeout(timerRef.current);\n  }, [scheduleTimeout, message]);\n\n  return (\n    <div\n      className=\"Toast\"\n      onMouseEnter={() => clearTimeout(timerRef?.current)}\n      onMouseLeave={scheduleTimeout}\n    >\n      <p className=\"Toast__message\">{message}</p>\n    </div>\n  );\n};\n","import { CODES, KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { trackEvent } from \"../analytics\";\n\nexport const actionToggleViewMode = register({\n  name: \"viewMode\",\n  perform(elements, appState) {\n    trackEvent(\"view\", \"mode\", \"view\");\n    return {\n      appState: {\n        ...appState,\n        viewModeEnabled: !this.checked!(appState),\n      },\n      commitToHistory: false,\n    };\n  },\n  checked: (appState) => appState.viewModeEnabled,\n  contextItemLabel: \"labels.viewMode\",\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.R,\n});\n","import React, { useContext } from \"react\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport rough from \"roughjs/bin/rough\";\nimport clsx from \"clsx\";\nimport { nanoid } from \"nanoid\";\n\nimport {\n  actionAddToLibrary,\n  actionBringForward,\n  actionBringToFront,\n  actionCopy,\n  actionCopyAsPng,\n  actionCopyAsSvg,\n  actionCopyStyles,\n  actionCut,\n  actionDeleteSelected,\n  actionDuplicateSelection,\n  actionFinalize,\n  actionFlipHorizontal,\n  actionFlipVertical,\n  actionGroup,\n  actionPasteStyles,\n  actionSelectAll,\n  actionSendBackward,\n  actionSendToBack,\n  actionToggleGridMode,\n  actionToggleStats,\n  actionToggleZenMode,\n  actionUnbindText,\n  actionUngroup,\n  actionLink,\n} from \"../actions\";\nimport { createRedoAction, createUndoAction } from \"../actions/actionHistory\";\nimport { ActionManager } from \"../actions/manager\";\nimport { actions } from \"../actions/register\";\nimport { ActionResult } from \"../actions/types\";\nimport { trackEvent } from \"../analytics\";\nimport { getDefaultAppState, isEraserActive } from \"../appState\";\nimport {\n  copyToClipboard,\n  parseClipboard,\n  probablySupportsClipboardBlob,\n  probablySupportsClipboardWriteText,\n} from \"../clipboard\";\nimport {\n  APP_NAME,\n  CURSOR_TYPE,\n  DEFAULT_MAX_IMAGE_WIDTH_OR_HEIGHT,\n  DEFAULT_UI_OPTIONS,\n  DEFAULT_VERTICAL_ALIGN,\n  DRAGGING_THRESHOLD,\n  ELEMENT_SHIFT_TRANSLATE_AMOUNT,\n  ELEMENT_TRANSLATE_AMOUNT,\n  ENV,\n  EVENT,\n  GRID_SIZE,\n  IMAGE_RENDER_TIMEOUT,\n  LINE_CONFIRM_THRESHOLD,\n  MAX_ALLOWED_FILE_BYTES,\n  MIME_TYPES,\n  MQ_MAX_HEIGHT_LANDSCAPE,\n  MQ_MAX_WIDTH_LANDSCAPE,\n  MQ_MAX_WIDTH_PORTRAIT,\n  POINTER_BUTTON,\n  SCROLL_TIMEOUT,\n  TAP_TWICE_TIMEOUT,\n  TEXT_TO_CENTER_SNAP_THRESHOLD,\n  THEME,\n  TOUCH_CTX_MENU_TIMEOUT,\n  URL_HASH_KEYS,\n  URL_QUERY_KEYS,\n  VERTICAL_ALIGN,\n  ZOOM_STEP,\n} from \"../constants\";\nimport { loadFromBlob } from \"../data\";\nimport { isValidLibrary } from \"../data/json\";\nimport Library from \"../data/library\";\nimport { restore, restoreElements, restoreLibraryItems } from \"../data/restore\";\nimport {\n  dragNewElement,\n  dragSelectedElements,\n  duplicateElement,\n  getCommonBounds,\n  getCursorForResizingElement,\n  getDragOffsetXY,\n  getElementWithTransformHandleType,\n  getNormalizedDimensions,\n  getPerfectElementSize,\n  getResizeArrowDirection,\n  getResizeOffsetXY,\n  getTransformHandleTypeFromCoords,\n  hitTest,\n  isHittingElementBoundingBoxWithoutHittingElement,\n  isInvisiblySmallElement,\n  isNonDeletedElement,\n  isTextElement,\n  newElement,\n  newLinearElement,\n  newTextElement,\n  newImageElement,\n  textWysiwyg,\n  transformElements,\n  updateTextElement,\n} from \"../element\";\nimport {\n  bindOrUnbindSelectedElements,\n  fixBindingsAfterDeletion,\n  fixBindingsAfterDuplication,\n  getEligibleElementsForBinding,\n  getHoveredElementForBinding,\n  isBindingEnabled,\n  isLinearElementSimpleAndAlreadyBound,\n  maybeBindLinearElement,\n  shouldEnableBindingForPointerEvent,\n  unbindLinearElements,\n  updateBoundElements,\n} from \"../element/binding\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport { deepCopyElement, newFreeDrawElement } from \"../element/newElement\";\nimport {\n  hasBoundTextElement,\n  isBindingElement,\n  isBindingElementType,\n  isBoundToContainer,\n  isImageElement,\n  isInitializedImageElement,\n  isLinearElement,\n  isLinearElementType,\n  isTextBindableContainer,\n} from \"../element/typeChecks\";\nimport {\n  ExcalidrawBindableElement,\n  ExcalidrawElement,\n  ExcalidrawFreeDrawElement,\n  ExcalidrawGenericElement,\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  NonDeleted,\n  InitializedExcalidrawImageElement,\n  ExcalidrawImageElement,\n  FileId,\n  NonDeletedExcalidrawElement,\n  ExcalidrawTextContainer,\n} from \"../element/types\";\nimport { getCenter, getDistance } from \"../gesture\";\nimport {\n  editGroupForSelectedElement,\n  getElementsInGroup,\n  getSelectedGroupIdForElement,\n  getSelectedGroupIds,\n  isElementInGroup,\n  isSelectedViaGroup,\n  selectGroupsForSelectedElements,\n} from \"../groups\";\nimport History from \"../history\";\nimport { defaultLang, getLanguage, languages, setLanguage, t } from \"../i18n\";\nimport {\n  CODES,\n  shouldResizeFromCenter,\n  shouldMaintainAspectRatio,\n  shouldRotateWithDiscreteAngle,\n  isArrowKey,\n  KEYS,\n  isAndroid,\n} from \"../keys\";\nimport { distance2d, getGridPoint, isPathALoop } from \"../math\";\nimport { renderScene } from \"../renderer\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport {\n  calculateScrollCenter,\n  getTextBindableContainerAtPosition,\n  getElementsAtPosition,\n  getElementsWithinSelection,\n  getNormalizedZoom,\n  getSelectedElements,\n  hasBackground,\n  isOverScrollBars,\n  isSomeElementSelected,\n} from \"../scene\";\nimport Scene from \"../scene/Scene\";\nimport { RenderConfig, ScrollBars } from \"../scene/types\";\nimport { getStateForZoom } from \"../scene/zoom\";\nimport { findShapeByKey } from \"../shapes\";\nimport {\n  AppClassProperties,\n  AppProps,\n  AppState,\n  BinaryFileData,\n  DataURL,\n  ExcalidrawImperativeAPI,\n  BinaryFiles,\n  Gesture,\n  GestureEvent,\n  LibraryItems,\n  PointerDownState,\n  SceneData,\n} from \"../types\";\nimport {\n  debounce,\n  distance,\n  getFontString,\n  getNearestScrollableContainer,\n  isInputLike,\n  isToolIcon,\n  isWritableElement,\n  resetCursor,\n  resolvablePromise,\n  sceneCoordsToViewportCoords,\n  setCursor,\n  setCursorForShape,\n  tupleToCoors,\n  viewportCoordsToSceneCoords,\n  withBatchedUpdates,\n  wrapEvent,\n  withBatchedUpdatesThrottled,\n} from \"../utils\";\nimport ContextMenu, { ContextMenuOption } from \"./ContextMenu\";\nimport LayerUI from \"./LayerUI\";\nimport { Stats } from \"./Stats\";\nimport { Toast } from \"./Toast\";\nimport { actionToggleViewMode } from \"../actions/actionToggleViewMode\";\nimport {\n  dataURLToFile,\n  generateIdFromFile,\n  getDataURL,\n  isSupportedImageFile,\n  resizeImageFile,\n  SVGStringToFile,\n} from \"../data/blob\";\nimport {\n  getInitializedImageElements,\n  loadHTMLImageElement,\n  normalizeSVG,\n  updateImageCache as _updateImageCache,\n} from \"../element/image\";\nimport throttle from \"lodash.throttle\";\nimport { fileOpen, nativeFileSystemSupported } from \"../data/filesystem\";\nimport {\n  bindTextToShapeAfterDuplication,\n  getApproxMinLineHeight,\n  getApproxMinLineWidth,\n  getBoundTextElement,\n} from \"../element/textElement\";\nimport { isHittingElementNotConsideringBoundingBox } from \"../element/collision\";\nimport {\n  normalizeLink,\n  showHyperlinkTooltip,\n  hideHyperlinkToolip,\n  Hyperlink,\n  isPointHittingLinkIcon,\n  isLocalLink,\n} from \"../element/Hyperlink\";\n\nconst IsMobileContext = React.createContext(false);\nexport const useIsMobile = () => useContext(IsMobileContext);\nconst ExcalidrawContainerContext = React.createContext<{\n  container: HTMLDivElement | null;\n  id: string | null;\n}>({ container: null, id: null });\nexport const useExcalidrawContainer = () =>\n  useContext(ExcalidrawContainerContext);\n\nlet didTapTwice: boolean = false;\nlet tappedTwiceTimer = 0;\nlet cursorX = 0;\nlet cursorY = 0;\nlet isHoldingSpace: boolean = false;\nlet isPanning: boolean = false;\nlet isDraggingScrollBar: boolean = false;\nlet currentScrollBars: ScrollBars = { horizontal: null, vertical: null };\nlet touchTimeout = 0;\nlet invalidateContextMenu = false;\n\nlet lastPointerUp: ((event: any) => void) | null = null;\nconst gesture: Gesture = {\n  pointers: new Map(),\n  lastCenter: null,\n  initialDistance: null,\n  initialScale: null,\n};\n\nclass App extends React.Component<AppProps, AppState> {\n  canvas: AppClassProperties[\"canvas\"] = null;\n  rc: RoughCanvas | null = null;\n  unmounted: boolean = false;\n  actionManager: ActionManager;\n  isMobile = false;\n  detachIsMobileMqHandler?: () => void;\n\n  private excalidrawContainerRef = React.createRef<HTMLDivElement>();\n\n  public static defaultProps: Partial<AppProps> = {\n    // needed for tests to pass since we directly render App in many tests\n    UIOptions: DEFAULT_UI_OPTIONS,\n  };\n\n  private scene: Scene;\n  private resizeObserver: ResizeObserver | undefined;\n  private nearestScrollableContainer: HTMLElement | Document | undefined;\n  public library: AppClassProperties[\"library\"];\n  public libraryItemsFromStorage: LibraryItems | undefined;\n  private id: string;\n  private history: History;\n  private excalidrawContainerValue: {\n    container: HTMLDivElement | null;\n    id: string;\n  };\n\n  public files: BinaryFiles = {};\n  public imageCache: AppClassProperties[\"imageCache\"] = new Map();\n\n  hitLinkElement?: NonDeletedExcalidrawElement;\n  lastPointerDown: React.PointerEvent<HTMLCanvasElement> | null = null;\n  lastPointerUp: React.PointerEvent<HTMLElement> | PointerEvent | null = null;\n  contextMenuOpen: boolean = false;\n  lastScenePointer: { x: number; y: number } | null = null;\n\n  constructor(props: AppProps) {\n    super(props);\n    const defaultAppState = getDefaultAppState();\n    const {\n      excalidrawRef,\n      viewModeEnabled = false,\n      zenModeEnabled = false,\n      gridModeEnabled = false,\n      theme = defaultAppState.theme,\n      name = defaultAppState.name,\n    } = props;\n    this.state = {\n      ...defaultAppState,\n      theme,\n      isLoading: true,\n      ...this.getCanvasOffsets(),\n      viewModeEnabled,\n      zenModeEnabled,\n      gridSize: gridModeEnabled ? GRID_SIZE : null,\n      name,\n      width: window.innerWidth,\n      height: window.innerHeight,\n      showHyperlinkPopup: false,\n    };\n\n    this.id = nanoid();\n\n    if (excalidrawRef) {\n      const readyPromise =\n        (\"current\" in excalidrawRef && excalidrawRef.current?.readyPromise) ||\n        resolvablePromise<ExcalidrawImperativeAPI>();\n\n      const api: ExcalidrawImperativeAPI = {\n        ready: true,\n        readyPromise,\n        updateScene: this.updateScene,\n        addFiles: this.addFiles,\n        resetScene: this.resetScene,\n        getSceneElementsIncludingDeleted: this.getSceneElementsIncludingDeleted,\n        history: {\n          clear: this.resetHistory,\n        },\n        scrollToContent: this.scrollToContent,\n        getSceneElements: this.getSceneElements,\n        getAppState: () => this.state,\n        getFiles: () => this.files,\n        refresh: this.refresh,\n        importLibrary: this.importLibraryFromUrl,\n        setToastMessage: this.setToastMessage,\n        id: this.id,\n      } as const;\n      if (typeof excalidrawRef === \"function\") {\n        excalidrawRef(api);\n      } else {\n        excalidrawRef.current = api;\n      }\n      readyPromise.resolve(api);\n    }\n\n    this.excalidrawContainerValue = {\n      container: this.excalidrawContainerRef.current,\n      id: this.id,\n    };\n\n    this.scene = new Scene();\n    this.library = new Library(this);\n    this.history = new History();\n    this.actionManager = new ActionManager(\n      this.syncActionResult,\n      () => this.state,\n      () => this.scene.getElementsIncludingDeleted(),\n      this,\n    );\n    this.actionManager.registerAll(actions);\n\n    this.actionManager.registerAction(createUndoAction(this.history));\n    this.actionManager.registerAction(createRedoAction(this.history));\n  }\n\n  private renderCanvas() {\n    const canvasScale = window.devicePixelRatio;\n    const {\n      width: canvasDOMWidth,\n      height: canvasDOMHeight,\n      viewModeEnabled,\n    } = this.state;\n    const canvasWidth = canvasDOMWidth * canvasScale;\n    const canvasHeight = canvasDOMHeight * canvasScale;\n    if (viewModeEnabled) {\n      return (\n        <canvas\n          className=\"excalidraw__canvas\"\n          style={{\n            width: canvasDOMWidth,\n            height: canvasDOMHeight,\n            cursor: CURSOR_TYPE.GRAB,\n          }}\n          width={canvasWidth}\n          height={canvasHeight}\n          ref={this.handleCanvasRef}\n          onContextMenu={this.handleCanvasContextMenu}\n          onPointerMove={this.handleCanvasPointerMove}\n          onPointerUp={this.handleCanvasPointerUp}\n          onPointerCancel={this.removePointer}\n          onTouchMove={this.handleTouchMove}\n          onPointerDown={this.handleCanvasPointerDown}\n        >\n          {t(\"labels.drawingCanvas\")}\n        </canvas>\n      );\n    }\n    return (\n      <canvas\n        className=\"excalidraw__canvas\"\n        style={{\n          width: canvasDOMWidth,\n          height: canvasDOMHeight,\n        }}\n        width={canvasWidth}\n        height={canvasHeight}\n        ref={this.handleCanvasRef}\n        onContextMenu={this.handleCanvasContextMenu}\n        onPointerDown={this.handleCanvasPointerDown}\n        onDoubleClick={this.handleCanvasDoubleClick}\n        onPointerMove={this.handleCanvasPointerMove}\n        onPointerUp={this.handleCanvasPointerUp}\n        onPointerCancel={this.removePointer}\n        onTouchMove={this.handleTouchMove}\n      >\n        {t(\"labels.drawingCanvas\")}\n      </canvas>\n    );\n  }\n\n  public render() {\n    const { zenModeEnabled, viewModeEnabled } = this.state;\n    const selectedElement = getSelectedElements(\n      this.scene.getElements(),\n      this.state,\n    );\n    const {\n      onCollabButtonClick,\n      renderTopRightUI,\n      renderFooter,\n      renderCustomStats,\n    } = this.props;\n\n    return (\n      <div\n        className={clsx(\"excalidraw excalidraw-container\", {\n          \"excalidraw--view-mode\": viewModeEnabled,\n          \"excalidraw--mobile\": this.isMobile,\n        })}\n        ref={this.excalidrawContainerRef}\n        onDrop={this.handleAppOnDrop}\n        tabIndex={0}\n        onKeyDown={\n          this.props.handleKeyboardGlobally ? undefined : this.onKeyDown\n        }\n      >\n        <ExcalidrawContainerContext.Provider\n          value={this.excalidrawContainerValue}\n        >\n          <IsMobileContext.Provider value={this.isMobile}>\n            <LayerUI\n              canvas={this.canvas}\n              appState={this.state}\n              files={this.files}\n              setAppState={this.setAppState}\n              actionManager={this.actionManager}\n              elements={this.scene.getElements()}\n              onCollabButtonClick={onCollabButtonClick}\n              onLockToggle={this.toggleLock}\n              onPenModeToggle={this.togglePenMode}\n              onInsertElements={(elements) =>\n                this.addElementsFromPasteOrLibrary({\n                  elements,\n                  position: \"center\",\n                  files: null,\n                })\n              }\n              zenModeEnabled={zenModeEnabled}\n              toggleZenMode={this.toggleZenMode}\n              langCode={getLanguage().code}\n              isCollaborating={this.props.isCollaborating}\n              renderTopRightUI={renderTopRightUI}\n              renderCustomFooter={renderFooter}\n              viewModeEnabled={viewModeEnabled}\n              showExitZenModeBtn={\n                typeof this.props?.zenModeEnabled === \"undefined\" &&\n                zenModeEnabled\n              }\n              showThemeBtn={\n                typeof this.props?.theme === \"undefined\" &&\n                this.props.UIOptions.canvasActions.theme\n              }\n              libraryReturnUrl={this.props.libraryReturnUrl}\n              UIOptions={this.props.UIOptions}\n              focusContainer={this.focusContainer}\n              library={this.library}\n              id={this.id}\n              onImageAction={this.onImageAction}\n            />\n            <div className=\"excalidraw-textEditorContainer\" />\n            <div className=\"excalidraw-contextMenuContainer\" />\n            {selectedElement.length === 1 && this.state.showHyperlinkPopup && (\n              <Hyperlink\n                key={selectedElement[0].id}\n                element={selectedElement[0]}\n                appState={this.state}\n                setAppState={this.setAppState}\n                onLinkOpen={this.props.onLinkOpen}\n              />\n            )}\n            {this.state.showStats && (\n              <Stats\n                appState={this.state}\n                setAppState={this.setAppState}\n                elements={this.scene.getElements()}\n                onClose={this.toggleStats}\n                renderCustomStats={renderCustomStats}\n              />\n            )}\n            {this.state.toastMessage !== null && (\n              <Toast\n                message={this.state.toastMessage}\n                clearToast={this.clearToast}\n              />\n            )}\n            <main>{this.renderCanvas()}</main>\n          </IsMobileContext.Provider>\n        </ExcalidrawContainerContext.Provider>\n      </div>\n    );\n  }\n\n  public focusContainer: AppClassProperties[\"focusContainer\"] = () => {\n    if (this.props.autoFocus) {\n      this.excalidrawContainerRef.current?.focus();\n    }\n  };\n\n  public getSceneElementsIncludingDeleted = () => {\n    return this.scene.getElementsIncludingDeleted();\n  };\n\n  public getSceneElements = () => {\n    return this.scene.getElements();\n  };\n\n  private syncActionResult = withBatchedUpdates(\n    (actionResult: ActionResult) => {\n      // Since context menu closes when action triggered so setting to false\n      this.contextMenuOpen = false;\n      if (this.unmounted || actionResult === false) {\n        return;\n      }\n\n      let editingElement: AppState[\"editingElement\"] | null = null;\n      if (actionResult.elements) {\n        actionResult.elements.forEach((element) => {\n          if (\n            this.state.editingElement?.id === element.id &&\n            this.state.editingElement !== element &&\n            isNonDeletedElement(element)\n          ) {\n            editingElement = element;\n          }\n        });\n        this.scene.replaceAllElements(actionResult.elements);\n        if (actionResult.commitToHistory) {\n          this.history.resumeRecording();\n        }\n      }\n\n      if (actionResult.files) {\n        this.files = actionResult.replaceFiles\n          ? actionResult.files\n          : { ...this.files, ...actionResult.files };\n        this.addNewImagesToImageCache();\n      }\n\n      if (actionResult.appState || editingElement) {\n        if (actionResult.commitToHistory) {\n          this.history.resumeRecording();\n        }\n\n        let viewModeEnabled = actionResult?.appState?.viewModeEnabled || false;\n        let zenModeEnabled = actionResult?.appState?.zenModeEnabled || false;\n        let gridSize = actionResult?.appState?.gridSize || null;\n        let theme = actionResult?.appState?.theme || THEME.LIGHT;\n        let name = actionResult?.appState?.name ?? this.state.name;\n        if (typeof this.props.viewModeEnabled !== \"undefined\") {\n          viewModeEnabled = this.props.viewModeEnabled;\n        }\n\n        if (typeof this.props.zenModeEnabled !== \"undefined\") {\n          zenModeEnabled = this.props.zenModeEnabled;\n        }\n\n        if (typeof this.props.gridModeEnabled !== \"undefined\") {\n          gridSize = this.props.gridModeEnabled ? GRID_SIZE : null;\n        }\n\n        if (typeof this.props.theme !== \"undefined\") {\n          theme = this.props.theme;\n        }\n\n        if (typeof this.props.name !== \"undefined\") {\n          name = this.props.name;\n        }\n        this.setState(\n          (state) => {\n            // using Object.assign instead of spread to fool TS 4.2.2+ into\n            // regarding the resulting type as not containing undefined\n            // (which the following expression will never contain)\n            return Object.assign(actionResult.appState || {}, {\n              editingElement:\n                editingElement || actionResult.appState?.editingElement || null,\n              viewModeEnabled,\n              zenModeEnabled,\n              gridSize,\n              theme,\n              name,\n            });\n          },\n          () => {\n            if (actionResult.syncHistory) {\n              this.history.setCurrentState(\n                this.state,\n                this.scene.getElementsIncludingDeleted(),\n              );\n            }\n          },\n        );\n      }\n    },\n  );\n\n  // Lifecycle\n\n  private onBlur = withBatchedUpdates(() => {\n    isHoldingSpace = false;\n    this.setState({ isBindingEnabled: true });\n  });\n\n  private onUnload = () => {\n    this.onBlur();\n  };\n\n  private disableEvent: EventListener = (event) => {\n    event.preventDefault();\n  };\n\n  private onFontLoaded = () => {\n    this.scene.getElementsIncludingDeleted().forEach((element) => {\n      if (isTextElement(element)) {\n        invalidateShapeForElement(element);\n      }\n    });\n    this.onSceneUpdated();\n  };\n\n  private importLibraryFromUrl = async (url: string, token?: string | null) => {\n    if (window.location.hash.includes(URL_HASH_KEYS.addLibrary)) {\n      const hash = new URLSearchParams(window.location.hash.slice(1));\n      hash.delete(URL_HASH_KEYS.addLibrary);\n      window.history.replaceState({}, APP_NAME, `#${hash.toString()}`);\n    } else if (window.location.search.includes(URL_QUERY_KEYS.addLibrary)) {\n      const query = new URLSearchParams(window.location.search);\n      query.delete(URL_QUERY_KEYS.addLibrary);\n      window.history.replaceState({}, APP_NAME, `?${query.toString()}`);\n    }\n\n    try {\n      const request = await fetch(decodeURIComponent(url));\n      const blob = await request.blob();\n      const json = JSON.parse(await blob.text());\n      if (!isValidLibrary(json)) {\n        throw new Error();\n      }\n      if (\n        token === this.id ||\n        window.confirm(\n          t(\"alerts.confirmAddLibrary\", {\n            numShapes: (json.libraryItems || json.library || []).length,\n          }),\n        )\n      ) {\n        await this.library.importLibrary(blob, \"published\");\n        // hack to rerender the library items after import\n        if (this.state.isLibraryOpen) {\n          this.setState({ isLibraryOpen: false });\n        }\n        this.setState({ isLibraryOpen: true });\n      }\n    } catch (error: any) {\n      window.alert(t(\"alerts.errorLoadingLibrary\"));\n      console.error(error);\n    } finally {\n      this.focusContainer();\n    }\n  };\n\n  private resetHistory = () => {\n    this.history.clear();\n  };\n\n  /**\n   * Resets scene & history.\n   * ! Do not use to clear scene user action !\n   */\n  private resetScene = withBatchedUpdates(\n    (opts?: { resetLoadingState: boolean }) => {\n      this.scene.replaceAllElements([]);\n      this.setState((state) => ({\n        ...getDefaultAppState(),\n        isLoading: opts?.resetLoadingState ? false : state.isLoading,\n        theme: this.state.theme,\n      }));\n      this.resetHistory();\n    },\n  );\n\n  private initializeScene = async () => {\n    if (\"launchQueue\" in window && \"LaunchParams\" in window) {\n      (window as any).launchQueue.setConsumer(\n        async (launchParams: { files: any[] }) => {\n          if (!launchParams.files.length) {\n            return;\n          }\n          const fileHandle = launchParams.files[0];\n          const blob: Blob = await fileHandle.getFile();\n          blob.handle = fileHandle;\n          loadFromBlob(\n            blob,\n            this.state,\n            this.scene.getElementsIncludingDeleted(),\n          )\n            .then((scene) => {\n              this.syncActionResult({\n                ...scene,\n                appState: {\n                  ...(scene.appState || this.state),\n                  isLoading: false,\n                },\n                commitToHistory: true,\n              });\n            })\n            .catch((error) => {\n              this.setState({ isLoading: false, errorMessage: error.message });\n            });\n        },\n      );\n    }\n\n    if (!this.state.isLoading) {\n      this.setState({ isLoading: true });\n    }\n    let initialData = null;\n    try {\n      initialData = (await this.props.initialData) || null;\n      if (initialData?.libraryItems) {\n        this.libraryItemsFromStorage = restoreLibraryItems(\n          initialData.libraryItems,\n          \"unpublished\",\n        ) as LibraryItems;\n      }\n    } catch (error: any) {\n      console.error(error);\n      initialData = {\n        appState: {\n          errorMessage:\n            error.message ||\n            \"Encountered an error during importing or restoring scene data\",\n        },\n      };\n    }\n\n    const scene = restore(initialData, null, null);\n\n    scene.appState = {\n      ...scene.appState,\n      elementType:\n        scene.appState.elementType === \"image\"\n          ? \"selection\"\n          : scene.appState.elementType,\n      isLoading: false,\n    };\n    if (initialData?.scrollToContent) {\n      scene.appState = {\n        ...scene.appState,\n        ...calculateScrollCenter(\n          scene.elements,\n          {\n            ...scene.appState,\n            width: this.state.width,\n            height: this.state.height,\n            offsetTop: this.state.offsetTop,\n            offsetLeft: this.state.offsetLeft,\n          },\n          null,\n        ),\n      };\n    }\n\n    this.resetHistory();\n    this.syncActionResult({\n      ...scene,\n      commitToHistory: true,\n    });\n\n    const libraryUrl =\n      // current\n      new URLSearchParams(window.location.hash.slice(1)).get(\n        URL_HASH_KEYS.addLibrary,\n      ) ||\n      // legacy, kept for compat reasons\n      new URLSearchParams(window.location.search).get(\n        URL_QUERY_KEYS.addLibrary,\n      );\n\n    if (libraryUrl) {\n      await this.importLibraryFromUrl(libraryUrl);\n    }\n  };\n\n  public async componentDidMount() {\n    this.unmounted = false;\n    this.excalidrawContainerValue.container =\n      this.excalidrawContainerRef.current;\n\n    if (\n      process.env.NODE_ENV === ENV.TEST ||\n      process.env.NODE_ENV === ENV.DEVELOPMENT\n    ) {\n      const setState = this.setState.bind(this);\n      Object.defineProperties(window.h, {\n        state: {\n          configurable: true,\n          get: () => {\n            return this.state;\n          },\n        },\n        setState: {\n          configurable: true,\n          value: (...args: Parameters<typeof setState>) => {\n            return this.setState(...args);\n          },\n        },\n        app: {\n          configurable: true,\n          value: this,\n        },\n        history: {\n          configurable: true,\n          value: this.history,\n        },\n      });\n    }\n\n    this.scene.addCallback(this.onSceneUpdated);\n    this.addEventListeners();\n\n    if (this.excalidrawContainerRef.current) {\n      this.focusContainer();\n    }\n\n    if (\"ResizeObserver\" in window && this.excalidrawContainerRef?.current) {\n      this.resizeObserver = new ResizeObserver(() => {\n        // compute isMobile state\n        // ---------------------------------------------------------------------\n        const { width, height } =\n          this.excalidrawContainerRef.current!.getBoundingClientRect();\n        this.isMobile =\n          width < MQ_MAX_WIDTH_PORTRAIT ||\n          (height < MQ_MAX_HEIGHT_LANDSCAPE && width < MQ_MAX_WIDTH_LANDSCAPE);\n        // refresh offsets\n        // ---------------------------------------------------------------------\n        this.updateDOMRect();\n      });\n      this.resizeObserver?.observe(this.excalidrawContainerRef.current);\n    } else if (window.matchMedia) {\n      const mediaQuery = window.matchMedia(\n        `(max-width: ${MQ_MAX_WIDTH_PORTRAIT}px), (max-height: ${MQ_MAX_HEIGHT_LANDSCAPE}px) and (max-width: ${MQ_MAX_WIDTH_LANDSCAPE}px)`,\n      );\n      const handler = () => (this.isMobile = mediaQuery.matches);\n      mediaQuery.addListener(handler);\n      this.detachIsMobileMqHandler = () => mediaQuery.removeListener(handler);\n    }\n\n    const searchParams = new URLSearchParams(window.location.search.slice(1));\n\n    if (searchParams.has(\"web-share-target\")) {\n      // Obtain a file that was shared via the Web Share Target API.\n      this.restoreFileFromShare();\n    } else {\n      this.updateDOMRect(this.initializeScene);\n    }\n  }\n\n  public componentWillUnmount() {\n    this.files = {};\n    this.imageCache.clear();\n    this.resizeObserver?.disconnect();\n    this.unmounted = true;\n    this.removeEventListeners();\n    this.scene.destroy();\n    clearTimeout(touchTimeout);\n    touchTimeout = 0;\n  }\n\n  private onResize = withBatchedUpdates(() => {\n    this.scene\n      .getElementsIncludingDeleted()\n      .forEach((element) => invalidateShapeForElement(element));\n    this.setState({});\n  });\n\n  private removeEventListeners() {\n    document.removeEventListener(EVENT.POINTER_UP, this.removePointer);\n    document.removeEventListener(EVENT.COPY, this.onCopy);\n    document.removeEventListener(EVENT.PASTE, this.pasteFromClipboard);\n    document.removeEventListener(EVENT.CUT, this.onCut);\n    this.nearestScrollableContainer?.removeEventListener(\n      EVENT.SCROLL,\n      this.onScroll,\n    );\n    document.removeEventListener(EVENT.KEYDOWN, this.onKeyDown, false);\n    document.removeEventListener(\n      EVENT.MOUSE_MOVE,\n      this.updateCurrentCursorPosition,\n      false,\n    );\n    document.removeEventListener(EVENT.KEYUP, this.onKeyUp);\n    window.removeEventListener(EVENT.RESIZE, this.onResize, false);\n    window.removeEventListener(EVENT.UNLOAD, this.onUnload, false);\n    window.removeEventListener(EVENT.BLUR, this.onBlur, false);\n    this.excalidrawContainerRef.current?.removeEventListener(\n      EVENT.DRAG_OVER,\n      this.disableEvent,\n      false,\n    );\n    this.excalidrawContainerRef.current?.removeEventListener(\n      EVENT.DROP,\n      this.disableEvent,\n      false,\n    );\n\n    document.removeEventListener(\n      EVENT.GESTURE_START,\n      this.onGestureStart as any,\n      false,\n    );\n    document.removeEventListener(\n      EVENT.GESTURE_CHANGE,\n      this.onGestureChange as any,\n      false,\n    );\n    document.removeEventListener(\n      EVENT.GESTURE_END,\n      this.onGestureEnd as any,\n      false,\n    );\n\n    this.detachIsMobileMqHandler?.();\n  }\n\n  private addEventListeners() {\n    this.removeEventListeners();\n    document.addEventListener(EVENT.POINTER_UP, this.removePointer); // #3553\n    document.addEventListener(EVENT.COPY, this.onCopy);\n    if (this.props.handleKeyboardGlobally) {\n      document.addEventListener(EVENT.KEYDOWN, this.onKeyDown, false);\n    }\n    document.addEventListener(EVENT.KEYUP, this.onKeyUp, { passive: true });\n    document.addEventListener(\n      EVENT.MOUSE_MOVE,\n      this.updateCurrentCursorPosition,\n    );\n    // rerender text elements on font load to fix #637 && #1553\n    document.fonts?.addEventListener?.(\"loadingdone\", this.onFontLoaded);\n    // Safari-only desktop pinch zoom\n    document.addEventListener(\n      EVENT.GESTURE_START,\n      this.onGestureStart as any,\n      false,\n    );\n    document.addEventListener(\n      EVENT.GESTURE_CHANGE,\n      this.onGestureChange as any,\n      false,\n    );\n    document.addEventListener(\n      EVENT.GESTURE_END,\n      this.onGestureEnd as any,\n      false,\n    );\n    if (this.state.viewModeEnabled) {\n      return;\n    }\n\n    document.addEventListener(EVENT.PASTE, this.pasteFromClipboard);\n    document.addEventListener(EVENT.CUT, this.onCut);\n    if (this.props.detectScroll) {\n      this.nearestScrollableContainer = getNearestScrollableContainer(\n        this.excalidrawContainerRef.current!,\n      );\n      this.nearestScrollableContainer.addEventListener(\n        EVENT.SCROLL,\n        this.onScroll,\n      );\n    }\n    window.addEventListener(EVENT.RESIZE, this.onResize, false);\n    window.addEventListener(EVENT.UNLOAD, this.onUnload, false);\n    window.addEventListener(EVENT.BLUR, this.onBlur, false);\n    this.excalidrawContainerRef.current?.addEventListener(\n      EVENT.DRAG_OVER,\n      this.disableEvent,\n      false,\n    );\n    this.excalidrawContainerRef.current?.addEventListener(\n      EVENT.DROP,\n      this.disableEvent,\n      false,\n    );\n  }\n\n  componentDidUpdate(prevProps: AppProps, prevState: AppState) {\n    if (\n      Object.keys(this.state.selectedElementIds).length &&\n      isEraserActive(this.state)\n    ) {\n      this.setState({ elementType: \"selection\" });\n    }\n    // Hide hyperlink popup if shown when element type is not selection\n    if (\n      prevState.elementType === \"selection\" &&\n      this.state.elementType !== \"selection\" &&\n      this.state.showHyperlinkPopup\n    ) {\n      this.setState({ showHyperlinkPopup: false });\n    }\n    if (prevProps.langCode !== this.props.langCode) {\n      this.updateLanguage();\n    }\n\n    if (prevProps.viewModeEnabled !== this.props.viewModeEnabled) {\n      this.setState({ viewModeEnabled: !!this.props.viewModeEnabled });\n    }\n\n    if (prevState.viewModeEnabled !== this.state.viewModeEnabled) {\n      this.addEventListeners();\n      this.deselectElements();\n    }\n\n    if (prevProps.zenModeEnabled !== this.props.zenModeEnabled) {\n      this.setState({ zenModeEnabled: !!this.props.zenModeEnabled });\n    }\n\n    if (prevProps.theme !== this.props.theme && this.props.theme) {\n      this.setState({ theme: this.props.theme });\n    }\n\n    if (prevProps.gridModeEnabled !== this.props.gridModeEnabled) {\n      this.setState({\n        gridSize: this.props.gridModeEnabled ? GRID_SIZE : null,\n      });\n    }\n\n    if (this.props.name && prevProps.name !== this.props.name) {\n      this.setState({\n        name: this.props.name,\n      });\n    }\n\n    this.excalidrawContainerRef.current?.classList.toggle(\n      \"theme--dark\",\n      this.state.theme === \"dark\",\n    );\n\n    if (\n      this.state.editingLinearElement &&\n      !this.state.selectedElementIds[this.state.editingLinearElement.elementId]\n    ) {\n      // defer so that the commitToHistory flag isn't reset via current update\n      setTimeout(() => {\n        this.actionManager.executeAction(actionFinalize);\n      });\n    }\n    const { multiElement } = prevState;\n    if (\n      prevState.elementType !== this.state.elementType &&\n      multiElement != null &&\n      isBindingEnabled(this.state) &&\n      isBindingElement(multiElement)\n    ) {\n      maybeBindLinearElement(\n        multiElement,\n        this.state,\n        this.scene,\n        tupleToCoors(\n          LinearElementEditor.getPointAtIndexGlobalCoordinates(\n            multiElement,\n            -1,\n          ),\n        ),\n      );\n    }\n\n    const cursorButton: {\n      [id: string]: string | undefined;\n    } = {};\n    const pointerViewportCoords: RenderConfig[\"remotePointerViewportCoords\"] =\n      {};\n    const remoteSelectedElementIds: RenderConfig[\"remoteSelectedElementIds\"] =\n      {};\n    const pointerUsernames: { [id: string]: string } = {};\n    const pointerUserStates: { [id: string]: string } = {};\n    this.state.collaborators.forEach((user, socketId) => {\n      if (user.selectedElementIds) {\n        for (const id of Object.keys(user.selectedElementIds)) {\n          if (!(id in remoteSelectedElementIds)) {\n            remoteSelectedElementIds[id] = [];\n          }\n          remoteSelectedElementIds[id].push(socketId);\n        }\n      }\n      if (!user.pointer) {\n        return;\n      }\n      if (user.username) {\n        pointerUsernames[socketId] = user.username;\n      }\n      if (user.userState) {\n        pointerUserStates[socketId] = user.userState;\n      }\n      pointerViewportCoords[socketId] = sceneCoordsToViewportCoords(\n        {\n          sceneX: user.pointer.x,\n          sceneY: user.pointer.y,\n        },\n        this.state,\n      );\n      cursorButton[socketId] = user.button;\n    });\n    const renderingElements = this.scene.getElements().filter((element) => {\n      if (isImageElement(element)) {\n        if (\n          // not placed on canvas yet (but in elements array)\n          this.state.pendingImageElement &&\n          element.id === this.state.pendingImageElement.id\n        ) {\n          return false;\n        }\n      }\n      // don't render text element that's being currently edited (it's\n      // rendered on remote only)\n      return (\n        !this.state.editingElement ||\n        this.state.editingElement.type !== \"text\" ||\n        element.id !== this.state.editingElement.id\n      );\n    });\n    const { atLeastOneVisibleElement, scrollBars } = renderScene(\n      renderingElements,\n      this.state,\n      this.state.selectionElement,\n      window.devicePixelRatio,\n      this.rc!,\n      this.canvas!,\n      {\n        scrollX: this.state.scrollX,\n        scrollY: this.state.scrollY,\n        viewBackgroundColor: this.state.viewBackgroundColor,\n        zoom: this.state.zoom,\n        remotePointerViewportCoords: pointerViewportCoords,\n        remotePointerButton: cursorButton,\n        remoteSelectedElementIds,\n        remotePointerUsernames: pointerUsernames,\n        remotePointerUserStates: pointerUserStates,\n        shouldCacheIgnoreZoom: this.state.shouldCacheIgnoreZoom,\n        theme: this.state.theme,\n        imageCache: this.imageCache,\n        isExporting: false,\n        renderScrollbars: !this.isMobile,\n      },\n    );\n\n    if (scrollBars) {\n      currentScrollBars = scrollBars;\n    }\n    const scrolledOutside =\n      // hide when editing text\n      isTextElement(this.state.editingElement)\n        ? false\n        : !atLeastOneVisibleElement && renderingElements.length > 0;\n    if (this.state.scrolledOutside !== scrolledOutside) {\n      this.setState({ scrolledOutside });\n    }\n\n    this.history.record(this.state, this.scene.getElementsIncludingDeleted());\n\n    this.scheduleImageRefresh();\n\n    // Do not notify consumers if we're still loading the scene. Among other\n    // potential issues, this fixes a case where the tab isn't focused during\n    // init, which would trigger onChange with empty elements, which would then\n    // override whatever is in localStorage currently.\n    if (!this.state.isLoading) {\n      this.props.onChange?.(\n        this.scene.getElementsIncludingDeleted(),\n        this.state,\n        this.files,\n      );\n    }\n  }\n\n  private onScroll = debounce(() => {\n    const { offsetTop, offsetLeft } = this.getCanvasOffsets();\n    this.setState((state) => {\n      if (state.offsetLeft === offsetLeft && state.offsetTop === offsetTop) {\n        return null;\n      }\n      return { offsetTop, offsetLeft };\n    });\n  }, SCROLL_TIMEOUT);\n\n  // Copy/paste\n\n  private onCut = withBatchedUpdates((event: ClipboardEvent) => {\n    const isExcalidrawActive = this.excalidrawContainerRef.current?.contains(\n      document.activeElement,\n    );\n    if (!isExcalidrawActive || isWritableElement(event.target)) {\n      return;\n    }\n    this.cutAll();\n    event.preventDefault();\n  });\n\n  private onCopy = withBatchedUpdates((event: ClipboardEvent) => {\n    const isExcalidrawActive = this.excalidrawContainerRef.current?.contains(\n      document.activeElement,\n    );\n    if (!isExcalidrawActive || isWritableElement(event.target)) {\n      return;\n    }\n    this.copyAll();\n    event.preventDefault();\n  });\n\n  private cutAll = () => {\n    this.copyAll();\n    this.actionManager.executeAction(actionDeleteSelected);\n  };\n\n  private copyAll = () => {\n    copyToClipboard(this.scene.getElements(), this.state, this.files);\n  };\n\n  private static resetTapTwice() {\n    didTapTwice = false;\n  }\n\n  private onTapStart = (event: TouchEvent) => {\n    // fix for Apple Pencil Scribble\n    // On Android, preventing the event would disable contextMenu on tap-hold\n    if (!isAndroid) {\n      event.preventDefault();\n    }\n\n    if (!didTapTwice) {\n      didTapTwice = true;\n      clearTimeout(tappedTwiceTimer);\n      tappedTwiceTimer = window.setTimeout(\n        App.resetTapTwice,\n        TAP_TWICE_TIMEOUT,\n      );\n      return;\n    }\n    // insert text only if we tapped twice with a single finger\n    // event.touches.length === 1 will also prevent inserting text when user's zooming\n    if (didTapTwice && event.touches.length === 1) {\n      const [touch] = event.touches;\n      // @ts-ignore\n      this.handleCanvasDoubleClick({\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n      });\n      didTapTwice = false;\n      clearTimeout(tappedTwiceTimer);\n    }\n    if (isAndroid) {\n      event.preventDefault();\n    }\n\n    if (event.touches.length === 2) {\n      this.setState({\n        selectedElementIds: {},\n      });\n    }\n  };\n\n  private onTapEnd = (event: TouchEvent) => {\n    this.resetContextMenuTimer();\n    if (event.touches.length > 0) {\n      this.setState({\n        previousSelectedElementIds: {},\n        selectedElementIds: this.state.previousSelectedElementIds,\n      });\n    } else {\n      gesture.pointers.clear();\n    }\n  };\n\n  private pasteFromClipboard = withBatchedUpdates(\n    async (event: ClipboardEvent | null) => {\n      // #686\n      const target = document.activeElement;\n      const isExcalidrawActive =\n        this.excalidrawContainerRef.current?.contains(target);\n      if (!isExcalidrawActive) {\n        return;\n      }\n\n      const elementUnderCursor = document.elementFromPoint(cursorX, cursorY);\n      if (\n        // if no ClipboardEvent supplied, assume we're pasting via contextMenu\n        // thus these checks don't make sense\n        event &&\n        (!(elementUnderCursor instanceof HTMLCanvasElement) ||\n          isWritableElement(target))\n      ) {\n        return;\n      }\n\n      // must be called in the same frame (thus before any awaits) as the paste\n      // event else some browsers (FF...) will clear the clipboardData\n      // (something something security)\n      let file = event?.clipboardData?.files[0];\n\n      const data = await parseClipboard(event);\n\n      if (!file && data.text) {\n        const string = data.text.trim();\n        if (string.startsWith(\"<svg\") && string.endsWith(\"</svg>\")) {\n          // ignore SVG validation/normalization which will be done during image\n          // initialization\n          file = SVGStringToFile(string);\n        }\n      }\n\n      // prefer spreadsheet data over image file (MS Office/Libre Office)\n      if (isSupportedImageFile(file) && !data.spreadsheet) {\n        const { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n          { clientX: cursorX, clientY: cursorY },\n          this.state,\n        );\n\n        const imageElement = this.createImageElement({ sceneX, sceneY });\n        this.insertImageElement(imageElement, file);\n        this.initializeImageDimensions(imageElement);\n        this.setState({ selectedElementIds: { [imageElement.id]: true } });\n\n        return;\n      }\n\n      if (this.props.onPaste) {\n        try {\n          if ((await this.props.onPaste(data, event)) === false) {\n            return;\n          }\n        } catch (error: any) {\n          console.error(error);\n        }\n      }\n      if (data.errorMessage) {\n        this.setState({ errorMessage: data.errorMessage });\n      } else if (data.spreadsheet) {\n        this.setState({\n          pasteDialog: {\n            data: data.spreadsheet,\n            shown: true,\n          },\n        });\n      } else if (data.elements) {\n        this.addElementsFromPasteOrLibrary({\n          elements: data.elements,\n          files: data.files || null,\n          position: \"cursor\",\n        });\n      } else if (data.text) {\n        this.addTextFromPaste(data.text);\n      }\n      this.selectShapeTool(\"selection\");\n      event?.preventDefault();\n    },\n  );\n\n  private addElementsFromPasteOrLibrary = (opts: {\n    elements: readonly ExcalidrawElement[];\n    files: BinaryFiles | null;\n    position: { clientX: number; clientY: number } | \"cursor\" | \"center\";\n  }) => {\n    const elements = restoreElements(opts.elements, null);\n    const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n\n    const elementsCenterX = distance(minX, maxX) / 2;\n    const elementsCenterY = distance(minY, maxY) / 2;\n\n    const clientX =\n      typeof opts.position === \"object\"\n        ? opts.position.clientX\n        : opts.position === \"cursor\"\n        ? cursorX\n        : this.state.width / 2 + this.state.offsetLeft;\n    const clientY =\n      typeof opts.position === \"object\"\n        ? opts.position.clientY\n        : opts.position === \"cursor\"\n        ? cursorY\n        : this.state.height / 2 + this.state.offsetTop;\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX, clientY },\n      this.state,\n    );\n\n    const dx = x - elementsCenterX;\n    const dy = y - elementsCenterY;\n    const groupIdMap = new Map();\n\n    const [gridX, gridY] = getGridPoint(dx, dy, this.state.gridSize);\n\n    const oldIdToDuplicatedId = new Map();\n    const newElements = elements.map((element) => {\n      const newElement = duplicateElement(\n        this.state.editingGroupId,\n        groupIdMap,\n        element,\n        {\n          x: element.x + gridX - minX,\n          y: element.y + gridY - minY,\n        },\n      );\n      oldIdToDuplicatedId.set(element.id, newElement.id);\n      return newElement;\n    });\n    bindTextToShapeAfterDuplication(newElements, elements, oldIdToDuplicatedId);\n    const nextElements = [\n      ...this.scene.getElementsIncludingDeleted(),\n      ...newElements,\n    ];\n    fixBindingsAfterDuplication(nextElements, elements, oldIdToDuplicatedId);\n\n    if (opts.files) {\n      this.files = { ...this.files, ...opts.files };\n    }\n\n    this.scene.replaceAllElements(nextElements);\n    this.history.resumeRecording();\n    this.setState(\n      selectGroupsForSelectedElements(\n        {\n          ...this.state,\n          isLibraryOpen: false,\n          selectedElementIds: newElements.reduce((map, element) => {\n            if (!isBoundToContainer(element)) {\n              map[element.id] = true;\n            }\n            return map;\n          }, {} as any),\n          selectedGroupIds: {},\n        },\n        this.scene.getElements(),\n      ),\n      () => {\n        if (opts.files) {\n          this.addNewImagesToImageCache();\n        }\n      },\n    );\n    this.selectShapeTool(\"selection\");\n  };\n\n  private addTextFromPaste(text: any) {\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX: cursorX, clientY: cursorY },\n      this.state,\n    );\n\n    const element = newTextElement({\n      x,\n      y,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n      strokeSharpness: this.state.currentItemStrokeSharpness,\n      text,\n      fontSize: this.state.currentItemFontSize,\n      fontFamily: this.state.currentItemFontFamily,\n      textAlign: this.state.currentItemTextAlign,\n      verticalAlign: DEFAULT_VERTICAL_ALIGN,\n    });\n\n    this.scene.replaceAllElements([\n      ...this.scene.getElementsIncludingDeleted(),\n      element,\n    ]);\n    this.setState({ selectedElementIds: { [element.id]: true } });\n    this.history.resumeRecording();\n  }\n\n  // Collaboration\n\n  setAppState = (obj: any) => {\n    this.setState(obj);\n  };\n\n  removePointer = (event: React.PointerEvent<HTMLElement> | PointerEvent) => {\n    if (touchTimeout) {\n      this.resetContextMenuTimer();\n    }\n\n    gesture.pointers.delete(event.pointerId);\n  };\n\n  toggleLock = () => {\n    this.setState((prevState) => {\n      return {\n        elementLocked: !prevState.elementLocked,\n        elementType: prevState.elementLocked\n          ? \"selection\"\n          : prevState.elementType,\n      };\n    });\n  };\n\n  togglePenMode = () => {\n    this.setState((prevState) => {\n      return {\n        penMode: !prevState.penMode,\n      };\n    });\n  };\n\n  toggleZenMode = () => {\n    this.actionManager.executeAction(actionToggleZenMode);\n  };\n\n  toggleStats = () => {\n    if (!this.state.showStats) {\n      trackEvent(\"dialog\", \"stats\");\n    }\n    this.actionManager.executeAction(actionToggleStats);\n  };\n\n  scrollToContent = (\n    target:\n      | ExcalidrawElement\n      | readonly ExcalidrawElement[] = this.scene.getElements(),\n  ) => {\n    this.setState({\n      ...calculateScrollCenter(\n        Array.isArray(target) ? target : [target],\n        this.state,\n        this.canvas,\n      ),\n    });\n  };\n\n  clearToast = () => {\n    this.setState({ toastMessage: null });\n  };\n\n  setToastMessage = (toastMessage: string) => {\n    this.setState({ toastMessage });\n  };\n\n  restoreFileFromShare = async () => {\n    try {\n      const webShareTargetCache = await caches.open(\"web-share-target\");\n\n      const file = await webShareTargetCache.match(\"shared-file\");\n      if (file) {\n        const blob = await file.blob();\n        this.loadFileToCanvas(blob);\n        await webShareTargetCache.delete(\"shared-file\");\n        window.history.replaceState(null, APP_NAME, window.location.pathname);\n      }\n    } catch (error: any) {\n      this.setState({ errorMessage: error.message });\n    }\n  };\n\n  /** adds supplied files to existing files in the appState */\n  public addFiles: ExcalidrawImperativeAPI[\"addFiles\"] = withBatchedUpdates(\n    (files) => {\n      const filesMap = files.reduce((acc, fileData) => {\n        acc.set(fileData.id, fileData);\n        return acc;\n      }, new Map<FileId, BinaryFileData>());\n\n      this.files = { ...this.files, ...Object.fromEntries(filesMap) };\n\n      this.scene.getElements().forEach((element) => {\n        if (\n          isInitializedImageElement(element) &&\n          filesMap.has(element.fileId)\n        ) {\n          this.imageCache.delete(element.fileId);\n          invalidateShapeForElement(element);\n        }\n      });\n      this.scene.informMutation();\n\n      this.addNewImagesToImageCache();\n    },\n  );\n\n  public updateScene = withBatchedUpdates(\n    <K extends keyof AppState>(sceneData: {\n      elements?: SceneData[\"elements\"];\n      appState?: Pick<AppState, K> | null;\n      collaborators?: SceneData[\"collaborators\"];\n      commitToHistory?: SceneData[\"commitToHistory\"];\n      libraryItems?: SceneData[\"libraryItems\"];\n    }) => {\n      if (sceneData.commitToHistory) {\n        this.history.resumeRecording();\n      }\n\n      if (sceneData.appState) {\n        this.setState(sceneData.appState);\n      }\n\n      if (sceneData.elements) {\n        this.scene.replaceAllElements(sceneData.elements);\n      }\n\n      if (sceneData.collaborators) {\n        this.setState({ collaborators: sceneData.collaborators });\n      }\n\n      if (sceneData.libraryItems) {\n        this.library.saveLibrary(\n          restoreLibraryItems(sceneData.libraryItems, \"unpublished\"),\n        );\n      }\n    },\n  );\n\n  private onSceneUpdated = () => {\n    this.setState({});\n  };\n\n  private updateCurrentCursorPosition = withBatchedUpdates(\n    (event: MouseEvent) => {\n      cursorX = event.clientX;\n      cursorY = event.clientY;\n    },\n  );\n\n  // Input handling\n\n  private onKeyDown = withBatchedUpdates(\n    (event: React.KeyboardEvent | KeyboardEvent) => {\n      // normalize `event.key` when CapsLock is pressed #2372\n      if (\n        \"Proxy\" in window &&\n        ((!event.shiftKey && /^[A-Z]$/.test(event.key)) ||\n          (event.shiftKey && /^[a-z]$/.test(event.key)))\n      ) {\n        event = new Proxy(event, {\n          get(ev: any, prop) {\n            const value = ev[prop];\n            if (typeof value === \"function\") {\n              // fix for Proxies hijacking `this`\n              return value.bind(ev);\n            }\n            return prop === \"key\"\n              ? // CapsLock inverts capitalization based on ShiftKey, so invert\n                // it back\n                event.shiftKey\n                ? ev.key.toUpperCase()\n                : ev.key.toLowerCase()\n              : value;\n          },\n        });\n      }\n\n      if (\n        (isWritableElement(event.target) && event.key !== KEYS.ESCAPE) ||\n        // case: using arrows to move between buttons\n        (isArrowKey(event.key) && isInputLike(event.target))\n      ) {\n        return;\n      }\n\n      if (event.key === KEYS.QUESTION_MARK) {\n        this.setState({\n          showHelpDialog: true,\n        });\n      }\n\n      if (this.actionManager.handleKeyDown(event)) {\n        return;\n      }\n\n      if (this.state.viewModeEnabled) {\n        return;\n      }\n\n      if (event[KEYS.CTRL_OR_CMD] && this.state.isBindingEnabled) {\n        this.setState({ isBindingEnabled: false });\n      }\n\n      if (event.code === CODES.ZERO) {\n        this.setState({ isLibraryOpen: !this.state.isLibraryOpen });\n      }\n\n      if (isArrowKey(event.key)) {\n        const step =\n          (this.state.gridSize &&\n            (event.shiftKey\n              ? ELEMENT_TRANSLATE_AMOUNT\n              : this.state.gridSize)) ||\n          (event.shiftKey\n            ? ELEMENT_SHIFT_TRANSLATE_AMOUNT\n            : ELEMENT_TRANSLATE_AMOUNT);\n\n        const selectedElements = getSelectedElements(\n          this.scene.getElements(),\n          this.state,\n          true,\n        );\n\n        let offsetX = 0;\n        let offsetY = 0;\n\n        if (event.key === KEYS.ARROW_LEFT) {\n          offsetX = -step;\n        } else if (event.key === KEYS.ARROW_RIGHT) {\n          offsetX = step;\n        } else if (event.key === KEYS.ARROW_UP) {\n          offsetY = -step;\n        } else if (event.key === KEYS.ARROW_DOWN) {\n          offsetY = step;\n        }\n\n        selectedElements.forEach((element) => {\n          mutateElement(element, {\n            x: element.x + offsetX,\n            y: element.y + offsetY,\n          });\n\n          updateBoundElements(element, {\n            simultaneouslyUpdated: selectedElements,\n          });\n        });\n\n        this.maybeSuggestBindingForAll(selectedElements);\n\n        event.preventDefault();\n      } else if (event.key === KEYS.ENTER) {\n        const selectedElements = getSelectedElements(\n          this.scene.getElements(),\n          this.state,\n        );\n\n        if (\n          selectedElements.length === 1 &&\n          isLinearElement(selectedElements[0])\n        ) {\n          if (\n            !this.state.editingLinearElement ||\n            this.state.editingLinearElement.elementId !== selectedElements[0].id\n          ) {\n            this.history.resumeRecording();\n            this.setState({\n              editingLinearElement: new LinearElementEditor(\n                selectedElements[0],\n                this.scene,\n              ),\n            });\n          }\n        } else if (\n          selectedElements.length === 1 &&\n          !isLinearElement(selectedElements[0])\n        ) {\n          const selectedElement = selectedElements[0];\n\n          this.startTextEditing({\n            sceneX: selectedElement.x + selectedElement.width / 2,\n            sceneY: selectedElement.y + selectedElement.height / 2,\n            shouldBind: true,\n          });\n          event.preventDefault();\n          return;\n        }\n      } else if (\n        !event.ctrlKey &&\n        !event.altKey &&\n        !event.metaKey &&\n        this.state.draggingElement === null\n      ) {\n        const shape = findShapeByKey(event.key);\n        if (shape) {\n          this.selectShapeTool(shape);\n        } else if (event.key === KEYS.Q) {\n          this.toggleLock();\n        }\n      }\n      if (event.key === KEYS.SPACE && gesture.pointers.size === 0) {\n        isHoldingSpace = true;\n        setCursor(this.canvas, CURSOR_TYPE.GRABBING);\n        event.preventDefault();\n      }\n\n      if (event.key === KEYS.G || event.key === KEYS.S) {\n        const selectedElements = getSelectedElements(\n          this.scene.getElements(),\n          this.state,\n        );\n        if (\n          this.state.elementType === \"selection\" &&\n          !selectedElements.length\n        ) {\n          return;\n        }\n\n        if (\n          event.key === KEYS.G &&\n          (hasBackground(this.state.elementType) ||\n            selectedElements.some((element) => hasBackground(element.type)))\n        ) {\n          this.setState({ openPopup: \"backgroundColorPicker\" });\n        }\n        if (event.key === KEYS.S) {\n          this.setState({ openPopup: \"strokeColorPicker\" });\n        }\n      }\n    },\n  );\n\n  private onKeyUp = withBatchedUpdates((event: KeyboardEvent) => {\n    if (event.key === KEYS.SPACE) {\n      if (this.state.viewModeEnabled) {\n        setCursor(this.canvas, CURSOR_TYPE.GRAB);\n      } else if (this.state.elementType === \"selection\") {\n        resetCursor(this.canvas);\n      } else {\n        setCursorForShape(this.canvas, this.state.elementType);\n        this.setState({\n          selectedElementIds: {},\n          selectedGroupIds: {},\n          editingGroupId: null,\n        });\n      }\n      isHoldingSpace = false;\n    }\n    if (!event[KEYS.CTRL_OR_CMD] && !this.state.isBindingEnabled) {\n      this.setState({ isBindingEnabled: true });\n    }\n    if (isArrowKey(event.key)) {\n      const selectedElements = getSelectedElements(\n        this.scene.getElements(),\n        this.state,\n      );\n      isBindingEnabled(this.state)\n        ? bindOrUnbindSelectedElements(selectedElements)\n        : unbindLinearElements(selectedElements);\n      this.setState({ suggestedBindings: [] });\n    }\n  });\n\n  private selectShapeTool(elementType: AppState[\"elementType\"]) {\n    if (!isHoldingSpace) {\n      setCursorForShape(this.canvas, elementType);\n    }\n    if (isToolIcon(document.activeElement)) {\n      this.focusContainer();\n    }\n    if (!isLinearElementType(elementType)) {\n      this.setState({ suggestedBindings: [] });\n    }\n    if (elementType === \"image\") {\n      this.onImageAction();\n    }\n    if (elementType !== \"selection\") {\n      this.setState({\n        elementType,\n        selectedElementIds: {},\n        selectedGroupIds: {},\n        editingGroupId: null,\n      });\n    } else {\n      this.setState({ elementType });\n    }\n  }\n\n  private onGestureStart = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n    this.setState({\n      selectedElementIds: {},\n    });\n    gesture.initialScale = this.state.zoom.value;\n  });\n\n  private onGestureChange = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n\n    // onGestureChange only has zoom factor but not the center.\n    // If we're on iPad or iPhone, then we recognize multi-touch and will\n    // zoom in at the right location on the touchMove handler already.\n    // On Macbook, we don't have those events so will zoom in at the\n    // current location instead.\n    if (gesture.pointers.size >= 2) {\n      return;\n    }\n\n    const initialScale = gesture.initialScale;\n    if (initialScale) {\n      this.setState((state) => ({\n        ...getStateForZoom(\n          {\n            viewportX: cursorX,\n            viewportY: cursorY,\n            nextZoom: getNormalizedZoom(initialScale * event.scale),\n          },\n          state,\n        ),\n      }));\n    }\n  });\n\n  private onGestureEnd = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n    this.setState({\n      previousSelectedElementIds: {},\n      selectedElementIds: this.state.previousSelectedElementIds,\n    });\n    gesture.initialScale = null;\n  });\n\n  private handleTextWysiwyg(\n    element: ExcalidrawTextElement,\n    {\n      isExistingElement = false,\n    }: {\n      isExistingElement?: boolean;\n    },\n  ) {\n    const updateElement = (\n      text: string,\n      originalText: string,\n      isDeleted: boolean,\n    ) => {\n      this.scene.replaceAllElements([\n        ...this.scene.getElementsIncludingDeleted().map((_element) => {\n          if (_element.id === element.id && isTextElement(_element)) {\n            return updateTextElement(_element, {\n              text,\n              isDeleted,\n              originalText,\n            });\n          }\n          return _element;\n        }),\n      ]);\n    };\n\n    textWysiwyg({\n      id: element.id,\n      canvas: this.canvas,\n      getViewportCoords: (x, y) => {\n        const { x: viewportX, y: viewportY } = sceneCoordsToViewportCoords(\n          {\n            sceneX: x,\n            sceneY: y,\n          },\n          this.state,\n        );\n        return [\n          viewportX - this.state.offsetLeft,\n          viewportY - this.state.offsetTop,\n        ];\n      },\n      onChange: withBatchedUpdates((text) => {\n        updateElement(text, text, false);\n        if (isNonDeletedElement(element)) {\n          updateBoundElements(element);\n        }\n      }),\n      onSubmit: withBatchedUpdates(({ text, viaKeyboard, originalText }) => {\n        const isDeleted = !text.trim();\n        updateElement(text, originalText, isDeleted);\n        // select the created text element only if submitting via keyboard\n        // (when submitting via click it should act as signal to deselect)\n        if (!isDeleted && viaKeyboard) {\n          const elementIdToSelect = element.containerId\n            ? element.containerId\n            : element.id;\n          this.setState((prevState) => ({\n            selectedElementIds: {\n              ...prevState.selectedElementIds,\n              [elementIdToSelect]: true,\n            },\n          }));\n        }\n        if (isDeleted) {\n          fixBindingsAfterDeletion(this.scene.getElements(), [element]);\n        }\n        if (!isDeleted || isExistingElement) {\n          this.history.resumeRecording();\n        }\n\n        this.setState({\n          draggingElement: null,\n          editingElement: null,\n        });\n        if (this.state.elementLocked) {\n          setCursorForShape(this.canvas, this.state.elementType);\n        }\n\n        this.focusContainer();\n      }),\n      element,\n      excalidrawContainer: this.excalidrawContainerRef.current,\n      app: this,\n    });\n    // deselect all other elements when inserting text\n    this.deselectElements();\n\n    // do an initial update to re-initialize element position since we were\n    // modifying element's x/y for sake of editor (case: syncing to remote)\n    updateElement(element.text, element.originalText, false);\n  }\n\n  private deselectElements() {\n    this.setState({\n      selectedElementIds: {},\n      selectedGroupIds: {},\n      editingGroupId: null,\n    });\n  }\n\n  private getTextElementAtPosition(\n    x: number,\n    y: number,\n  ): NonDeleted<ExcalidrawTextElement> | null {\n    const element = this.getElementAtPosition(x, y, {\n      includeBoundTextElement: true,\n    });\n\n    if (element && isTextElement(element) && !element.isDeleted) {\n      return element;\n    }\n    return null;\n  }\n\n  private getElementAtPosition(\n    x: number,\n    y: number,\n    opts?: {\n      /** if true, returns the first selected element (with highest z-index)\n        of all hit elements */\n      preferSelected?: boolean;\n      includeBoundTextElement?: boolean;\n    },\n  ): NonDeleted<ExcalidrawElement> | null {\n    const allHitElements = this.getElementsAtPosition(\n      x,\n      y,\n      opts?.includeBoundTextElement,\n    );\n    if (allHitElements.length > 1) {\n      if (opts?.preferSelected) {\n        for (let index = allHitElements.length - 1; index > -1; index--) {\n          if (this.state.selectedElementIds[allHitElements[index].id]) {\n            return allHitElements[index];\n          }\n        }\n      }\n      const elementWithHighestZIndex =\n        allHitElements[allHitElements.length - 1];\n      // If we're hitting element with highest z-index only on its bounding box\n      // while also hitting other element figure, the latter should be considered.\n      return isHittingElementBoundingBoxWithoutHittingElement(\n        elementWithHighestZIndex,\n        this.state,\n        x,\n        y,\n      )\n        ? allHitElements[allHitElements.length - 2]\n        : elementWithHighestZIndex;\n    }\n    if (allHitElements.length === 1) {\n      return allHitElements[0];\n    }\n    return null;\n  }\n\n  private getElementsAtPosition(\n    x: number,\n    y: number,\n    includeBoundTextElement: boolean = false,\n  ): NonDeleted<ExcalidrawElement>[] {\n    const elements = includeBoundTextElement\n      ? this.scene.getElements()\n      : this.scene\n          .getElements()\n          .filter(\n            (element) => !(isTextElement(element) && element.containerId),\n          );\n\n    return getElementsAtPosition(elements, (element) =>\n      hitTest(element, this.state, x, y),\n    );\n  }\n\n  private startTextEditing = ({\n    sceneX,\n    sceneY,\n    shouldBind,\n    insertAtParentCenter = true,\n  }: {\n    /** X position to insert text at */\n    sceneX: number;\n    /** Y position to insert text at */\n    sceneY: number;\n    shouldBind: boolean;\n    /** whether to attempt to insert at element center if applicable */\n    insertAtParentCenter?: boolean;\n  }) => {\n    let parentCenterPosition =\n      insertAtParentCenter &&\n      this.getTextWysiwygSnappedToCenterPosition(\n        sceneX,\n        sceneY,\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n\n    let existingTextElement: NonDeleted<ExcalidrawTextElement> | null = null;\n    let container: ExcalidrawTextContainer | null = null;\n\n    const selectedElements = getSelectedElements(\n      this.scene.getElements(),\n      this.state,\n    );\n\n    if (selectedElements.length === 1) {\n      if (isTextElement(selectedElements[0])) {\n        existingTextElement = selectedElements[0];\n      } else if (isTextBindableContainer(selectedElements[0])) {\n        container = selectedElements[0];\n        existingTextElement = getBoundTextElement(container);\n      }\n    }\n\n    existingTextElement =\n      existingTextElement ?? this.getTextElementAtPosition(sceneX, sceneY);\n\n    // bind to container when shouldBind is true or\n    // clicked on center of container\n    if (\n      !container &&\n      !existingTextElement &&\n      (shouldBind || parentCenterPosition)\n    ) {\n      container = getTextBindableContainerAtPosition(\n        this.scene.getElements().filter((ele) => !isTextElement(ele)),\n        sceneX,\n        sceneY,\n      );\n    }\n\n    if (!existingTextElement && container) {\n      const fontString = {\n        fontSize: this.state.currentItemFontSize,\n        fontFamily: this.state.currentItemFontFamily,\n      };\n      const minWidth = getApproxMinLineWidth(getFontString(fontString));\n      const minHeight = getApproxMinLineHeight(getFontString(fontString));\n      const newHeight = Math.max(container.height, minHeight);\n      const newWidth = Math.max(container.width, minWidth);\n      mutateElement(container, { height: newHeight, width: newWidth });\n      sceneX = container.x + newWidth / 2;\n      sceneY = container.y + newHeight / 2;\n      if (parentCenterPosition) {\n        parentCenterPosition = this.getTextWysiwygSnappedToCenterPosition(\n          sceneX,\n          sceneY,\n          this.state,\n          this.canvas,\n          window.devicePixelRatio,\n        );\n      }\n    }\n\n    const element = existingTextElement\n      ? existingTextElement\n      : newTextElement({\n          x: parentCenterPosition\n            ? parentCenterPosition.elementCenterX\n            : sceneX,\n          y: parentCenterPosition\n            ? parentCenterPosition.elementCenterY\n            : sceneY,\n          strokeColor: this.state.currentItemStrokeColor,\n          backgroundColor: this.state.currentItemBackgroundColor,\n          fillStyle: this.state.currentItemFillStyle,\n          strokeWidth: this.state.currentItemStrokeWidth,\n          strokeStyle: this.state.currentItemStrokeStyle,\n          roughness: this.state.currentItemRoughness,\n          opacity: this.state.currentItemOpacity,\n          strokeSharpness: this.state.currentItemStrokeSharpness,\n          text: \"\",\n          fontSize: this.state.currentItemFontSize,\n          fontFamily: this.state.currentItemFontFamily,\n          textAlign: parentCenterPosition\n            ? \"center\"\n            : this.state.currentItemTextAlign,\n          verticalAlign: parentCenterPosition\n            ? VERTICAL_ALIGN.MIDDLE\n            : DEFAULT_VERTICAL_ALIGN,\n          containerId: container?.id ?? undefined,\n          groupIds: container?.groupIds ?? [],\n        });\n\n    this.setState({ editingElement: element });\n\n    if (!existingTextElement) {\n      this.scene.replaceAllElements([\n        ...this.scene.getElementsIncludingDeleted(),\n        element,\n      ]);\n\n      // case: creating new text not centered to parent element → offset Y\n      // so that the text is centered to cursor position\n      if (!parentCenterPosition) {\n        mutateElement(element, {\n          y: element.y - element.baseline / 2,\n        });\n      }\n    }\n\n    this.setState({\n      editingElement: element,\n    });\n\n    this.handleTextWysiwyg(element, {\n      isExistingElement: !!existingTextElement,\n    });\n  };\n\n  private handleCanvasDoubleClick = (\n    event: React.MouseEvent<HTMLCanvasElement>,\n  ) => {\n    // case: double-clicking with arrow/line tool selected would both create\n    // text and enter multiElement mode\n    if (this.state.multiElement) {\n      return;\n    }\n    // we should only be able to double click when mode is selection\n    if (this.state.elementType !== \"selection\") {\n      return;\n    }\n\n    const selectedElements = getSelectedElements(\n      this.scene.getElements(),\n      this.state,\n    );\n\n    if (selectedElements.length === 1 && isLinearElement(selectedElements[0])) {\n      if (\n        !this.state.editingLinearElement ||\n        this.state.editingLinearElement.elementId !== selectedElements[0].id\n      ) {\n        this.history.resumeRecording();\n        this.setState({\n          editingLinearElement: new LinearElementEditor(\n            selectedElements[0],\n            this.scene,\n          ),\n        });\n      }\n      return;\n    }\n\n    resetCursor(this.canvas);\n\n    let { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n    );\n\n    const selectedGroupIds = getSelectedGroupIds(this.state);\n\n    if (selectedGroupIds.length > 0) {\n      const hitElement = this.getElementAtPosition(sceneX, sceneY);\n\n      const selectedGroupId =\n        hitElement &&\n        getSelectedGroupIdForElement(hitElement, this.state.selectedGroupIds);\n\n      if (selectedGroupId) {\n        this.setState((prevState) =>\n          selectGroupsForSelectedElements(\n            {\n              ...prevState,\n              editingGroupId: selectedGroupId,\n              selectedElementIds: { [hitElement!.id]: true },\n              selectedGroupIds: {},\n            },\n            this.scene.getElements(),\n          ),\n        );\n        return;\n      }\n    }\n\n    resetCursor(this.canvas);\n    if (!event[KEYS.CTRL_OR_CMD] && !this.state.viewModeEnabled) {\n      const selectedElements = getSelectedElements(\n        this.scene.getElements(),\n        this.state,\n      );\n      if (selectedElements.length === 1) {\n        const selectedElement = selectedElements[0];\n        const canBindText = hasBoundTextElement(selectedElement);\n        if (canBindText) {\n          sceneX = selectedElement.x + selectedElement.width / 2;\n          sceneY = selectedElement.y + selectedElement.height / 2;\n        }\n      }\n      this.startTextEditing({\n        sceneX,\n        sceneY,\n        shouldBind: false,\n        insertAtParentCenter: !event.altKey,\n      });\n    }\n  };\n\n  private getElementLinkAtPosition = (\n    scenePointer: Readonly<{ x: number; y: number }>,\n    hitElement: NonDeletedExcalidrawElement | null,\n  ): ExcalidrawElement | undefined => {\n    // Reversing so we traverse the elements in decreasing order\n    // of z-index\n    const elements = this.scene.getElements().slice().reverse();\n    let hitElementIndex = Infinity;\n\n    return elements.find((element, index) => {\n      if (hitElement && element.id === hitElement.id) {\n        hitElementIndex = index;\n      }\n      return (\n        element.link &&\n        isPointHittingLinkIcon(\n          element,\n          this.state,\n          [scenePointer.x, scenePointer.y],\n          this.isMobile,\n        ) &&\n        index <= hitElementIndex\n      );\n    });\n  };\n\n  private redirectToLink = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n    isTouchScreen: boolean,\n  ) => {\n    const draggedDistance = distance2d(\n      this.lastPointerDown!.clientX,\n      this.lastPointerDown!.clientY,\n      this.lastPointerUp!.clientX,\n      this.lastPointerUp!.clientY,\n    );\n    if (\n      !this.hitLinkElement ||\n      // For touch screen allow dragging threshold else strict check\n      (isTouchScreen && draggedDistance > DRAGGING_THRESHOLD) ||\n      (!isTouchScreen && draggedDistance !== 0)\n    ) {\n      return;\n    }\n    const lastPointerDownCoords = viewportCoordsToSceneCoords(\n      this.lastPointerDown!,\n      this.state,\n    );\n    const lastPointerDownHittingLinkIcon = isPointHittingLinkIcon(\n      this.hitLinkElement!,\n      this.state,\n      [lastPointerDownCoords.x, lastPointerDownCoords.y],\n      this.isMobile,\n    );\n    const lastPointerUpCoords = viewportCoordsToSceneCoords(\n      this.lastPointerUp!,\n      this.state,\n    );\n    const lastPointerUpHittingLinkIcon = isPointHittingLinkIcon(\n      this.hitLinkElement!,\n      this.state,\n      [lastPointerUpCoords.x, lastPointerUpCoords.y],\n      this.isMobile,\n    );\n    if (lastPointerDownHittingLinkIcon && lastPointerUpHittingLinkIcon) {\n      const url = this.hitLinkElement.link;\n      if (url) {\n        let customEvent;\n        if (this.props.onLinkOpen) {\n          customEvent = wrapEvent(EVENT.EXCALIDRAW_LINK, event.nativeEvent);\n          this.props.onLinkOpen(this.hitLinkElement, customEvent);\n        }\n        if (!customEvent?.defaultPrevented) {\n          const target = isLocalLink(url) ? \"_self\" : \"_blank\";\n          const newWindow = window.open(undefined, target);\n          // https://mathiasbynens.github.io/rel-noopener/\n          if (newWindow) {\n            newWindow.opener = null;\n            newWindow.location = normalizeLink(url);\n          }\n        }\n      }\n    }\n  };\n\n  private handleCanvasPointerMove = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    this.savePointer(event.clientX, event.clientY, this.state.cursorButton);\n    if (gesture.pointers.has(event.pointerId)) {\n      gesture.pointers.set(event.pointerId, {\n        x: event.clientX,\n        y: event.clientY,\n      });\n    }\n\n    const initialScale = gesture.initialScale;\n    if (\n      gesture.pointers.size === 2 &&\n      gesture.lastCenter &&\n      initialScale &&\n      gesture.initialDistance\n    ) {\n      const center = getCenter(gesture.pointers);\n      const deltaX = center.x - gesture.lastCenter.x;\n      const deltaY = center.y - gesture.lastCenter.y;\n      gesture.lastCenter = center;\n\n      const distance = getDistance(Array.from(gesture.pointers.values()));\n      const scaleFactor =\n        this.state.elementType === \"freedraw\" && this.state.penMode\n          ? 1\n          : distance / gesture.initialDistance;\n\n      const nextZoom = scaleFactor\n        ? getNormalizedZoom(initialScale * scaleFactor)\n        : this.state.zoom.value;\n\n      this.setState((state) => {\n        const zoomState = getStateForZoom(\n          {\n            viewportX: center.x,\n            viewportY: center.y,\n            nextZoom,\n          },\n          state,\n        );\n\n        return {\n          zoom: zoomState.zoom,\n          scrollX: zoomState.scrollX + deltaX / nextZoom,\n          scrollY: zoomState.scrollY + deltaY / nextZoom,\n          shouldCacheIgnoreZoom: true,\n        };\n      });\n      this.resetShouldCacheIgnoreZoomDebounced();\n    } else {\n      gesture.lastCenter =\n        gesture.initialDistance =\n        gesture.initialScale =\n          null;\n    }\n\n    if (isHoldingSpace || isPanning || isDraggingScrollBar) {\n      return;\n    }\n\n    const isPointerOverScrollBars = isOverScrollBars(\n      currentScrollBars,\n      event.clientX - this.state.offsetLeft,\n      event.clientY - this.state.offsetTop,\n    );\n    const isOverScrollBar = isPointerOverScrollBars.isOverEither;\n    if (!this.state.draggingElement && !this.state.multiElement) {\n      if (isOverScrollBar) {\n        resetCursor(this.canvas);\n      } else {\n        setCursorForShape(this.canvas, this.state.elementType);\n      }\n    }\n\n    const scenePointer = viewportCoordsToSceneCoords(event, this.state);\n    const { x: scenePointerX, y: scenePointerY } = scenePointer;\n\n    if (\n      this.state.editingLinearElement &&\n      !this.state.editingLinearElement.isDragging\n    ) {\n      const editingLinearElement = LinearElementEditor.handlePointerMove(\n        event,\n        scenePointerX,\n        scenePointerY,\n        this.state.editingLinearElement,\n        this.state.gridSize,\n      );\n      if (editingLinearElement !== this.state.editingLinearElement) {\n        this.setState({ editingLinearElement });\n      }\n      if (editingLinearElement.lastUncommittedPoint != null) {\n        this.maybeSuggestBindingAtCursor(scenePointer);\n      } else {\n        this.setState({ suggestedBindings: [] });\n      }\n    }\n\n    if (isBindingElementType(this.state.elementType)) {\n      // Hovering with a selected tool or creating new linear element via click\n      // and point\n      const { draggingElement } = this.state;\n      if (isBindingElement(draggingElement)) {\n        this.maybeSuggestBindingsForLinearElementAtCoords(\n          draggingElement,\n          [scenePointer],\n          this.state.startBoundElement,\n        );\n      } else {\n        this.maybeSuggestBindingAtCursor(scenePointer);\n      }\n    }\n\n    if (this.state.multiElement) {\n      const { multiElement } = this.state;\n      const { x: rx, y: ry } = multiElement;\n\n      const { points, lastCommittedPoint } = multiElement;\n      const lastPoint = points[points.length - 1];\n\n      setCursorForShape(this.canvas, this.state.elementType);\n\n      if (lastPoint === lastCommittedPoint) {\n        // if we haven't yet created a temp point and we're beyond commit-zone\n        // threshold, add a point\n        if (\n          distance2d(\n            scenePointerX - rx,\n            scenePointerY - ry,\n            lastPoint[0],\n            lastPoint[1],\n          ) >= LINE_CONFIRM_THRESHOLD\n        ) {\n          mutateElement(multiElement, {\n            points: [...points, [scenePointerX - rx, scenePointerY - ry]],\n          });\n        } else {\n          setCursor(this.canvas, CURSOR_TYPE.POINTER);\n          // in this branch, we're inside the commit zone, and no uncommitted\n          // point exists. Thus do nothing (don't add/remove points).\n        }\n      } else if (\n        points.length > 2 &&\n        lastCommittedPoint &&\n        distance2d(\n          scenePointerX - rx,\n          scenePointerY - ry,\n          lastCommittedPoint[0],\n          lastCommittedPoint[1],\n        ) < LINE_CONFIRM_THRESHOLD\n      ) {\n        setCursor(this.canvas, CURSOR_TYPE.POINTER);\n        mutateElement(multiElement, {\n          points: points.slice(0, -1),\n        });\n      } else {\n        if (isPathALoop(points, this.state.zoom.value)) {\n          setCursor(this.canvas, CURSOR_TYPE.POINTER);\n        }\n        // update last uncommitted point\n        mutateElement(multiElement, {\n          points: [\n            ...points.slice(0, -1),\n            [scenePointerX - rx, scenePointerY - ry],\n          ],\n        });\n      }\n\n      return;\n    }\n\n    const hasDeselectedButton = Boolean(event.buttons);\n    if (\n      hasDeselectedButton ||\n      (this.state.elementType !== \"selection\" &&\n        this.state.elementType !== \"text\" &&\n        this.state.elementType !== \"eraser\")\n    ) {\n      return;\n    }\n\n    const elements = this.scene.getElements();\n\n    const selectedElements = getSelectedElements(elements, this.state);\n    if (\n      selectedElements.length === 1 &&\n      !isOverScrollBar &&\n      !this.state.editingLinearElement\n    ) {\n      const elementWithTransformHandleType = getElementWithTransformHandleType(\n        elements,\n        this.state,\n        scenePointerX,\n        scenePointerY,\n        this.state.zoom,\n        event.pointerType,\n      );\n      if (\n        elementWithTransformHandleType &&\n        elementWithTransformHandleType.transformHandleType\n      ) {\n        setCursor(\n          this.canvas,\n          getCursorForResizingElement(elementWithTransformHandleType),\n        );\n        return;\n      }\n    } else if (selectedElements.length > 1 && !isOverScrollBar) {\n      const transformHandleType = getTransformHandleTypeFromCoords(\n        getCommonBounds(selectedElements),\n        scenePointerX,\n        scenePointerY,\n        this.state.zoom,\n        event.pointerType,\n      );\n      if (transformHandleType) {\n        setCursor(\n          this.canvas,\n          getCursorForResizingElement({\n            transformHandleType,\n          }),\n        );\n        return;\n      }\n    }\n\n    const hitElement = this.getElementAtPosition(\n      scenePointer.x,\n      scenePointer.y,\n    );\n    this.hitLinkElement = this.getElementLinkAtPosition(\n      scenePointer,\n      hitElement,\n    );\n\n    if (\n      this.hitLinkElement &&\n      !this.state.selectedElementIds[this.hitLinkElement.id]\n    ) {\n      setCursor(this.canvas, CURSOR_TYPE.POINTER);\n      showHyperlinkTooltip(this.hitLinkElement, this.state);\n    } else {\n      hideHyperlinkToolip();\n      if (\n        hitElement &&\n        hitElement.link &&\n        this.state.selectedElementIds[hitElement.id] &&\n        !this.contextMenuOpen &&\n        !this.state.showHyperlinkPopup\n      ) {\n        this.setState({ showHyperlinkPopup: \"info\" });\n      } else if (isEraserActive(this.state)) {\n        setCursor(this.canvas, CURSOR_TYPE.AUTO);\n      } else if (this.state.elementType === \"text\") {\n        setCursor(\n          this.canvas,\n          isTextElement(hitElement) ? CURSOR_TYPE.TEXT : CURSOR_TYPE.CROSSHAIR,\n        );\n      } else if (this.state.viewModeEnabled) {\n        setCursor(this.canvas, CURSOR_TYPE.GRAB);\n      } else if (isOverScrollBar) {\n        setCursor(this.canvas, CURSOR_TYPE.AUTO);\n      } else if (this.state.editingLinearElement) {\n        const element = LinearElementEditor.getElement(\n          this.state.editingLinearElement.elementId,\n        );\n\n        if (\n          element &&\n          isHittingElementNotConsideringBoundingBox(element, this.state, [\n            scenePointer.x,\n            scenePointer.y,\n          ])\n        ) {\n          setCursor(this.canvas, CURSOR_TYPE.MOVE);\n        } else {\n          setCursor(this.canvas, CURSOR_TYPE.AUTO);\n        }\n      } else if (\n        // if using cmd/ctrl, we're not dragging\n        !event[KEYS.CTRL_OR_CMD] &&\n        (hitElement ||\n          this.isHittingCommonBoundingBoxOfSelectedElements(\n            scenePointer,\n            selectedElements,\n          ))\n      ) {\n        setCursor(this.canvas, CURSOR_TYPE.MOVE);\n      } else {\n        setCursor(this.canvas, CURSOR_TYPE.AUTO);\n      }\n    }\n  };\n\n  private handleEraser = (\n    event: PointerEvent,\n    pointerDownState: PointerDownState,\n    scenePointer: { x: number; y: number },\n  ) => {\n    const updateElementIds = (elements: ExcalidrawElement[]) => {\n      elements.forEach((element) => {\n        idsToUpdate.push(element.id);\n        if (event.altKey) {\n          if (pointerDownState.elementIdsToErase[element.id]) {\n            pointerDownState.elementIdsToErase[element.id] = false;\n          }\n        } else {\n          pointerDownState.elementIdsToErase[element.id] = true;\n        }\n      });\n    };\n\n    const idsToUpdate: Array<string> = [];\n\n    const distance = distance2d(\n      pointerDownState.lastCoords.x,\n      pointerDownState.lastCoords.y,\n      scenePointer.x,\n      scenePointer.y,\n    );\n    const threshold = 10 / this.state.zoom.value;\n    const point = { ...pointerDownState.lastCoords };\n    let samplingInterval = 0;\n    while (samplingInterval <= distance) {\n      const hitElements = this.getElementsAtPosition(point.x, point.y);\n      updateElementIds(hitElements);\n\n      // Exit since we reached current point\n      if (samplingInterval === distance) {\n        break;\n      }\n\n      // Calculate next point in the line at a distance of sampling interval\n      samplingInterval = Math.min(samplingInterval + threshold, distance);\n\n      const distanceRatio = samplingInterval / distance;\n      const nextX =\n        (1 - distanceRatio) * point.x + distanceRatio * scenePointer.x;\n      const nextY =\n        (1 - distanceRatio) * point.y + distanceRatio * scenePointer.y;\n      point.x = nextX;\n      point.y = nextY;\n    }\n\n    const elements = this.scene.getElements().map((ele) => {\n      const id =\n        isBoundToContainer(ele) && idsToUpdate.includes(ele.containerId)\n          ? ele.containerId\n          : ele.id;\n      if (idsToUpdate.includes(id)) {\n        if (event.altKey) {\n          if (pointerDownState.elementIdsToErase[id] === false) {\n            return newElementWith(ele, {\n              opacity: this.state.currentItemOpacity,\n            });\n          }\n        } else {\n          return newElementWith(ele, { opacity: 20 });\n        }\n      }\n      return ele;\n    });\n\n    this.scene.replaceAllElements(elements);\n\n    pointerDownState.lastCoords.x = scenePointer.x;\n    pointerDownState.lastCoords.y = scenePointer.y;\n  };\n  // set touch moving for mobile context menu\n  private handleTouchMove = (event: React.TouchEvent<HTMLCanvasElement>) => {\n    invalidateContextMenu = true;\n  };\n\n  private handleCanvasPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    // remove any active selection when we start to interact with canvas\n    // (mainly, we care about removing selection outside the component which\n    //  would prevent our copy handling otherwise)\n    const selection = document.getSelection();\n    if (selection?.anchorNode) {\n      selection.removeAllRanges();\n    }\n    this.maybeOpenContextMenuAfterPointerDownOnTouchDevices(event);\n    this.maybeCleanupAfterMissingPointerUp(event);\n\n    //fires only once, if pen is detected, penMode is enabled\n    //the user can disable this by toggling the penMode button\n    if (!this.state.penDetected && event.pointerType === \"pen\") {\n      this.setState((prevState) => {\n        return {\n          penMode: true,\n          penDetected: true,\n        };\n      });\n    }\n\n    if (isPanning) {\n      return;\n    }\n\n    this.lastPointerDown = event;\n    this.setState({\n      lastPointerDownWith: event.pointerType,\n      cursorButton: \"down\",\n    });\n    this.savePointer(event.clientX, event.clientY, \"down\");\n\n    if (this.handleCanvasPanUsingWheelOrSpaceDrag(event)) {\n      return;\n    }\n\n    // only handle left mouse button or touch\n    if (\n      event.button !== POINTER_BUTTON.MAIN &&\n      event.button !== POINTER_BUTTON.TOUCH\n    ) {\n      return;\n    }\n\n    this.updateGestureOnPointerDown(event);\n\n    // don't select while panning\n    if (gesture.pointers.size > 1) {\n      return;\n    }\n\n    // State for the duration of a pointer interaction, which starts with a\n    // pointerDown event, ends with a pointerUp event (or another pointerDown)\n    const pointerDownState = this.initialPointerDownState(event);\n\n    if (this.handleDraggingScrollBar(event, pointerDownState)) {\n      return;\n    }\n\n    // Since context menu closes on pointer down so setting to false\n    this.contextMenuOpen = false;\n    this.clearSelectionIfNotUsingSelection();\n    this.updateBindingEnabledOnPointerMove(event);\n\n    if (this.handleSelectionOnPointerDown(event, pointerDownState)) {\n      return;\n    }\n\n    const allowOnPointerDown =\n      !this.state.penMode ||\n      event.pointerType !== \"touch\" ||\n      this.state.elementType === \"selection\" ||\n      this.state.elementType === \"text\" ||\n      this.state.elementType === \"image\";\n\n    if (!allowOnPointerDown) {\n      return;\n    }\n\n    if (this.state.elementType === \"text\") {\n      this.handleTextOnPointerDown(event, pointerDownState);\n      return;\n    } else if (\n      this.state.elementType === \"arrow\" ||\n      this.state.elementType === \"line\"\n    ) {\n      this.handleLinearElementOnPointerDown(\n        event,\n        this.state.elementType,\n        pointerDownState,\n      );\n    } else if (this.state.elementType === \"image\") {\n      // reset image preview on pointerdown\n      setCursor(this.canvas, CURSOR_TYPE.CROSSHAIR);\n\n      if (!this.state.pendingImageElement) {\n        return;\n      }\n\n      this.setState({\n        draggingElement: this.state.pendingImageElement,\n        editingElement: this.state.pendingImageElement,\n        pendingImageElement: null,\n        multiElement: null,\n      });\n\n      const { x, y } = viewportCoordsToSceneCoords(event, this.state);\n      mutateElement(this.state.pendingImageElement, {\n        x,\n        y,\n      });\n    } else if (this.state.elementType === \"freedraw\") {\n      this.handleFreeDrawElementOnPointerDown(\n        event,\n        this.state.elementType,\n        pointerDownState,\n      );\n    } else if (this.state.elementType !== \"eraser\") {\n      this.createGenericElementOnPointerDown(\n        this.state.elementType,\n        pointerDownState,\n      );\n    }\n\n    const onPointerMove =\n      this.onPointerMoveFromPointerDownHandler(pointerDownState);\n\n    const onPointerUp =\n      this.onPointerUpFromPointerDownHandler(pointerDownState);\n\n    const onKeyDown = this.onKeyDownFromPointerDownHandler(pointerDownState);\n    const onKeyUp = this.onKeyUpFromPointerDownHandler(pointerDownState);\n\n    lastPointerUp = onPointerUp;\n\n    if (!this.state.viewModeEnabled) {\n      window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n      window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n      window.addEventListener(EVENT.KEYDOWN, onKeyDown);\n      window.addEventListener(EVENT.KEYUP, onKeyUp);\n      pointerDownState.eventListeners.onMove = onPointerMove;\n      pointerDownState.eventListeners.onUp = onPointerUp;\n      pointerDownState.eventListeners.onKeyUp = onKeyUp;\n      pointerDownState.eventListeners.onKeyDown = onKeyDown;\n    }\n  };\n\n  private handleCanvasPointerUp = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    this.lastPointerUp = event;\n    const isTouchScreen = [\"pen\", \"touch\"].includes(event.pointerType);\n\n    if (isTouchScreen) {\n      const scenePointer = viewportCoordsToSceneCoords(\n        { clientX: event.clientX, clientY: event.clientY },\n        this.state,\n      );\n      const hitElement = this.getElementAtPosition(\n        scenePointer.x,\n        scenePointer.y,\n      );\n      this.hitLinkElement = this.getElementLinkAtPosition(\n        scenePointer,\n        hitElement,\n      );\n    }\n    if (isEraserActive(this.state)) {\n      const draggedDistance = distance2d(\n        this.lastPointerDown!.clientX,\n        this.lastPointerDown!.clientY,\n        this.lastPointerUp!.clientX,\n        this.lastPointerUp!.clientY,\n      );\n      if (draggedDistance === 0) {\n        const scenePointer = viewportCoordsToSceneCoords(\n          { clientX: event.clientX, clientY: event.clientY },\n          this.state,\n        );\n        const hitElement = this.getElementAtPosition(\n          scenePointer.x,\n          scenePointer.y,\n        );\n        const pointerDownEvent = this.initialPointerDownState(event);\n        pointerDownEvent.hit.element = hitElement;\n        this.eraseElements(pointerDownEvent);\n      }\n    }\n    if (\n      this.hitLinkElement &&\n      !this.state.selectedElementIds[this.hitLinkElement.id]\n    ) {\n      this.redirectToLink(event, isTouchScreen);\n    }\n\n    this.removePointer(event);\n  };\n\n  private maybeOpenContextMenuAfterPointerDownOnTouchDevices = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ): void => {\n    // deal with opening context menu on touch devices\n    if (event.pointerType === \"touch\") {\n      invalidateContextMenu = false;\n\n      if (touchTimeout) {\n        // If there's already a touchTimeout, this means that there's another\n        // touch down and we are doing another touch, so we shouldn't open the\n        // context menu.\n        invalidateContextMenu = true;\n      } else {\n        // open the context menu with the first touch's clientX and clientY\n        // if the touch is not moving\n        touchTimeout = window.setTimeout(() => {\n          touchTimeout = 0;\n          if (!invalidateContextMenu) {\n            this.handleCanvasContextMenu(event);\n          }\n        }, TOUCH_CTX_MENU_TIMEOUT);\n      }\n    }\n  };\n\n  private resetContextMenuTimer = () => {\n    clearTimeout(touchTimeout);\n    touchTimeout = 0;\n    invalidateContextMenu = false;\n  };\n\n  private maybeCleanupAfterMissingPointerUp(\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ): void {\n    if (lastPointerUp !== null) {\n      // Unfortunately, sometimes we don't get a pointerup after a pointerdown,\n      // this can happen when a contextual menu or alert is triggered. In order to avoid\n      // being in a weird state, we clean up on the next pointerdown\n      lastPointerUp(event);\n    }\n  }\n\n  // Returns whether the event is a panning\n  private handleCanvasPanUsingWheelOrSpaceDrag = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ): boolean => {\n    if (\n      !(\n        gesture.pointers.size === 0 &&\n        (event.button === POINTER_BUTTON.WHEEL ||\n          (event.button === POINTER_BUTTON.MAIN && isHoldingSpace) ||\n          this.state.viewModeEnabled)\n      ) ||\n      isTextElement(this.state.editingElement)\n    ) {\n      return false;\n    }\n    isPanning = true;\n    event.preventDefault();\n\n    let nextPastePrevented = false;\n    const isLinux = /Linux/.test(window.navigator.platform);\n\n    setCursor(this.canvas, CURSOR_TYPE.GRABBING);\n    let { clientX: lastX, clientY: lastY } = event;\n    const onPointerMove = withBatchedUpdatesThrottled((event: PointerEvent) => {\n      const deltaX = lastX - event.clientX;\n      const deltaY = lastY - event.clientY;\n      lastX = event.clientX;\n      lastY = event.clientY;\n\n      /*\n       * Prevent paste event if we move while middle clicking on Linux.\n       * See issue #1383.\n       */\n      if (\n        isLinux &&\n        !nextPastePrevented &&\n        (Math.abs(deltaX) > 1 || Math.abs(deltaY) > 1)\n      ) {\n        nextPastePrevented = true;\n\n        /* Prevent the next paste event */\n        const preventNextPaste = (event: ClipboardEvent) => {\n          document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n          event.stopPropagation();\n        };\n\n        /*\n         * Reenable next paste in case of disabled middle click paste for\n         * any reason:\n         * - right click paste\n         * - empty clipboard\n         */\n        const enableNextPaste = () => {\n          setTimeout(() => {\n            document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n            window.removeEventListener(EVENT.POINTER_UP, enableNextPaste);\n          }, 100);\n        };\n\n        document.body.addEventListener(EVENT.PASTE, preventNextPaste);\n        window.addEventListener(EVENT.POINTER_UP, enableNextPaste);\n      }\n\n      this.setState({\n        scrollX: this.state.scrollX - deltaX / this.state.zoom.value,\n        scrollY: this.state.scrollY - deltaY / this.state.zoom.value,\n      });\n    });\n    const teardown = withBatchedUpdates(\n      (lastPointerUp = () => {\n        lastPointerUp = null;\n        isPanning = false;\n        if (!isHoldingSpace) {\n          if (this.state.viewModeEnabled) {\n            setCursor(this.canvas, CURSOR_TYPE.GRAB);\n          } else {\n            setCursorForShape(this.canvas, this.state.elementType);\n          }\n        }\n        this.setState({\n          cursorButton: \"up\",\n        });\n        this.savePointer(event.clientX, event.clientY, \"up\");\n        window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n        window.removeEventListener(EVENT.POINTER_UP, teardown);\n        window.removeEventListener(EVENT.BLUR, teardown);\n        onPointerMove.flush();\n      }),\n    );\n    window.addEventListener(EVENT.BLUR, teardown);\n    window.addEventListener(EVENT.POINTER_MOVE, onPointerMove, {\n      passive: true,\n    });\n    window.addEventListener(EVENT.POINTER_UP, teardown);\n    return true;\n  };\n\n  private updateGestureOnPointerDown(\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ): void {\n    gesture.pointers.set(event.pointerId, {\n      x: event.clientX,\n      y: event.clientY,\n    });\n\n    if (gesture.pointers.size === 2) {\n      gesture.lastCenter = getCenter(gesture.pointers);\n      gesture.initialScale = this.state.zoom.value;\n      gesture.initialDistance = getDistance(\n        Array.from(gesture.pointers.values()),\n      );\n    }\n  }\n\n  private initialPointerDownState(\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ): PointerDownState {\n    const origin = viewportCoordsToSceneCoords(event, this.state);\n    const selectedElements = getSelectedElements(\n      this.scene.getElements(),\n      this.state,\n    );\n    const [minX, minY, maxX, maxY] = getCommonBounds(selectedElements);\n\n    return {\n      origin,\n      withCmdOrCtrl: event[KEYS.CTRL_OR_CMD],\n      originInGrid: tupleToCoors(\n        getGridPoint(origin.x, origin.y, this.state.gridSize),\n      ),\n      scrollbars: isOverScrollBars(\n        currentScrollBars,\n        event.clientX - this.state.offsetLeft,\n        event.clientY - this.state.offsetTop,\n      ),\n      // we need to duplicate because we'll be updating this state\n      lastCoords: { ...origin },\n      originalElements: this.scene.getElements().reduce((acc, element) => {\n        acc.set(element.id, deepCopyElement(element));\n        return acc;\n      }, new Map() as PointerDownState[\"originalElements\"]),\n      resize: {\n        handleType: false,\n        isResizing: false,\n        offset: { x: 0, y: 0 },\n        arrowDirection: \"origin\",\n        center: { x: (maxX + minX) / 2, y: (maxY + minY) / 2 },\n      },\n      hit: {\n        element: null,\n        allHitElements: [],\n        wasAddedToSelection: false,\n        hasBeenDuplicated: false,\n        hasHitCommonBoundingBoxOfSelectedElements:\n          this.isHittingCommonBoundingBoxOfSelectedElements(\n            origin,\n            selectedElements,\n          ),\n        hasHitElementInside: false,\n      },\n      drag: {\n        hasOccurred: false,\n        offset: null,\n      },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n      boxSelection: {\n        hasOccurred: false,\n      },\n      elementIdsToErase: {},\n    };\n  }\n\n  // Returns whether the event is a dragging a scrollbar\n  private handleDraggingScrollBar(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    pointerDownState: PointerDownState,\n  ): boolean {\n    if (\n      !(pointerDownState.scrollbars.isOverEither && !this.state.multiElement)\n    ) {\n      return false;\n    }\n    isDraggingScrollBar = true;\n    pointerDownState.lastCoords.x = event.clientX;\n    pointerDownState.lastCoords.y = event.clientY;\n    const onPointerMove = withBatchedUpdatesThrottled((event: PointerEvent) => {\n      const target = event.target;\n      if (!(target instanceof HTMLElement)) {\n        return;\n      }\n\n      this.handlePointerMoveOverScrollbars(event, pointerDownState);\n    });\n\n    const onPointerUp = withBatchedUpdates(() => {\n      isDraggingScrollBar = false;\n      setCursorForShape(this.canvas, this.state.elementType);\n      lastPointerUp = null;\n      this.setState({\n        cursorButton: \"up\",\n      });\n      this.savePointer(event.clientX, event.clientY, \"up\");\n      window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n      window.removeEventListener(EVENT.POINTER_UP, onPointerUp);\n      onPointerMove.flush();\n    });\n\n    lastPointerUp = onPointerUp;\n\n    window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n    window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n    return true;\n  }\n\n  private clearSelectionIfNotUsingSelection = (): void => {\n    if (this.state.elementType !== \"selection\") {\n      this.setState({\n        selectedElementIds: {},\n        selectedGroupIds: {},\n        editingGroupId: null,\n      });\n    }\n  };\n\n  /**\n   * @returns whether the pointer event has been completely handled\n   */\n  private handleSelectionOnPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n    pointerDownState: PointerDownState,\n  ): boolean => {\n    if (this.state.elementType === \"selection\") {\n      const elements = this.scene.getElements();\n      const selectedElements = getSelectedElements(elements, this.state);\n      if (selectedElements.length === 1 && !this.state.editingLinearElement) {\n        const elementWithTransformHandleType =\n          getElementWithTransformHandleType(\n            elements,\n            this.state,\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n            this.state.zoom,\n            event.pointerType,\n          );\n        if (elementWithTransformHandleType != null) {\n          this.setState({\n            resizingElement: elementWithTransformHandleType.element,\n          });\n          pointerDownState.resize.handleType =\n            elementWithTransformHandleType.transformHandleType;\n        }\n      } else if (selectedElements.length > 1) {\n        pointerDownState.resize.handleType = getTransformHandleTypeFromCoords(\n          getCommonBounds(selectedElements),\n          pointerDownState.origin.x,\n          pointerDownState.origin.y,\n          this.state.zoom,\n          event.pointerType,\n        );\n      }\n      if (pointerDownState.resize.handleType) {\n        setCursor(\n          this.canvas,\n          getCursorForResizingElement({\n            transformHandleType: pointerDownState.resize.handleType,\n          }),\n        );\n        pointerDownState.resize.isResizing = true;\n        pointerDownState.resize.offset = tupleToCoors(\n          getResizeOffsetXY(\n            pointerDownState.resize.handleType,\n            selectedElements,\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          ),\n        );\n        if (\n          selectedElements.length === 1 &&\n          isLinearElement(selectedElements[0]) &&\n          selectedElements[0].points.length === 2\n        ) {\n          pointerDownState.resize.arrowDirection = getResizeArrowDirection(\n            pointerDownState.resize.handleType,\n            selectedElements[0],\n          );\n        }\n      } else {\n        if (this.state.editingLinearElement) {\n          const ret = LinearElementEditor.handlePointerDown(\n            event,\n            this.state,\n            (appState) => this.setState(appState),\n            this.history,\n            pointerDownState.origin,\n          );\n          if (ret.hitElement) {\n            pointerDownState.hit.element = ret.hitElement;\n          }\n          if (ret.didAddPoint) {\n            return true;\n          }\n        }\n        // hitElement may already be set above, so check first\n        pointerDownState.hit.element =\n          pointerDownState.hit.element ??\n          this.getElementAtPosition(\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          );\n\n        if (pointerDownState.hit.element) {\n          // Early return if pointer is hitting link icon\n          if (\n            isPointHittingLinkIcon(\n              pointerDownState.hit.element,\n              this.state,\n              [pointerDownState.origin.x, pointerDownState.origin.y],\n              this.isMobile,\n            )\n          ) {\n            return false;\n          }\n          pointerDownState.hit.hasHitElementInside =\n            isHittingElementNotConsideringBoundingBox(\n              pointerDownState.hit.element,\n              this.state,\n              [pointerDownState.origin.x, pointerDownState.origin.y],\n            );\n        }\n\n        // For overlapped elements one position may hit\n        // multiple elements\n        pointerDownState.hit.allHitElements = this.getElementsAtPosition(\n          pointerDownState.origin.x,\n          pointerDownState.origin.y,\n        );\n\n        const hitElement = pointerDownState.hit.element;\n        const someHitElementIsSelected =\n          pointerDownState.hit.allHitElements.some((element) =>\n            this.isASelectedElement(element),\n          );\n        if (\n          (hitElement === null || !someHitElementIsSelected) &&\n          !event.shiftKey &&\n          !pointerDownState.hit.hasHitCommonBoundingBoxOfSelectedElements\n        ) {\n          this.clearSelection(hitElement);\n        }\n\n        if (this.state.editingLinearElement) {\n          this.setState({\n            selectedElementIds: {\n              [this.state.editingLinearElement.elementId]: true,\n            },\n          });\n          // If we click on something\n        } else if (hitElement != null) {\n          // on CMD/CTRL, drill down to hit element regardless of groups etc.\n          if (event[KEYS.CTRL_OR_CMD]) {\n            if (!this.state.selectedElementIds[hitElement.id]) {\n              pointerDownState.hit.wasAddedToSelection = true;\n            }\n            this.setState((prevState) => ({\n              ...editGroupForSelectedElement(prevState, hitElement),\n              previousSelectedElementIds: this.state.selectedElementIds,\n            }));\n            // mark as not completely handled so as to allow dragging etc.\n            return false;\n          }\n\n          // deselect if item is selected\n          // if shift is not clicked, this will always return true\n          // otherwise, it will trigger selection based on current\n          // state of the box\n          if (!this.state.selectedElementIds[hitElement.id]) {\n            // if we are currently editing a group, exiting editing mode and deselect the group.\n            if (\n              this.state.editingGroupId &&\n              !isElementInGroup(hitElement, this.state.editingGroupId)\n            ) {\n              this.setState({\n                selectedElementIds: {},\n                selectedGroupIds: {},\n                editingGroupId: null,\n              });\n            }\n\n            // Add hit element to selection. At this point if we're not holding\n            // SHIFT the previously selected element(s) were deselected above\n            // (make sure you use setState updater to use latest state)\n            if (\n              !someHitElementIsSelected &&\n              !pointerDownState.hit.hasHitCommonBoundingBoxOfSelectedElements\n            ) {\n              this.setState((prevState) => {\n                return selectGroupsForSelectedElements(\n                  {\n                    ...prevState,\n                    selectedElementIds: {\n                      ...prevState.selectedElementIds,\n                      [hitElement.id]: true,\n                    },\n                    showHyperlinkPopup: hitElement.link ? \"info\" : false,\n                  },\n                  this.scene.getElements(),\n                );\n              });\n              pointerDownState.hit.wasAddedToSelection = true;\n            }\n          }\n        }\n\n        this.setState({\n          previousSelectedElementIds: this.state.selectedElementIds,\n        });\n      }\n    }\n    return false;\n  };\n\n  private isASelectedElement(hitElement: ExcalidrawElement | null): boolean {\n    return hitElement != null && this.state.selectedElementIds[hitElement.id];\n  }\n\n  private isHittingCommonBoundingBoxOfSelectedElements(\n    point: Readonly<{ x: number; y: number }>,\n    selectedElements: readonly ExcalidrawElement[],\n  ): boolean {\n    if (selectedElements.length < 2) {\n      return false;\n    }\n\n    // How many pixels off the shape boundary we still consider a hit\n    const threshold = 10 / this.state.zoom.value;\n    const [x1, y1, x2, y2] = getCommonBounds(selectedElements);\n    return (\n      point.x > x1 - threshold &&\n      point.x < x2 + threshold &&\n      point.y > y1 - threshold &&\n      point.y < y2 + threshold\n    );\n  }\n\n  private handleTextOnPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n    pointerDownState: PointerDownState,\n  ): void => {\n    // if we're currently still editing text, clicking outside\n    // should only finalize it, not create another (irrespective\n    // of state.elementLocked)\n    if (isTextElement(this.state.editingElement)) {\n      return;\n    }\n    let sceneX = pointerDownState.origin.x;\n    let sceneY = pointerDownState.origin.y;\n\n    const element = this.getElementAtPosition(sceneX, sceneY, {\n      includeBoundTextElement: true,\n    });\n\n    const canBindText = hasBoundTextElement(element);\n    if (canBindText) {\n      sceneX = element.x + element.width / 2;\n      sceneY = element.y + element.height / 2;\n    }\n    this.startTextEditing({\n      sceneX,\n      sceneY,\n      shouldBind: false,\n      insertAtParentCenter: !event.altKey,\n    });\n\n    resetCursor(this.canvas);\n    if (!this.state.elementLocked) {\n      this.setState({\n        elementType: \"selection\",\n      });\n    }\n  };\n\n  private handleFreeDrawElementOnPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n    elementType: ExcalidrawFreeDrawElement[\"type\"],\n    pointerDownState: PointerDownState,\n  ) => {\n    // Begin a mark capture. This does not have to update state yet.\n    const [gridX, gridY] = getGridPoint(\n      pointerDownState.origin.x,\n      pointerDownState.origin.y,\n      null,\n    );\n\n    const element = newFreeDrawElement({\n      type: elementType,\n      x: gridX,\n      y: gridY,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n      strokeSharpness: this.state.currentItemLinearStrokeSharpness,\n      simulatePressure: event.pressure === 0.5,\n    });\n\n    this.setState((prevState) => ({\n      selectedElementIds: {\n        ...prevState.selectedElementIds,\n        [element.id]: false,\n      },\n    }));\n\n    const pressures = element.simulatePressure\n      ? element.pressures\n      : [...element.pressures, event.pressure];\n\n    mutateElement(element, {\n      points: [[0, 0]],\n      pressures,\n    });\n\n    const boundElement = getHoveredElementForBinding(\n      pointerDownState.origin,\n      this.scene,\n    );\n    this.scene.replaceAllElements([\n      ...this.scene.getElementsIncludingDeleted(),\n      element,\n    ]);\n    this.setState({\n      draggingElement: element,\n      editingElement: element,\n      startBoundElement: boundElement,\n      suggestedBindings: [],\n    });\n  };\n\n  private createImageElement = ({\n    sceneX,\n    sceneY,\n  }: {\n    sceneX: number;\n    sceneY: number;\n  }) => {\n    const [gridX, gridY] = getGridPoint(sceneX, sceneY, this.state.gridSize);\n\n    const element = newImageElement({\n      type: \"image\",\n      x: gridX,\n      y: gridY,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n      strokeSharpness: this.state.currentItemLinearStrokeSharpness,\n    });\n\n    return element;\n  };\n\n  private handleLinearElementOnPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n    elementType: ExcalidrawLinearElement[\"type\"],\n    pointerDownState: PointerDownState,\n  ): void => {\n    if (this.state.multiElement) {\n      const { multiElement } = this.state;\n\n      // finalize if completing a loop\n      if (\n        multiElement.type === \"line\" &&\n        isPathALoop(multiElement.points, this.state.zoom.value)\n      ) {\n        mutateElement(multiElement, {\n          lastCommittedPoint:\n            multiElement.points[multiElement.points.length - 1],\n        });\n        this.actionManager.executeAction(actionFinalize);\n        return;\n      }\n\n      const { x: rx, y: ry, lastCommittedPoint } = multiElement;\n\n      // clicking inside commit zone → finalize arrow\n      if (\n        multiElement.points.length > 1 &&\n        lastCommittedPoint &&\n        distance2d(\n          pointerDownState.origin.x - rx,\n          pointerDownState.origin.y - ry,\n          lastCommittedPoint[0],\n          lastCommittedPoint[1],\n        ) < LINE_CONFIRM_THRESHOLD\n      ) {\n        this.actionManager.executeAction(actionFinalize);\n        return;\n      }\n\n      this.setState((prevState) => ({\n        selectedElementIds: {\n          ...prevState.selectedElementIds,\n          [multiElement.id]: true,\n        },\n      }));\n      // clicking outside commit zone → update reference for last committed\n      // point\n      mutateElement(multiElement, {\n        lastCommittedPoint: multiElement.points[multiElement.points.length - 1],\n      });\n      setCursor(this.canvas, CURSOR_TYPE.POINTER);\n    } else {\n      const [gridX, gridY] = getGridPoint(\n        pointerDownState.origin.x,\n        pointerDownState.origin.y,\n        this.state.gridSize,\n      );\n\n      /* If arrow is pre-arrowheads, it will have undefined for both start and end arrowheads.\n      If so, we want it to be null for start and \"arrow\" for end. If the linear item is not\n      an arrow, we want it to be null for both. Otherwise, we want it to use the\n      values from appState. */\n\n      const { currentItemStartArrowhead, currentItemEndArrowhead } = this.state;\n      const [startArrowhead, endArrowhead] =\n        elementType === \"arrow\"\n          ? [currentItemStartArrowhead, currentItemEndArrowhead]\n          : [null, null];\n\n      const element = newLinearElement({\n        type: elementType,\n        x: gridX,\n        y: gridY,\n        strokeColor: this.state.currentItemStrokeColor,\n        backgroundColor: this.state.currentItemBackgroundColor,\n        fillStyle: this.state.currentItemFillStyle,\n        strokeWidth: this.state.currentItemStrokeWidth,\n        strokeStyle: this.state.currentItemStrokeStyle,\n        roughness: this.state.currentItemRoughness,\n        opacity: this.state.currentItemOpacity,\n        strokeSharpness: this.state.currentItemLinearStrokeSharpness,\n        startArrowhead,\n        endArrowhead,\n      });\n      this.setState((prevState) => ({\n        selectedElementIds: {\n          ...prevState.selectedElementIds,\n          [element.id]: false,\n        },\n      }));\n      mutateElement(element, {\n        points: [...element.points, [0, 0]],\n      });\n      const boundElement = getHoveredElementForBinding(\n        pointerDownState.origin,\n        this.scene,\n      );\n      this.scene.replaceAllElements([\n        ...this.scene.getElementsIncludingDeleted(),\n        element,\n      ]);\n      this.setState({\n        draggingElement: element,\n        editingElement: element,\n        startBoundElement: boundElement,\n        suggestedBindings: [],\n      });\n    }\n  };\n\n  private createGenericElementOnPointerDown = (\n    elementType: ExcalidrawGenericElement[\"type\"],\n    pointerDownState: PointerDownState,\n  ): void => {\n    const [gridX, gridY] = getGridPoint(\n      pointerDownState.origin.x,\n      pointerDownState.origin.y,\n      this.state.gridSize,\n    );\n    const element = newElement({\n      type: elementType,\n      x: gridX,\n      y: gridY,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n      strokeSharpness: this.state.currentItemStrokeSharpness,\n    });\n\n    if (element.type === \"selection\") {\n      this.setState({\n        selectionElement: element,\n        draggingElement: element,\n      });\n    } else {\n      this.scene.replaceAllElements([\n        ...this.scene.getElementsIncludingDeleted(),\n        element,\n      ]);\n      this.setState({\n        multiElement: null,\n        draggingElement: element,\n        editingElement: element,\n      });\n    }\n  };\n\n  private onKeyDownFromPointerDownHandler(\n    pointerDownState: PointerDownState,\n  ): (event: KeyboardEvent) => void {\n    return withBatchedUpdates((event: KeyboardEvent) => {\n      if (this.maybeHandleResize(pointerDownState, event)) {\n        return;\n      }\n      this.maybeDragNewGenericElement(pointerDownState, event);\n    });\n  }\n\n  private onKeyUpFromPointerDownHandler(\n    pointerDownState: PointerDownState,\n  ): (event: KeyboardEvent) => void {\n    return withBatchedUpdates((event: KeyboardEvent) => {\n      // Prevents focus from escaping excalidraw tab\n      event.key === KEYS.ALT && event.preventDefault();\n      if (this.maybeHandleResize(pointerDownState, event)) {\n        return;\n      }\n      this.maybeDragNewGenericElement(pointerDownState, event);\n    });\n  }\n\n  private onPointerMoveFromPointerDownHandler(\n    pointerDownState: PointerDownState,\n  ) {\n    return withBatchedUpdatesThrottled((event: PointerEvent) => {\n      // We need to initialize dragOffsetXY only after we've updated\n      // `state.selectedElementIds` on pointerDown. Doing it here in pointerMove\n      // event handler should hopefully ensure we're already working with\n      // the updated state.\n      if (pointerDownState.drag.offset === null) {\n        pointerDownState.drag.offset = tupleToCoors(\n          getDragOffsetXY(\n            getSelectedElements(this.scene.getElements(), this.state),\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          ),\n        );\n      }\n      const target = event.target;\n      if (!(target instanceof HTMLElement)) {\n        return;\n      }\n\n      if (this.handlePointerMoveOverScrollbars(event, pointerDownState)) {\n        return;\n      }\n\n      const pointerCoords = viewportCoordsToSceneCoords(event, this.state);\n\n      if (isEraserActive(this.state)) {\n        this.handleEraser(event, pointerDownState, pointerCoords);\n        return;\n      }\n\n      const [gridX, gridY] = getGridPoint(\n        pointerCoords.x,\n        pointerCoords.y,\n        this.state.gridSize,\n      );\n\n      // for arrows/lines, don't start dragging until a given threshold\n      // to ensure we don't create a 2-point arrow by mistake when\n      // user clicks mouse in a way that it moves a tiny bit (thus\n      // triggering pointermove)\n      if (\n        !pointerDownState.drag.hasOccurred &&\n        (this.state.elementType === \"arrow\" ||\n          this.state.elementType === \"line\")\n      ) {\n        if (\n          distance2d(\n            pointerCoords.x,\n            pointerCoords.y,\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          ) < DRAGGING_THRESHOLD\n        ) {\n          return;\n        }\n      }\n\n      if (pointerDownState.resize.isResizing) {\n        pointerDownState.lastCoords.x = pointerCoords.x;\n        pointerDownState.lastCoords.y = pointerCoords.y;\n        if (this.maybeHandleResize(pointerDownState, event)) {\n          return true;\n        }\n      }\n\n      if (this.state.editingLinearElement) {\n        const didDrag = LinearElementEditor.handlePointDragging(\n          this.state,\n          (appState) => this.setState(appState),\n          pointerCoords.x,\n          pointerCoords.y,\n          (element, pointsSceneCoords) => {\n            this.maybeSuggestBindingsForLinearElementAtCoords(\n              element,\n              pointsSceneCoords,\n            );\n          },\n        );\n\n        if (didDrag) {\n          pointerDownState.lastCoords.x = pointerCoords.x;\n          pointerDownState.lastCoords.y = pointerCoords.y;\n          return;\n        }\n      }\n\n      const hasHitASelectedElement = pointerDownState.hit.allHitElements.some(\n        (element) => this.isASelectedElement(element),\n      );\n\n      if (\n        (hasHitASelectedElement ||\n          pointerDownState.hit.hasHitCommonBoundingBoxOfSelectedElements) &&\n        // this allows for box-selecting points when clicking inside the\n        // line's bounding box\n        (!this.state.editingLinearElement || !event.shiftKey) &&\n        // box-selecting without shift when editing line, not clicking on a line\n        (!this.state.editingLinearElement ||\n          this.state.editingLinearElement?.elementId !==\n            pointerDownState.hit.element?.id ||\n          pointerDownState.hit.hasHitElementInside)\n      ) {\n        // Marking that click was used for dragging to check\n        // if elements should be deselected on pointerup\n        pointerDownState.drag.hasOccurred = true;\n        const selectedElements = getSelectedElements(\n          this.scene.getElements(),\n          this.state,\n        );\n        // prevent dragging even if we're no longer holding cmd/ctrl otherwise\n        // it would have weird results (stuff jumping all over the screen)\n        if (selectedElements.length > 0 && !pointerDownState.withCmdOrCtrl) {\n          const [dragX, dragY] = getGridPoint(\n            pointerCoords.x - pointerDownState.drag.offset.x,\n            pointerCoords.y - pointerDownState.drag.offset.y,\n            this.state.gridSize,\n          );\n\n          const [dragDistanceX, dragDistanceY] = [\n            Math.abs(pointerCoords.x - pointerDownState.origin.x),\n            Math.abs(pointerCoords.y - pointerDownState.origin.y),\n          ];\n\n          // We only drag in one direction if shift is pressed\n          const lockDirection = event.shiftKey;\n\n          dragSelectedElements(\n            pointerDownState,\n            selectedElements,\n            dragX,\n            dragY,\n            lockDirection,\n            dragDistanceX,\n            dragDistanceY,\n            this.state,\n          );\n          this.maybeSuggestBindingForAll(selectedElements);\n\n          // We duplicate the selected element if alt is pressed on pointer move\n          if (event.altKey && !pointerDownState.hit.hasBeenDuplicated) {\n            // Move the currently selected elements to the top of the z index stack, and\n            // put the duplicates where the selected elements used to be.\n            // (the origin point where the dragging started)\n\n            pointerDownState.hit.hasBeenDuplicated = true;\n\n            const nextElements = [];\n            const elementsToAppend = [];\n            const groupIdMap = new Map();\n            const oldIdToDuplicatedId = new Map();\n            const hitElement = pointerDownState.hit.element;\n            const elements = this.scene.getElementsIncludingDeleted();\n            const selectedElementIds: Array<ExcalidrawElement[\"id\"]> =\n              getSelectedElements(elements, this.state, true).map(\n                (element) => element.id,\n              );\n\n            for (const element of elements) {\n              if (\n                selectedElementIds.includes(element.id) ||\n                // case: the state.selectedElementIds might not have been\n                // updated yet by the time this mousemove event is fired\n                (element.id === hitElement?.id &&\n                  pointerDownState.hit.wasAddedToSelection)\n              ) {\n                const duplicatedElement = duplicateElement(\n                  this.state.editingGroupId,\n                  groupIdMap,\n                  element,\n                );\n                const [originDragX, originDragY] = getGridPoint(\n                  pointerDownState.origin.x - pointerDownState.drag.offset.x,\n                  pointerDownState.origin.y - pointerDownState.drag.offset.y,\n                  this.state.gridSize,\n                );\n                mutateElement(duplicatedElement, {\n                  x: duplicatedElement.x + (originDragX - dragX),\n                  y: duplicatedElement.y + (originDragY - dragY),\n                });\n                nextElements.push(duplicatedElement);\n                elementsToAppend.push(element);\n                oldIdToDuplicatedId.set(element.id, duplicatedElement.id);\n              } else {\n                nextElements.push(element);\n              }\n            }\n            const nextSceneElements = [...nextElements, ...elementsToAppend];\n            bindTextToShapeAfterDuplication(\n              nextElements,\n              elementsToAppend,\n              oldIdToDuplicatedId,\n            );\n            fixBindingsAfterDuplication(\n              nextSceneElements,\n              elementsToAppend,\n              oldIdToDuplicatedId,\n              \"duplicatesServeAsOld\",\n            );\n            this.scene.replaceAllElements(nextSceneElements);\n          }\n          return;\n        }\n      }\n\n      // It is very important to read this.state within each move event,\n      // otherwise we would read a stale one!\n      const draggingElement = this.state.draggingElement;\n      if (!draggingElement) {\n        return;\n      }\n\n      if (draggingElement.type === \"freedraw\") {\n        const points = draggingElement.points;\n        const dx = pointerCoords.x - draggingElement.x;\n        const dy = pointerCoords.y - draggingElement.y;\n\n        const lastPoint = points.length > 0 && points[points.length - 1];\n        const discardPoint =\n          lastPoint && lastPoint[0] === dx && lastPoint[1] === dy;\n\n        if (!discardPoint) {\n          const pressures = draggingElement.simulatePressure\n            ? draggingElement.pressures\n            : [...draggingElement.pressures, event.pressure];\n\n          mutateElement(draggingElement, {\n            points: [...points, [dx, dy]],\n            pressures,\n          });\n        }\n      } else if (isLinearElement(draggingElement)) {\n        pointerDownState.drag.hasOccurred = true;\n        const points = draggingElement.points;\n        let dx = gridX - draggingElement.x;\n        let dy = gridY - draggingElement.y;\n\n        if (shouldRotateWithDiscreteAngle(event) && points.length === 2) {\n          ({ width: dx, height: dy } = getPerfectElementSize(\n            this.state.elementType,\n            dx,\n            dy,\n          ));\n        }\n\n        if (points.length === 1) {\n          mutateElement(draggingElement, { points: [...points, [dx, dy]] });\n        } else if (points.length > 1) {\n          mutateElement(draggingElement, {\n            points: [...points.slice(0, -1), [dx, dy]],\n          });\n        }\n\n        if (isBindingElement(draggingElement)) {\n          // When creating a linear element by dragging\n          this.maybeSuggestBindingsForLinearElementAtCoords(\n            draggingElement,\n            [pointerCoords],\n            this.state.startBoundElement,\n          );\n        }\n      } else {\n        pointerDownState.lastCoords.x = pointerCoords.x;\n        pointerDownState.lastCoords.y = pointerCoords.y;\n        this.maybeDragNewGenericElement(pointerDownState, event);\n      }\n\n      if (this.state.elementType === \"selection\") {\n        pointerDownState.boxSelection.hasOccurred = true;\n\n        const elements = this.scene.getElements();\n        if (\n          !event.shiftKey &&\n          // allows for box-selecting points (without shift)\n          !this.state.editingLinearElement &&\n          isSomeElementSelected(elements, this.state)\n        ) {\n          if (pointerDownState.withCmdOrCtrl && pointerDownState.hit.element) {\n            this.setState((prevState) =>\n              selectGroupsForSelectedElements(\n                {\n                  ...prevState,\n                  selectedElementIds: {\n                    [pointerDownState.hit.element!.id]: true,\n                  },\n                },\n                this.scene.getElements(),\n              ),\n            );\n          } else {\n            this.setState({\n              selectedElementIds: {},\n              selectedGroupIds: {},\n              editingGroupId: null,\n            });\n          }\n        }\n        // box-select line editor points\n        if (this.state.editingLinearElement) {\n          LinearElementEditor.handleBoxSelection(\n            event,\n            this.state,\n            this.setState.bind(this),\n          );\n          // regular box-select\n        } else {\n          const elementsWithinSelection = getElementsWithinSelection(\n            elements,\n            draggingElement,\n          );\n          this.setState((prevState) =>\n            selectGroupsForSelectedElements(\n              {\n                ...prevState,\n                selectedElementIds: {\n                  ...prevState.selectedElementIds,\n                  ...elementsWithinSelection.reduce((map, element) => {\n                    map[element.id] = true;\n                    return map;\n                  }, {} as any),\n                  ...(pointerDownState.hit.element\n                    ? {\n                        // if using ctrl/cmd, select the hitElement only if we\n                        // haven't box-selected anything else\n                        [pointerDownState.hit.element.id]:\n                          !elementsWithinSelection.length,\n                      }\n                    : null),\n                },\n                showHyperlinkPopup:\n                  elementsWithinSelection.length === 1 &&\n                  elementsWithinSelection[0].link\n                    ? \"info\"\n                    : false,\n              },\n              this.scene.getElements(),\n            ),\n          );\n        }\n      }\n    });\n  }\n\n  // Returns whether the pointer move happened over either scrollbar\n  private handlePointerMoveOverScrollbars(\n    event: PointerEvent,\n    pointerDownState: PointerDownState,\n  ): boolean {\n    if (pointerDownState.scrollbars.isOverHorizontal) {\n      const x = event.clientX;\n      const dx = x - pointerDownState.lastCoords.x;\n      this.setState({\n        scrollX: this.state.scrollX - dx / this.state.zoom.value,\n      });\n      pointerDownState.lastCoords.x = x;\n      return true;\n    }\n\n    if (pointerDownState.scrollbars.isOverVertical) {\n      const y = event.clientY;\n      const dy = y - pointerDownState.lastCoords.y;\n      this.setState({\n        scrollY: this.state.scrollY - dy / this.state.zoom.value,\n      });\n      pointerDownState.lastCoords.y = y;\n      return true;\n    }\n    return false;\n  }\n\n  private onPointerUpFromPointerDownHandler(\n    pointerDownState: PointerDownState,\n  ): (event: PointerEvent) => void {\n    return withBatchedUpdates((childEvent: PointerEvent) => {\n      const {\n        draggingElement,\n        resizingElement,\n        multiElement,\n        elementType,\n        elementLocked,\n        isResizing,\n        isRotating,\n      } = this.state;\n      this.setState({\n        isResizing: false,\n        isRotating: false,\n        resizingElement: null,\n        selectionElement: null,\n        cursorButton: \"up\",\n        // text elements are reset on finalize, and resetting on pointerup\n        // may cause issues with double taps\n        editingElement:\n          multiElement || isTextElement(this.state.editingElement)\n            ? this.state.editingElement\n            : null,\n      });\n\n      this.savePointer(childEvent.clientX, childEvent.clientY, \"up\");\n\n      // Handle end of dragging a point of a linear element, might close a loop\n      // and sets binding element\n      if (this.state.editingLinearElement) {\n        if (\n          !pointerDownState.boxSelection.hasOccurred &&\n          (pointerDownState.hit?.element?.id !==\n            this.state.editingLinearElement.elementId ||\n            !pointerDownState.hit.hasHitElementInside)\n        ) {\n          this.actionManager.executeAction(actionFinalize);\n        } else {\n          const editingLinearElement = LinearElementEditor.handlePointerUp(\n            childEvent,\n            this.state.editingLinearElement,\n            this.state,\n          );\n          if (editingLinearElement !== this.state.editingLinearElement) {\n            this.setState({\n              editingLinearElement,\n              suggestedBindings: [],\n            });\n          }\n        }\n      }\n\n      lastPointerUp = null;\n\n      if (pointerDownState.eventListeners.onMove) {\n        pointerDownState.eventListeners.onMove.flush();\n      }\n\n      window.removeEventListener(\n        EVENT.POINTER_MOVE,\n        pointerDownState.eventListeners.onMove!,\n      );\n      window.removeEventListener(\n        EVENT.POINTER_UP,\n        pointerDownState.eventListeners.onUp!,\n      );\n      window.removeEventListener(\n        EVENT.KEYDOWN,\n        pointerDownState.eventListeners.onKeyDown!,\n      );\n      window.removeEventListener(\n        EVENT.KEYUP,\n        pointerDownState.eventListeners.onKeyUp!,\n      );\n\n      if (this.state.pendingImageElement) {\n        this.setState({ pendingImageElement: null });\n      }\n\n      if (draggingElement?.type === \"freedraw\") {\n        const pointerCoords = viewportCoordsToSceneCoords(\n          childEvent,\n          this.state,\n        );\n\n        const points = draggingElement.points;\n        let dx = pointerCoords.x - draggingElement.x;\n        let dy = pointerCoords.y - draggingElement.y;\n\n        // Allows dots to avoid being flagged as infinitely small\n        if (dx === points[0][0] && dy === points[0][1]) {\n          dy += 0.0001;\n          dx += 0.0001;\n        }\n\n        const pressures = draggingElement.simulatePressure\n          ? []\n          : [...draggingElement.pressures, childEvent.pressure];\n\n        mutateElement(draggingElement, {\n          points: [...points, [dx, dy]],\n          pressures,\n          lastCommittedPoint: [dx, dy],\n        });\n\n        this.actionManager.executeAction(actionFinalize);\n\n        return;\n      }\n      if (isImageElement(draggingElement)) {\n        const imageElement = draggingElement;\n        try {\n          this.initializeImageDimensions(imageElement);\n          this.setState(\n            { selectedElementIds: { [imageElement.id]: true } },\n            () => {\n              this.actionManager.executeAction(actionFinalize);\n            },\n          );\n        } catch (error: any) {\n          console.error(error);\n          this.scene.replaceAllElements(\n            this.scene\n              .getElementsIncludingDeleted()\n              .filter((el) => el.id !== imageElement.id),\n          );\n          this.actionManager.executeAction(actionFinalize);\n        }\n        return;\n      }\n\n      if (isLinearElement(draggingElement)) {\n        if (draggingElement!.points.length > 1) {\n          this.history.resumeRecording();\n        }\n        const pointerCoords = viewportCoordsToSceneCoords(\n          childEvent,\n          this.state,\n        );\n\n        if (\n          !pointerDownState.drag.hasOccurred &&\n          draggingElement &&\n          !multiElement\n        ) {\n          mutateElement(draggingElement, {\n            points: [\n              ...draggingElement.points,\n              [\n                pointerCoords.x - draggingElement.x,\n                pointerCoords.y - draggingElement.y,\n              ],\n            ],\n          });\n          this.setState({\n            multiElement: draggingElement,\n            editingElement: this.state.draggingElement,\n          });\n        } else if (pointerDownState.drag.hasOccurred && !multiElement) {\n          if (\n            isBindingEnabled(this.state) &&\n            isBindingElement(draggingElement)\n          ) {\n            maybeBindLinearElement(\n              draggingElement,\n              this.state,\n              this.scene,\n              pointerCoords,\n            );\n          }\n          this.setState({ suggestedBindings: [], startBoundElement: null });\n          if (!elementLocked) {\n            resetCursor(this.canvas);\n            this.setState((prevState) => ({\n              draggingElement: null,\n              elementType: \"selection\",\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                [this.state.draggingElement!.id]: true,\n              },\n            }));\n          } else {\n            this.setState((prevState) => ({\n              draggingElement: null,\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                [this.state.draggingElement!.id]: true,\n              },\n            }));\n          }\n        }\n        return;\n      }\n\n      if (\n        elementType !== \"selection\" &&\n        draggingElement &&\n        isInvisiblySmallElement(draggingElement)\n      ) {\n        // remove invisible element which was added in onPointerDown\n        this.scene.replaceAllElements(\n          this.scene.getElementsIncludingDeleted().slice(0, -1),\n        );\n        this.setState({\n          draggingElement: null,\n        });\n        return;\n      }\n\n      if (draggingElement) {\n        mutateElement(\n          draggingElement,\n          getNormalizedDimensions(draggingElement),\n        );\n      }\n\n      if (resizingElement) {\n        this.history.resumeRecording();\n      }\n\n      if (resizingElement && isInvisiblySmallElement(resizingElement)) {\n        this.scene.replaceAllElements(\n          this.scene\n            .getElementsIncludingDeleted()\n            .filter((el) => el.id !== resizingElement.id),\n        );\n      }\n\n      // Code below handles selection when element(s) weren't\n      // drag or added to selection on pointer down phase.\n      const hitElement = pointerDownState.hit.element;\n      if (isEraserActive(this.state)) {\n        this.eraseElements(pointerDownState);\n        return;\n      }\n\n      if (\n        hitElement &&\n        !pointerDownState.drag.hasOccurred &&\n        !pointerDownState.hit.wasAddedToSelection &&\n        // if we're editing a line, pointerup shouldn't switch selection if\n        // box selected\n        (!this.state.editingLinearElement ||\n          !pointerDownState.boxSelection.hasOccurred)\n      ) {\n        // when inside line editor, shift selects points instead\n        if (childEvent.shiftKey && !this.state.editingLinearElement) {\n          if (this.state.selectedElementIds[hitElement.id]) {\n            if (isSelectedViaGroup(this.state, hitElement)) {\n              // We want to unselect all groups hitElement is part of\n              // as well as all elements that are part of the groups\n              // hitElement is part of\n              const idsOfSelectedElementsThatAreInGroups = hitElement.groupIds\n                .flatMap((groupId) =>\n                  getElementsInGroup(this.scene.getElements(), groupId),\n                )\n                .map((element) => ({ [element.id]: false }))\n                .reduce((prevId, acc) => ({ ...prevId, ...acc }), {});\n\n              this.setState((_prevState) => ({\n                selectedGroupIds: {\n                  ..._prevState.selectedElementIds,\n                  ...hitElement.groupIds\n                    .map((gId) => ({ [gId]: false }))\n                    .reduce((prev, acc) => ({ ...prev, ...acc }), {}),\n                },\n                selectedElementIds: {\n                  ..._prevState.selectedElementIds,\n                  ...idsOfSelectedElementsThatAreInGroups,\n                },\n              }));\n            } else {\n              // remove element from selection while\n              // keeping prev elements selected\n              this.setState((prevState) =>\n                selectGroupsForSelectedElements(\n                  {\n                    ...prevState,\n                    selectedElementIds: {\n                      ...prevState.selectedElementIds,\n                      [hitElement!.id]: false,\n                    },\n                  },\n                  this.scene.getElements(),\n                ),\n              );\n            }\n          } else {\n            // add element to selection while\n            // keeping prev elements selected\n\n            this.setState((_prevState) => ({\n              selectedElementIds: {\n                ..._prevState.selectedElementIds,\n                [hitElement!.id]: true,\n              },\n            }));\n          }\n        } else {\n          this.setState((prevState) => ({\n            ...selectGroupsForSelectedElements(\n              {\n                ...prevState,\n                selectedElementIds: { [hitElement.id]: true },\n              },\n              this.scene.getElements(),\n            ),\n          }));\n        }\n      }\n\n      if (\n        !this.state.editingLinearElement &&\n        !pointerDownState.drag.hasOccurred &&\n        !this.state.isResizing &&\n        ((hitElement &&\n          isHittingElementBoundingBoxWithoutHittingElement(\n            hitElement,\n            this.state,\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          )) ||\n          (!hitElement &&\n            pointerDownState.hit.hasHitCommonBoundingBoxOfSelectedElements))\n      ) {\n        // Deselect selected elements\n        this.setState({\n          selectedElementIds: {},\n          selectedGroupIds: {},\n          editingGroupId: null,\n        });\n\n        return;\n      }\n\n      if (!elementLocked && elementType !== \"freedraw\" && draggingElement) {\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [draggingElement.id]: true,\n          },\n        }));\n      }\n\n      if (\n        elementType !== \"selection\" ||\n        isSomeElementSelected(this.scene.getElements(), this.state)\n      ) {\n        this.history.resumeRecording();\n      }\n\n      if (pointerDownState.drag.hasOccurred || isResizing || isRotating) {\n        (isBindingEnabled(this.state)\n          ? bindOrUnbindSelectedElements\n          : unbindLinearElements)(\n          getSelectedElements(this.scene.getElements(), this.state),\n        );\n      }\n\n      if (!elementLocked && elementType !== \"freedraw\") {\n        resetCursor(this.canvas);\n        this.setState({\n          draggingElement: null,\n          suggestedBindings: [],\n          elementType: \"selection\",\n        });\n      } else {\n        this.setState({\n          draggingElement: null,\n          suggestedBindings: [],\n        });\n      }\n    });\n  }\n\n  private eraseElements = (pointerDownState: PointerDownState) => {\n    const hitElement = pointerDownState.hit.element;\n    const elements = this.scene.getElements().map((ele) => {\n      if (pointerDownState.elementIdsToErase[ele.id]) {\n        return newElementWith(ele, { isDeleted: true });\n      } else if (hitElement && ele.id === hitElement.id) {\n        return newElementWith(ele, { isDeleted: true });\n      } else if (\n        isBoundToContainer(ele) &&\n        (pointerDownState.elementIdsToErase[ele.containerId] ||\n          (hitElement && ele.containerId === hitElement.id))\n      ) {\n        return newElementWith(ele, { isDeleted: true });\n      }\n      return ele;\n    });\n\n    this.history.resumeRecording();\n    this.scene.replaceAllElements(elements);\n  };\n\n  private initializeImage = async ({\n    imageFile,\n    imageElement: _imageElement,\n    showCursorImagePreview = false,\n  }: {\n    imageFile: File;\n    imageElement: ExcalidrawImageElement;\n    showCursorImagePreview?: boolean;\n  }) => {\n    // at this point this should be guaranteed image file, but we do this check\n    // to satisfy TS down the line\n    if (!isSupportedImageFile(imageFile)) {\n      throw new Error(t(\"errors.unsupportedFileType\"));\n    }\n    const mimeType = imageFile.type;\n\n    setCursor(this.canvas, \"wait\");\n\n    if (mimeType === MIME_TYPES.svg) {\n      try {\n        imageFile = SVGStringToFile(\n          await normalizeSVG(await imageFile.text()),\n          imageFile.name,\n        );\n      } catch (error: any) {\n        console.warn(error);\n        throw new Error(t(\"errors.svgImageInsertError\"));\n      }\n    }\n\n    // generate image id (by default the file digest) before any\n    // resizing/compression takes place to keep it more portable\n    const fileId = await ((this.props.generateIdForFile?.(\n      imageFile,\n    ) as Promise<FileId>) || generateIdFromFile(imageFile));\n\n    if (!fileId) {\n      console.warn(\n        \"Couldn't generate file id or the supplied `generateIdForFile` didn't resolve to one.\",\n      );\n      throw new Error(t(\"errors.imageInsertError\"));\n    }\n\n    const existingFileData = this.files[fileId];\n    if (!existingFileData?.dataURL) {\n      try {\n        imageFile = await resizeImageFile(imageFile, {\n          maxWidthOrHeight: DEFAULT_MAX_IMAGE_WIDTH_OR_HEIGHT,\n        });\n      } catch (error: any) {\n        console.error(\"error trying to resing image file on insertion\", error);\n      }\n\n      if (imageFile.size > MAX_ALLOWED_FILE_BYTES) {\n        throw new Error(\n          t(\"errors.fileTooBig\", {\n            maxSize: `${Math.trunc(MAX_ALLOWED_FILE_BYTES / 1024 / 1024)}MB`,\n          }),\n        );\n      }\n    }\n\n    if (showCursorImagePreview) {\n      const dataURL = this.files[fileId]?.dataURL;\n      // optimization so that we don't unnecessarily resize the original\n      // full-size file for cursor preview\n      // (it's much faster to convert the resized dataURL to File)\n      const resizedFile = dataURL && dataURLToFile(dataURL);\n\n      this.setImagePreviewCursor(resizedFile || imageFile);\n    }\n\n    const dataURL =\n      this.files[fileId]?.dataURL || (await getDataURL(imageFile));\n\n    const imageElement = mutateElement(\n      _imageElement,\n      {\n        fileId,\n      },\n      false,\n    ) as NonDeleted<InitializedExcalidrawImageElement>;\n\n    return new Promise<NonDeleted<InitializedExcalidrawImageElement>>(\n      async (resolve, reject) => {\n        try {\n          this.files = {\n            ...this.files,\n            [fileId]: {\n              mimeType,\n              id: fileId,\n              dataURL,\n              created: Date.now(),\n            },\n          };\n          const cachedImageData = this.imageCache.get(fileId);\n          if (!cachedImageData) {\n            this.addNewImagesToImageCache();\n            await this.updateImageCache([imageElement]);\n          }\n          if (cachedImageData?.image instanceof Promise) {\n            await cachedImageData.image;\n          }\n          if (\n            this.state.pendingImageElement?.id !== imageElement.id &&\n            this.state.draggingElement?.id !== imageElement.id\n          ) {\n            this.initializeImageDimensions(imageElement, true);\n          }\n          resolve(imageElement);\n        } catch (error: any) {\n          console.error(error);\n          reject(new Error(t(\"errors.imageInsertError\")));\n        } finally {\n          if (!showCursorImagePreview) {\n            resetCursor(this.canvas);\n          }\n        }\n      },\n    );\n  };\n\n  /**\n   * inserts image into elements array and rerenders\n   */\n  private insertImageElement = async (\n    imageElement: ExcalidrawImageElement,\n    imageFile: File,\n    showCursorImagePreview?: boolean,\n  ) => {\n    this.scene.replaceAllElements([\n      ...this.scene.getElementsIncludingDeleted(),\n      imageElement,\n    ]);\n\n    try {\n      await this.initializeImage({\n        imageFile,\n        imageElement,\n        showCursorImagePreview,\n      });\n    } catch (error: any) {\n      mutateElement(imageElement, {\n        isDeleted: true,\n      });\n      this.actionManager.executeAction(actionFinalize);\n      this.setState({\n        errorMessage: error.message || t(\"errors.imageInsertError\"),\n      });\n    }\n  };\n\n  private setImagePreviewCursor = async (imageFile: File) => {\n    // mustn't be larger than 128 px\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Basic_User_Interface/Using_URL_values_for_the_cursor_property\n    const cursorImageSizePx = 96;\n\n    const imagePreview = await resizeImageFile(imageFile, {\n      maxWidthOrHeight: cursorImageSizePx,\n    });\n\n    let previewDataURL = await getDataURL(imagePreview);\n\n    // SVG cannot be resized via `resizeImageFile` so we resize by rendering to\n    // a small canvas\n    if (imageFile.type === MIME_TYPES.svg) {\n      const img = await loadHTMLImageElement(previewDataURL);\n\n      let height = Math.min(img.height, cursorImageSizePx);\n      let width = height * (img.width / img.height);\n\n      if (width > cursorImageSizePx) {\n        width = cursorImageSizePx;\n        height = width * (img.height / img.width);\n      }\n\n      const canvas = document.createElement(\"canvas\");\n      canvas.height = height;\n      canvas.width = width;\n      const context = canvas.getContext(\"2d\")!;\n\n      context.drawImage(img, 0, 0, width, height);\n\n      previewDataURL = canvas.toDataURL(MIME_TYPES.svg) as DataURL;\n    }\n\n    if (this.state.pendingImageElement) {\n      setCursor(this.canvas, `url(${previewDataURL}) 4 4, auto`);\n    }\n  };\n\n  private onImageAction = async (\n    { insertOnCanvasDirectly } = { insertOnCanvasDirectly: false },\n  ) => {\n    try {\n      const clientX = this.state.width / 2 + this.state.offsetLeft;\n      const clientY = this.state.height / 2 + this.state.offsetTop;\n\n      const { x, y } = viewportCoordsToSceneCoords(\n        { clientX, clientY },\n        this.state,\n      );\n\n      const imageFile = await fileOpen({\n        description: \"Image\",\n        extensions: [\"jpg\", \"png\", \"svg\", \"gif\"],\n      });\n\n      const imageElement = this.createImageElement({\n        sceneX: x,\n        sceneY: y,\n      });\n\n      if (insertOnCanvasDirectly) {\n        this.insertImageElement(imageElement, imageFile);\n        this.initializeImageDimensions(imageElement);\n        this.setState(\n          {\n            selectedElementIds: { [imageElement.id]: true },\n          },\n          () => {\n            this.actionManager.executeAction(actionFinalize);\n          },\n        );\n      } else {\n        this.setState(\n          {\n            pendingImageElement: imageElement,\n          },\n          () => {\n            this.insertImageElement(\n              imageElement,\n              imageFile,\n              /* showCursorImagePreview */ true,\n            );\n          },\n        );\n      }\n    } catch (error: any) {\n      if (error.name !== \"AbortError\") {\n        console.error(error);\n      } else {\n        console.warn(error);\n      }\n      this.setState(\n        {\n          pendingImageElement: null,\n          editingElement: null,\n          elementType: \"selection\",\n        },\n        () => {\n          this.actionManager.executeAction(actionFinalize);\n        },\n      );\n    }\n  };\n\n  private initializeImageDimensions = (\n    imageElement: ExcalidrawImageElement,\n    forceNaturalSize = false,\n  ) => {\n    const image =\n      isInitializedImageElement(imageElement) &&\n      this.imageCache.get(imageElement.fileId)?.image;\n\n    if (!image || image instanceof Promise) {\n      if (\n        imageElement.width < DRAGGING_THRESHOLD / this.state.zoom.value &&\n        imageElement.height < DRAGGING_THRESHOLD / this.state.zoom.value\n      ) {\n        const placeholderSize = 100 / this.state.zoom.value;\n        mutateElement(imageElement, {\n          x: imageElement.x - placeholderSize / 2,\n          y: imageElement.y - placeholderSize / 2,\n          width: placeholderSize,\n          height: placeholderSize,\n        });\n      }\n\n      return;\n    }\n\n    if (\n      forceNaturalSize ||\n      // if user-created bounding box is below threshold, assume the\n      // intention was to click instead of drag, and use the image's\n      // intrinsic size\n      (imageElement.width < DRAGGING_THRESHOLD / this.state.zoom.value &&\n        imageElement.height < DRAGGING_THRESHOLD / this.state.zoom.value)\n    ) {\n      const minHeight = Math.max(this.state.height - 120, 160);\n      // max 65% of canvas height, clamped to <300px, vh - 120px>\n      const maxHeight = Math.min(\n        minHeight,\n        Math.floor(this.state.height * 0.5) / this.state.zoom.value,\n      );\n\n      const height = Math.min(image.naturalHeight, maxHeight);\n      const width = height * (image.naturalWidth / image.naturalHeight);\n\n      // add current imageElement width/height to account for previous centering\n      // of the placeholder image\n      const x = imageElement.x + imageElement.width / 2 - width / 2;\n      const y = imageElement.y + imageElement.height / 2 - height / 2;\n\n      mutateElement(imageElement, { x, y, width, height });\n    }\n  };\n\n  /** updates image cache, refreshing updated elements and/or setting status\n      to error for images that fail during <img> element creation */\n  private updateImageCache = async (\n    elements: readonly InitializedExcalidrawImageElement[],\n    files = this.files,\n  ) => {\n    const { updatedFiles, erroredFiles } = await _updateImageCache({\n      imageCache: this.imageCache,\n      fileIds: elements.map((element) => element.fileId),\n      files,\n    });\n    if (updatedFiles.size || erroredFiles.size) {\n      for (const element of elements) {\n        if (updatedFiles.has(element.fileId)) {\n          invalidateShapeForElement(element);\n        }\n      }\n    }\n    if (erroredFiles.size) {\n      this.scene.replaceAllElements(\n        this.scene.getElementsIncludingDeleted().map((element) => {\n          if (\n            isInitializedImageElement(element) &&\n            erroredFiles.has(element.fileId)\n          ) {\n            return newElementWith(element, {\n              status: \"error\",\n            });\n          }\n          return element;\n        }),\n      );\n    }\n\n    return { updatedFiles, erroredFiles };\n  };\n\n  /** adds new images to imageCache and re-renders if needed */\n  private addNewImagesToImageCache = async (\n    imageElements: InitializedExcalidrawImageElement[] = getInitializedImageElements(\n      this.scene.getElements(),\n    ),\n    files: BinaryFiles = this.files,\n  ) => {\n    const uncachedImageElements = imageElements.filter(\n      (element) => !element.isDeleted && !this.imageCache.has(element.fileId),\n    );\n\n    if (uncachedImageElements.length) {\n      const { updatedFiles } = await this.updateImageCache(\n        uncachedImageElements,\n        files,\n      );\n      if (updatedFiles.size) {\n        this.scene.informMutation();\n      }\n    }\n  };\n\n  /** generally you should use `addNewImagesToImageCache()` directly if you need\n   *  to render new images. This is just a failsafe  */\n  private scheduleImageRefresh = throttle(() => {\n    this.addNewImagesToImageCache();\n  }, IMAGE_RENDER_TIMEOUT);\n\n  private updateBindingEnabledOnPointerMove = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    const shouldEnableBinding = shouldEnableBindingForPointerEvent(event);\n    if (this.state.isBindingEnabled !== shouldEnableBinding) {\n      this.setState({ isBindingEnabled: shouldEnableBinding });\n    }\n  };\n\n  private maybeSuggestBindingAtCursor = (pointerCoords: {\n    x: number;\n    y: number;\n  }): void => {\n    const hoveredBindableElement = getHoveredElementForBinding(\n      pointerCoords,\n      this.scene,\n    );\n    this.setState({\n      suggestedBindings:\n        hoveredBindableElement != null ? [hoveredBindableElement] : [],\n    });\n  };\n\n  private maybeSuggestBindingsForLinearElementAtCoords = (\n    linearElement: NonDeleted<ExcalidrawLinearElement>,\n    /** scene coords */\n    pointerCoords: {\n      x: number;\n      y: number;\n    }[],\n    // During line creation the start binding hasn't been written yet\n    // into `linearElement`\n    oppositeBindingBoundElement?: ExcalidrawBindableElement | null,\n  ): void => {\n    if (!pointerCoords.length) {\n      return;\n    }\n\n    const suggestedBindings = pointerCoords.reduce(\n      (acc: NonDeleted<ExcalidrawBindableElement>[], coords) => {\n        const hoveredBindableElement = getHoveredElementForBinding(\n          coords,\n          this.scene,\n        );\n        if (\n          hoveredBindableElement != null &&\n          !isLinearElementSimpleAndAlreadyBound(\n            linearElement,\n            oppositeBindingBoundElement?.id,\n            hoveredBindableElement,\n          )\n        ) {\n          acc.push(hoveredBindableElement);\n        }\n        return acc;\n      },\n      [],\n    );\n\n    this.setState({ suggestedBindings });\n  };\n\n  private maybeSuggestBindingForAll(\n    selectedElements: NonDeleted<ExcalidrawElement>[],\n  ): void {\n    const suggestedBindings = getEligibleElementsForBinding(selectedElements);\n    this.setState({ suggestedBindings });\n  }\n\n  private clearSelection(hitElement: ExcalidrawElement | null): void {\n    this.setState((prevState) => ({\n      selectedElementIds: {},\n      selectedGroupIds: {},\n      // Continue editing the same group if the user selected a different\n      // element from it\n      editingGroupId:\n        prevState.editingGroupId &&\n        hitElement != null &&\n        isElementInGroup(hitElement, prevState.editingGroupId)\n          ? prevState.editingGroupId\n          : null,\n    }));\n    this.setState({\n      selectedElementIds: {},\n      previousSelectedElementIds: this.state.selectedElementIds,\n    });\n  }\n\n  private handleCanvasRef = (canvas: HTMLCanvasElement) => {\n    // canvas is null when unmounting\n    if (canvas !== null) {\n      this.canvas = canvas;\n      this.rc = rough.canvas(this.canvas);\n\n      this.canvas.addEventListener(EVENT.WHEEL, this.handleWheel, {\n        passive: false,\n      });\n      this.canvas.addEventListener(EVENT.TOUCH_START, this.onTapStart);\n      this.canvas.addEventListener(EVENT.TOUCH_END, this.onTapEnd);\n    } else {\n      this.canvas?.removeEventListener(EVENT.WHEEL, this.handleWheel);\n      this.canvas?.removeEventListener(EVENT.TOUCH_START, this.onTapStart);\n      this.canvas?.removeEventListener(EVENT.TOUCH_END, this.onTapEnd);\n    }\n  };\n\n  private handleAppOnDrop = async (event: React.DragEvent<HTMLDivElement>) => {\n    try {\n      const file = event.dataTransfer.files.item(0);\n\n      if (isSupportedImageFile(file)) {\n        // first attempt to decode scene from the image if it's embedded\n        // ---------------------------------------------------------------------\n\n        if (file?.type === MIME_TYPES.png || file?.type === MIME_TYPES.svg) {\n          try {\n            if (nativeFileSystemSupported) {\n              try {\n                // This will only work as of Chrome 86,\n                // but can be safely ignored on older releases.\n                const item = event.dataTransfer.items[0];\n                (file as any).handle = await (\n                  item as any\n                ).getAsFileSystemHandle();\n              } catch (error: any) {\n                console.warn(error.name, error.message);\n              }\n            }\n\n            const scene = await loadFromBlob(\n              file,\n              this.state,\n              this.scene.getElementsIncludingDeleted(),\n            );\n            this.syncActionResult({\n              ...scene,\n              appState: {\n                ...(scene.appState || this.state),\n                isLoading: false,\n              },\n              replaceFiles: true,\n              commitToHistory: true,\n            });\n            return;\n          } catch (error: any) {\n            if (error.name !== \"EncodingError\") {\n              throw error;\n            }\n          }\n        }\n\n        // if no scene is embedded or we fail for whatever reason, fall back\n        // to importing as regular image\n        // ---------------------------------------------------------------------\n\n        const { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n          event,\n          this.state,\n        );\n\n        const imageElement = this.createImageElement({ sceneX, sceneY });\n        this.insertImageElement(imageElement, file);\n        this.initializeImageDimensions(imageElement);\n        this.setState({ selectedElementIds: { [imageElement.id]: true } });\n\n        return;\n      }\n    } catch (error: any) {\n      return this.setState({\n        isLoading: false,\n        errorMessage: error.message,\n      });\n    }\n\n    const libraryShapes = event.dataTransfer.getData(MIME_TYPES.excalidrawlib);\n    if (libraryShapes !== \"\") {\n      this.addElementsFromPasteOrLibrary({\n        elements: JSON.parse(libraryShapes),\n        position: event,\n        files: null,\n      });\n      return;\n    }\n\n    const file = event.dataTransfer?.files.item(0);\n    if (\n      file?.type === MIME_TYPES.excalidrawlib ||\n      file?.name?.endsWith(\".excalidrawlib\")\n    ) {\n      this.library\n        .importLibrary(file)\n        .then(() => {\n          // Close and then open to get the libraries updated\n          this.setState({ isLibraryOpen: false });\n          this.setState({ isLibraryOpen: true });\n        })\n        .catch((error) =>\n          this.setState({ isLoading: false, errorMessage: error.message }),\n        );\n      // default: assume an Excalidraw file regardless of extension/MimeType\n    } else if (file) {\n      this.setState({ isLoading: true });\n      if (nativeFileSystemSupported) {\n        try {\n          // This will only work as of Chrome 86,\n          // but can be safely ignored on older releases.\n          const item = event.dataTransfer.items[0];\n          (file as any).handle = await (item as any).getAsFileSystemHandle();\n        } catch (error: any) {\n          console.warn(error.name, error.message);\n        }\n      }\n      await this.loadFileToCanvas(file);\n    }\n  };\n\n  loadFileToCanvas = (file: Blob) => {\n    loadFromBlob(file, this.state, this.scene.getElementsIncludingDeleted())\n      .then((scene) => {\n        this.syncActionResult({\n          ...scene,\n          appState: {\n            ...(scene.appState || this.state),\n            isLoading: false,\n          },\n          replaceFiles: true,\n          commitToHistory: true,\n        });\n      })\n      .catch((error) => {\n        this.setState({ isLoading: false, errorMessage: error.message });\n      });\n  };\n\n  private handleCanvasContextMenu = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    event.preventDefault();\n\n    if (\n      (event.nativeEvent.pointerType === \"touch\" ||\n        (event.nativeEvent.pointerType === \"pen\" &&\n          // always allow if user uses a pen secondary button\n          event.button !== POINTER_BUTTON.SECONDARY)) &&\n      this.state.elementType !== \"selection\"\n    ) {\n      return;\n    }\n\n    const { x, y } = viewportCoordsToSceneCoords(event, this.state);\n    const element = this.getElementAtPosition(x, y, { preferSelected: true });\n\n    const type = element ? \"element\" : \"canvas\";\n\n    const container = this.excalidrawContainerRef.current!;\n    const { top: offsetTop, left: offsetLeft } =\n      container.getBoundingClientRect();\n    const left = event.clientX - offsetLeft;\n    const top = event.clientY - offsetTop;\n\n    if (element && !this.state.selectedElementIds[element.id]) {\n      this.setState({ selectedElementIds: { [element.id]: true } }, () => {\n        this._openContextMenu({ top, left }, type);\n      });\n    } else {\n      this._openContextMenu({ top, left }, type);\n    }\n  };\n\n  private maybeDragNewGenericElement = (\n    pointerDownState: PointerDownState,\n    event: MouseEvent | KeyboardEvent,\n  ): void => {\n    const draggingElement = this.state.draggingElement;\n    const pointerCoords = pointerDownState.lastCoords;\n    if (!draggingElement) {\n      return;\n    }\n    if (draggingElement.type === \"selection\") {\n      dragNewElement(\n        draggingElement,\n        this.state.elementType,\n        pointerDownState.origin.x,\n        pointerDownState.origin.y,\n        pointerCoords.x,\n        pointerCoords.y,\n        distance(pointerDownState.origin.x, pointerCoords.x),\n        distance(pointerDownState.origin.y, pointerCoords.y),\n        shouldMaintainAspectRatio(event),\n        shouldResizeFromCenter(event),\n      );\n    } else {\n      const [gridX, gridY] = getGridPoint(\n        pointerCoords.x,\n        pointerCoords.y,\n        this.state.gridSize,\n      );\n\n      const image =\n        isInitializedImageElement(draggingElement) &&\n        this.imageCache.get(draggingElement.fileId)?.image;\n      const aspectRatio =\n        image && !(image instanceof Promise)\n          ? image.width / image.height\n          : null;\n\n      dragNewElement(\n        draggingElement,\n        this.state.elementType,\n        pointerDownState.originInGrid.x,\n        pointerDownState.originInGrid.y,\n        gridX,\n        gridY,\n        distance(pointerDownState.originInGrid.x, gridX),\n        distance(pointerDownState.originInGrid.y, gridY),\n        isImageElement(draggingElement)\n          ? !shouldMaintainAspectRatio(event)\n          : shouldMaintainAspectRatio(event),\n        shouldResizeFromCenter(event),\n        aspectRatio,\n      );\n\n      this.maybeSuggestBindingForAll([draggingElement]);\n    }\n  };\n\n  private maybeHandleResize = (\n    pointerDownState: PointerDownState,\n    event: MouseEvent | KeyboardEvent,\n  ): boolean => {\n    const selectedElements = getSelectedElements(\n      this.scene.getElements(),\n      this.state,\n    );\n    const transformHandleType = pointerDownState.resize.handleType;\n    this.setState({\n      // TODO: rename this state field to \"isScaling\" to distinguish\n      // it from the generic \"isResizing\" which includes scaling and\n      // rotating\n      isResizing: transformHandleType && transformHandleType !== \"rotation\",\n      isRotating: transformHandleType === \"rotation\",\n    });\n    const pointerCoords = pointerDownState.lastCoords;\n    const [resizeX, resizeY] = getGridPoint(\n      pointerCoords.x - pointerDownState.resize.offset.x,\n      pointerCoords.y - pointerDownState.resize.offset.y,\n      this.state.gridSize,\n    );\n    if (\n      transformElements(\n        pointerDownState,\n        transformHandleType,\n        selectedElements,\n        pointerDownState.resize.arrowDirection,\n        shouldRotateWithDiscreteAngle(event),\n        shouldResizeFromCenter(event),\n        selectedElements.length === 1 && isImageElement(selectedElements[0])\n          ? !shouldMaintainAspectRatio(event)\n          : shouldMaintainAspectRatio(event),\n        resizeX,\n        resizeY,\n        pointerDownState.resize.center.x,\n        pointerDownState.resize.center.y,\n      )\n    ) {\n      this.maybeSuggestBindingForAll(selectedElements);\n      return true;\n    }\n    return false;\n  };\n\n  /** @private use this.handleCanvasContextMenu */\n  private _openContextMenu = (\n    {\n      left,\n      top,\n    }: {\n      left: number;\n      top: number;\n    },\n    type: \"canvas\" | \"element\",\n  ) => {\n    if (this.state.showHyperlinkPopup) {\n      this.setState({ showHyperlinkPopup: false });\n    }\n    this.contextMenuOpen = true;\n    const maybeGroupAction = actionGroup.contextItemPredicate!(\n      this.actionManager.getElementsIncludingDeleted(),\n      this.actionManager.getAppState(),\n    );\n\n    const maybeUngroupAction = actionUngroup.contextItemPredicate!(\n      this.actionManager.getElementsIncludingDeleted(),\n      this.actionManager.getAppState(),\n    );\n\n    const maybeFlipHorizontal = actionFlipHorizontal.contextItemPredicate!(\n      this.actionManager.getElementsIncludingDeleted(),\n      this.actionManager.getAppState(),\n    );\n\n    const maybeFlipVertical = actionFlipVertical.contextItemPredicate!(\n      this.actionManager.getElementsIncludingDeleted(),\n      this.actionManager.getAppState(),\n    );\n\n    const separator = \"separator\";\n\n    const elements = this.scene.getElements();\n\n    const options: ContextMenuOption[] = [];\n    if (probablySupportsClipboardBlob && elements.length > 0) {\n      options.push(actionCopyAsPng);\n    }\n\n    if (probablySupportsClipboardWriteText && elements.length > 0) {\n      options.push(actionCopyAsSvg);\n    }\n    if (type === \"canvas\") {\n      const viewModeOptions = [\n        ...options,\n        typeof this.props.gridModeEnabled === \"undefined\" &&\n          actionToggleGridMode,\n        typeof this.props.zenModeEnabled === \"undefined\" && actionToggleZenMode,\n        typeof this.props.viewModeEnabled === \"undefined\" &&\n          actionToggleViewMode,\n        actionToggleStats,\n      ];\n\n      if (this.state.viewModeEnabled) {\n        ContextMenu.push({\n          options: viewModeOptions,\n          top,\n          left,\n          actionManager: this.actionManager,\n          appState: this.state,\n          container: this.excalidrawContainerRef.current!,\n          elements,\n        });\n      } else {\n        ContextMenu.push({\n          options: [\n            this.isMobile &&\n              navigator.clipboard && {\n                name: \"paste\",\n                perform: (elements, appStates) => {\n                  this.pasteFromClipboard(null);\n                  return {\n                    commitToHistory: false,\n                  };\n                },\n                contextItemLabel: \"labels.paste\",\n              },\n            this.isMobile && navigator.clipboard && separator,\n            probablySupportsClipboardBlob &&\n              elements.length > 0 &&\n              actionCopyAsPng,\n            probablySupportsClipboardWriteText &&\n              elements.length > 0 &&\n              actionCopyAsSvg,\n            ((probablySupportsClipboardBlob && elements.length > 0) ||\n              (probablySupportsClipboardWriteText && elements.length > 0)) &&\n              separator,\n            actionSelectAll,\n            separator,\n            typeof this.props.gridModeEnabled === \"undefined\" &&\n              actionToggleGridMode,\n            typeof this.props.zenModeEnabled === \"undefined\" &&\n              actionToggleZenMode,\n            typeof this.props.viewModeEnabled === \"undefined\" &&\n              actionToggleViewMode,\n            actionToggleStats,\n          ],\n          top,\n          left,\n          actionManager: this.actionManager,\n          appState: this.state,\n          container: this.excalidrawContainerRef.current!,\n          elements,\n        });\n      }\n    } else if (type === \"element\") {\n      const elementsWithUnbindedText = getSelectedElements(\n        elements,\n        this.state,\n      ).some((element) => !hasBoundTextElement(element));\n      if (this.state.viewModeEnabled) {\n        ContextMenu.push({\n          options: [navigator.clipboard && actionCopy, ...options],\n          top,\n          left,\n          actionManager: this.actionManager,\n          appState: this.state,\n          container: this.excalidrawContainerRef.current!,\n          elements,\n        });\n      } else {\n        ContextMenu.push({\n          options: [\n            this.isMobile && actionCut,\n            this.isMobile && navigator.clipboard && actionCopy,\n            this.isMobile &&\n              navigator.clipboard && {\n                name: \"paste\",\n                perform: (elements, appStates) => {\n                  this.pasteFromClipboard(null);\n                  return {\n                    commitToHistory: false,\n                  };\n                },\n                contextItemLabel: \"labels.paste\",\n              },\n            this.isMobile && separator,\n            ...options,\n            separator,\n            actionCopyStyles,\n            actionPasteStyles,\n            separator,\n            maybeGroupAction && actionGroup,\n            !elementsWithUnbindedText && actionUnbindText,\n            maybeUngroupAction && actionUngroup,\n            (maybeGroupAction || maybeUngroupAction) && separator,\n            actionAddToLibrary,\n            separator,\n            actionSendBackward,\n            actionBringForward,\n            actionSendToBack,\n            actionBringToFront,\n            separator,\n            maybeFlipHorizontal && actionFlipHorizontal,\n            maybeFlipVertical && actionFlipVertical,\n            (maybeFlipHorizontal || maybeFlipVertical) && separator,\n            actionLink.contextItemPredicate(elements, this.state) && actionLink,\n            actionDuplicateSelection,\n            actionDeleteSelected,\n          ],\n          top,\n          left,\n          actionManager: this.actionManager,\n          appState: this.state,\n          container: this.excalidrawContainerRef.current!,\n          elements,\n        });\n      }\n    }\n  };\n\n  private handleWheel = withBatchedUpdates((event: WheelEvent) => {\n    event.preventDefault();\n\n    if (isPanning) {\n      return;\n    }\n\n    const { deltaX, deltaY } = event;\n    const { selectedElementIds, previousSelectedElementIds } = this.state;\n    // note that event.ctrlKey is necessary to handle pinch zooming\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY);\n      const MAX_STEP = 10;\n      let delta = Math.abs(deltaY);\n      if (delta > MAX_STEP) {\n        delta = MAX_STEP;\n      }\n      delta *= sign;\n      if (Object.keys(previousSelectedElementIds).length !== 0) {\n        setTimeout(() => {\n          this.setState({\n            selectedElementIds: previousSelectedElementIds,\n            previousSelectedElementIds: {},\n          });\n        }, 1000);\n      }\n\n      let newZoom = this.state.zoom.value - delta / 100;\n      // increase zoom steps the more zoomed-in we are (applies to >100% only)\n      newZoom += Math.log10(Math.max(1, this.state.zoom.value)) * -sign;\n      // round to nearest step\n      newZoom = Math.round(newZoom * ZOOM_STEP * 100) / (ZOOM_STEP * 100);\n\n      this.setState((state) => ({\n        ...getStateForZoom(\n          {\n            viewportX: cursorX,\n            viewportY: cursorY,\n            nextZoom: getNormalizedZoom(newZoom),\n          },\n          state,\n        ),\n        selectedElementIds: {},\n        previousSelectedElementIds:\n          Object.keys(selectedElementIds).length !== 0\n            ? selectedElementIds\n            : previousSelectedElementIds,\n        shouldCacheIgnoreZoom: true,\n      }));\n      this.resetShouldCacheIgnoreZoomDebounced();\n      return;\n    }\n\n    // scroll horizontally when shift pressed\n    if (event.shiftKey) {\n      this.setState(({ zoom, scrollX }) => ({\n        // on Mac, shift+wheel tends to result in deltaX\n        scrollX: scrollX - (deltaY || deltaX) / zoom.value,\n      }));\n      return;\n    }\n\n    this.setState(({ zoom, scrollX, scrollY }) => ({\n      scrollX: scrollX - deltaX / zoom.value,\n      scrollY: scrollY - deltaY / zoom.value,\n    }));\n  });\n\n  private getTextWysiwygSnappedToCenterPosition(\n    x: number,\n    y: number,\n    appState: AppState,\n    canvas: HTMLCanvasElement | null,\n    scale: number,\n  ) {\n    const elementClickedInside = getTextBindableContainerAtPosition(\n      this.scene\n        .getElementsIncludingDeleted()\n        .filter((element) => !isTextElement(element)),\n      x,\n      y,\n    );\n    if (elementClickedInside) {\n      const elementCenterX =\n        elementClickedInside.x + elementClickedInside.width / 2;\n      const elementCenterY =\n        elementClickedInside.y + elementClickedInside.height / 2;\n      const distanceToCenter = Math.hypot(\n        x - elementCenterX,\n        y - elementCenterY,\n      );\n      const isSnappedToCenter =\n        distanceToCenter < TEXT_TO_CENTER_SNAP_THRESHOLD;\n      if (isSnappedToCenter) {\n        const { x: viewportX, y: viewportY } = sceneCoordsToViewportCoords(\n          { sceneX: elementCenterX, sceneY: elementCenterY },\n          appState,\n        );\n        return { viewportX, viewportY, elementCenterX, elementCenterY };\n      }\n    }\n  }\n\n  private savePointer = (x: number, y: number, button: \"up\" | \"down\") => {\n    if (!x || !y) {\n      return;\n    }\n    const pointer = viewportCoordsToSceneCoords(\n      { clientX: x, clientY: y },\n      this.state,\n    );\n\n    if (isNaN(pointer.x) || isNaN(pointer.y)) {\n      // sometimes the pointer goes off screen\n    }\n\n    this.props.onPointerUpdate?.({\n      pointer,\n      button,\n      pointersMap: gesture.pointers,\n    });\n  };\n\n  private resetShouldCacheIgnoreZoomDebounced = debounce(() => {\n    if (!this.unmounted) {\n      this.setState({ shouldCacheIgnoreZoom: false });\n    }\n  }, 300);\n\n  private updateDOMRect = (cb?: () => void) => {\n    if (this.excalidrawContainerRef?.current) {\n      const excalidrawContainer = this.excalidrawContainerRef.current;\n      const {\n        width,\n        height,\n        left: offsetLeft,\n        top: offsetTop,\n      } = excalidrawContainer.getBoundingClientRect();\n      const {\n        width: currentWidth,\n        height: currentHeight,\n        offsetTop: currentOffsetTop,\n        offsetLeft: currentOffsetLeft,\n      } = this.state;\n\n      if (\n        width === currentWidth &&\n        height === currentHeight &&\n        offsetLeft === currentOffsetLeft &&\n        offsetTop === currentOffsetTop\n      ) {\n        if (cb) {\n          cb();\n        }\n        return;\n      }\n\n      this.setState(\n        {\n          width,\n          height,\n          offsetLeft,\n          offsetTop,\n        },\n        () => {\n          cb && cb();\n        },\n      );\n    }\n  };\n\n  public refresh = () => {\n    this.setState({ ...this.getCanvasOffsets() });\n  };\n\n  private getCanvasOffsets(): Pick<AppState, \"offsetTop\" | \"offsetLeft\"> {\n    if (this.excalidrawContainerRef?.current) {\n      const excalidrawContainer = this.excalidrawContainerRef.current;\n      const { left, top } = excalidrawContainer.getBoundingClientRect();\n      return {\n        offsetLeft: left,\n        offsetTop: top,\n      };\n    }\n    return {\n      offsetLeft: 0,\n      offsetTop: 0,\n    };\n  }\n\n  private async updateLanguage() {\n    const currentLang =\n      languages.find((lang) => lang.code === this.props.langCode) ||\n      defaultLang;\n    await setLanguage(currentLang);\n    this.setAppState({});\n  }\n}\n\n// -----------------------------------------------------------------------------\n// TEST HOOKS\n// -----------------------------------------------------------------------------\n\ndeclare global {\n  interface Window {\n    h: {\n      elements: readonly ExcalidrawElement[];\n      state: AppState;\n      setState: React.Component<any, AppState>[\"setState\"];\n      app: InstanceType<typeof App>;\n      history: History;\n    };\n  }\n}\n\nif (\n  process.env.NODE_ENV === ENV.TEST ||\n  process.env.NODE_ENV === ENV.DEVELOPMENT\n) {\n  window.h = window.h || ({} as Window[\"h\"]);\n\n  Object.defineProperties(window.h, {\n    elements: {\n      configurable: true,\n      get() {\n        return this.app.scene.getElementsIncludingDeleted();\n      },\n      set(elements: ExcalidrawElement[]) {\n        return this.app.scene.replaceAllElements(elements);\n      },\n    },\n  });\n}\nexport default App;\n","import \"./Modal.scss\";\n\nimport React, { useState, useLayoutEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport clsx from \"clsx\";\nimport { KEYS } from \"../keys\";\nimport { useExcalidrawContainer, useIsMobile } from \"./App\";\nimport { AppState } from \"../types\";\nimport { THEME } from \"../constants\";\n\nexport const Modal = (props: {\n  className?: string;\n  children: React.ReactNode;\n  maxWidth?: number;\n  onCloseRequest(): void;\n  labelledBy: string;\n  theme?: AppState[\"theme\"];\n  closeOnClickOutside?: boolean;\n}) => {\n  const { theme = THEME.LIGHT, closeOnClickOutside = true } = props;\n  const modalRoot = useBodyRoot(theme);\n\n  if (!modalRoot) {\n    return null;\n  }\n\n  const handleKeydown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.ESCAPE) {\n      event.nativeEvent.stopImmediatePropagation();\n      event.stopPropagation();\n      props.onCloseRequest();\n    }\n  };\n\n  return createPortal(\n    <div\n      className={clsx(\"Modal\", props.className)}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      onKeyDown={handleKeydown}\n      aria-labelledby={props.labelledBy}\n    >\n      <div\n        className=\"Modal__background\"\n        onClick={closeOnClickOutside ? props.onCloseRequest : undefined}\n      ></div>\n      <div\n        className=\"Modal__content\"\n        style={{ \"--max-width\": `${props.maxWidth}px` }}\n        tabIndex={0}\n      >\n        {props.children}\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nconst useBodyRoot = (theme: AppState[\"theme\"]) => {\n  const [div, setDiv] = useState<HTMLDivElement | null>(null);\n\n  const isMobile = useIsMobile();\n  const isMobileRef = useRef(isMobile);\n  isMobileRef.current = isMobile;\n\n  const { container: excalidrawContainer } = useExcalidrawContainer();\n\n  useLayoutEffect(() => {\n    if (div) {\n      div.classList.toggle(\"excalidraw--mobile\", isMobile);\n    }\n  }, [div, isMobile]);\n\n  useLayoutEffect(() => {\n    const isDarkTheme =\n      !!excalidrawContainer?.classList.contains(\"theme--dark\") ||\n      theme === \"dark\";\n    const div = document.createElement(\"div\");\n\n    div.classList.add(\"excalidraw\", \"excalidraw-modal-container\");\n    div.classList.toggle(\"excalidraw--mobile\", isMobileRef.current);\n\n    if (isDarkTheme) {\n      div.classList.add(\"theme--dark\");\n      div.classList.add(\"theme--dark-background-none\");\n    }\n    document.body.appendChild(div);\n\n    setDiv(div);\n\n    return () => {\n      document.body.removeChild(div);\n    };\n  }, [excalidrawContainer, theme]);\n\n  return div;\n};\n","import clsx from \"clsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useCallbackRefState } from \"../hooks/useCallbackRefState\";\nimport { t } from \"../i18n\";\nimport { useExcalidrawContainer, useIsMobile } from \"../components/App\";\nimport { KEYS } from \"../keys\";\nimport \"./Dialog.scss\";\nimport { back, close } from \"./icons\";\nimport { Island } from \"./Island\";\nimport { Modal } from \"./Modal\";\nimport { AppState } from \"../types\";\n\nexport interface DialogProps {\n  children: React.ReactNode;\n  className?: string;\n  small?: boolean;\n  onCloseRequest(): void;\n  title: React.ReactNode;\n  autofocus?: boolean;\n  theme?: AppState[\"theme\"];\n  closeOnClickOutside?: boolean;\n}\n\nexport const Dialog = (props: DialogProps) => {\n  const [islandNode, setIslandNode] = useCallbackRefState<HTMLDivElement>();\n  const [lastActiveElement] = useState(document.activeElement);\n  const { id } = useExcalidrawContainer();\n\n  useEffect(() => {\n    if (!islandNode) {\n      return;\n    }\n\n    const focusableElements = queryFocusableElements(islandNode);\n\n    if (focusableElements.length > 0 && props.autofocus !== false) {\n      // If there's an element other than close, focus it.\n      (focusableElements[1] || focusableElements[0]).focus();\n    }\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === KEYS.TAB) {\n        const focusableElements = queryFocusableElements(islandNode);\n        const { activeElement } = document;\n        const currentIndex = focusableElements.findIndex(\n          (element) => element === activeElement,\n        );\n\n        if (currentIndex === 0 && event.shiftKey) {\n          focusableElements[focusableElements.length - 1].focus();\n          event.preventDefault();\n        } else if (\n          currentIndex === focusableElements.length - 1 &&\n          !event.shiftKey\n        ) {\n          focusableElements[0].focus();\n          event.preventDefault();\n        }\n      }\n    };\n\n    islandNode.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => islandNode.removeEventListener(\"keydown\", handleKeyDown);\n  }, [islandNode, props.autofocus]);\n\n  const queryFocusableElements = (node: HTMLElement) => {\n    const focusableElements = node.querySelectorAll<HTMLElement>(\n      \"button, a, input, select, textarea, div[tabindex]\",\n    );\n\n    return focusableElements ? Array.from(focusableElements) : [];\n  };\n\n  const onClose = () => {\n    (lastActiveElement as HTMLElement).focus();\n    props.onCloseRequest();\n  };\n\n  return (\n    <Modal\n      className={clsx(\"Dialog\", props.className)}\n      labelledBy=\"dialog-title\"\n      maxWidth={props.small ? 550 : 800}\n      onCloseRequest={onClose}\n      theme={props.theme}\n      closeOnClickOutside={props.closeOnClickOutside}\n    >\n      <Island ref={setIslandNode}>\n        <h2 id={`${id}-dialog-title`} className=\"Dialog__title\">\n          <span className=\"Dialog__titleContent\">{props.title}</span>\n          <button\n            className=\"Modal__close\"\n            onClick={onClose}\n            aria-label={t(\"buttons.close\")}\n          >\n            {useIsMobile() ? back : close}\n          </button>\n        </h2>\n        <div className=\"Dialog__content\">{props.children}</div>\n      </Island>\n    </Modal>\n  );\n};\n","import React, { useState } from \"react\";\nimport { t } from \"../i18n\";\n\nimport { Dialog } from \"./Dialog\";\nimport { useExcalidrawContainer } from \"./App\";\n\nexport const ErrorDialog = ({\n  message,\n  onClose,\n}: {\n  message: string;\n  onClose?: () => void;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(!!message);\n  const { container: excalidrawContainer } = useExcalidrawContainer();\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n\n    if (onClose) {\n      onClose();\n    }\n    // TODO: Fix the A11y issues so this is never needed since we should always focus on last active element\n    excalidrawContainer?.focus();\n  }, [onClose, excalidrawContainer]);\n\n  return (\n    <>\n      {modalIsShown && (\n        <Dialog\n          small\n          onCloseRequest={handleClose}\n          title={t(\"errorDialog.title\")}\n        >\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{message}</div>\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport * as Sentry from \"@sentry/browser\";\nimport { t } from \"../i18n\";\n\ninterface TopErrorBoundaryState {\n  hasError: boolean;\n  sentryEventId: string;\n  localStorage: string;\n}\n\nexport class TopErrorBoundary extends React.Component<\n  any,\n  TopErrorBoundaryState\n> {\n  state: TopErrorBoundaryState = {\n    hasError: false,\n    sentryEventId: \"\",\n    localStorage: \"\",\n  };\n\n  render() {\n    return this.state.hasError ? this.errorSplash() : this.props.children;\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    const _localStorage: any = {};\n    for (const [key, value] of Object.entries({ ...localStorage })) {\n      try {\n        _localStorage[key] = JSON.parse(value);\n      } catch (error: any) {\n        _localStorage[key] = value;\n      }\n    }\n\n    Sentry.withScope((scope) => {\n      scope.setExtras(errorInfo);\n      const eventId = Sentry.captureException(error);\n\n      this.setState((state) => ({\n        hasError: true,\n        sentryEventId: eventId,\n        localStorage: JSON.stringify(_localStorage),\n      }));\n    });\n  }\n\n  private selectTextArea(event: React.MouseEvent<HTMLTextAreaElement>) {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLTextAreaElement).select();\n    }\n  }\n\n  private async createGithubIssue() {\n    let body = \"\";\n    try {\n      const templateStrFn = (\n        await import(\n          /* webpackChunkName: \"bug-issue-template\" */ \"../bug-issue-template\"\n        )\n      ).default;\n      body = encodeURIComponent(templateStrFn(this.state.sentryEventId));\n    } catch (error: any) {\n      console.error(error);\n    }\n\n    window.open(\n      `https://github.com/excalidraw/excalidraw/issues/new?body=${body}`,\n    );\n  }\n\n  private errorSplash() {\n    return (\n      <div className=\"ErrorSplash excalidraw\">\n        <div className=\"ErrorSplash-messageContainer\">\n          <div className=\"ErrorSplash-paragraph bigger align-center\">\n            {t(\"errorSplash.headingMain_pre\")}\n            <button onClick={() => window.location.reload()}>\n              {t(\"errorSplash.headingMain_button\")}\n            </button>\n          </div>\n          <div className=\"ErrorSplash-paragraph align-center\">\n            {t(\"errorSplash.clearCanvasMessage\")}\n            <button\n              onClick={() => {\n                try {\n                  localStorage.clear();\n                  window.location.reload();\n                } catch (error: any) {\n                  console.error(error);\n                }\n              }}\n            >\n              {t(\"errorSplash.clearCanvasMessage_button\")}\n            </button>\n            <br />\n            <div className=\"smaller\">\n              <span role=\"img\" aria-label=\"warning\">\n                ⚠️\n              </span>\n              {t(\"errorSplash.clearCanvasCaveat\")}\n              <span role=\"img\" aria-hidden=\"true\">\n                ⚠️\n              </span>\n            </div>\n          </div>\n          <div>\n            <div className=\"ErrorSplash-paragraph\">\n              {t(\"errorSplash.trackedToSentry_pre\")}\n              {this.state.sentryEventId}\n              {t(\"errorSplash.trackedToSentry_post\")}\n            </div>\n            <div className=\"ErrorSplash-paragraph\">\n              {t(\"errorSplash.openIssueMessage_pre\")}\n              <button onClick={() => this.createGithubIssue()}>\n                {t(\"errorSplash.openIssueMessage_button\")}\n              </button>\n              {t(\"errorSplash.openIssueMessage_post\")}\n            </div>\n            <div className=\"ErrorSplash-paragraph\">\n              <div className=\"ErrorSplash-details\">\n                <label>{t(\"errorSplash.sceneContent\")}</label>\n                <textarea\n                  rows={5}\n                  onPointerDown={this.selectTextArea}\n                  readOnly={true}\n                  value={this.state.localStorage}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { ENV } from \"../../constants\";\nimport pkg from \"./package.json\";\nif (process.env.NODE_ENV !== ENV.TEST) {\n  /* eslint-disable */\n  /* global __webpack_public_path__:writable */\n  __webpack_public_path__ =\n    window.EXCALIDRAW_ASSET_PATH ||\n    `https://unpkg.com/${pkg.name}@${pkg.version}/dist/`;\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { defaultLang, Language, languages, setLanguage } from \"../i18n\";\n\ninterface Props {\n  langCode: Language[\"code\"];\n  children: React.ReactElement;\n}\n\nexport const InitializeApp = (props: Props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const updateLang = async () => {\n      await setLanguage(currentLang);\n    };\n    const currentLang =\n      languages.find((lang) => lang.code === props.langCode) || defaultLang;\n    updateLang();\n    setLoading(false);\n  }, [props.langCode]);\n\n  return loading ? <LoadingMessage /> : props.children;\n};\n","// time constants (ms)\nexport const SAVE_TO_LOCAL_STORAGE_TIMEOUT = 300;\nexport const INITIAL_SCENE_UPDATE_TIMEOUT = 5000;\nexport const FILE_UPLOAD_TIMEOUT = 300;\nexport const LOAD_IMAGES_TIMEOUT = 500;\nexport const SYNC_FULL_SCENE_INTERVAL_MS = 20000;\nexport const SYNC_BROWSER_TABS_TIMEOUT = 50;\nexport const CURSOR_SYNC_TIMEOUT = 33; // ~30fps\n\nexport const FILE_UPLOAD_MAX_BYTES = 3 * 1024 * 1024; // 3 MiB\n// 1 year (https://stackoverflow.com/a/25201898/927631)\nexport const FILE_CACHE_MAX_AGE_SEC = 31536000;\n\nexport const BROADCAST = {\n  SERVER_VOLATILE: \"server-volatile-broadcast\",\n  SERVER: \"server-broadcast\",\n};\n\nexport enum SCENE {\n  INIT = \"SCENE_INIT\",\n  UPDATE = \"SCENE_UPDATE\",\n}\n\nexport const FIREBASE_STORAGE_PREFIXES = {\n  shareLinkFiles: `/files/shareLinks`,\n  collabFiles: `/files/rooms`,\n};\n\nexport const ROOM_ID_BYTES = 10;\n\nexport const STORAGE_KEYS = {\n  LOCAL_STORAGE_ELEMENTS: \"excalidraw\",\n  LOCAL_STORAGE_APP_STATE: \"excalidraw-state\",\n  LOCAL_STORAGE_COLLAB: \"excalidraw-collab\",\n  LOCAL_STORAGE_KEY_COLLAB_FORCE_FLAG: \"collabLinkForceLoadFlag\",\n  LOCAL_STORAGE_LIBRARY: \"excalidraw-library\",\n  VERSION_DATA_STATE: \"version-dataState\",\n  VERSION_FILES: \"version-files\",\n} as const;\n","import React, { useEffect, forwardRef } from \"react\";\nimport \"./publicPath\";\n\nimport { InitializeApp } from \"../../components/InitializeApp\";\nimport App from \"../../components/App\";\n\nimport \"../../css/app.scss\";\nimport \"../../css/styles.scss\";\n\nimport { AppProps, ExcalidrawAPIRefValue, ExcalidrawProps } from \"../../types\";\nimport { defaultLang } from \"../../i18n\";\nimport { DEFAULT_UI_OPTIONS } from \"../../constants\";\n\nconst Excalidraw = (props: ExcalidrawProps) => {\n  const {\n    onChange,\n    initialData,\n    excalidrawRef,\n    onCollabButtonClick,\n    isCollaborating = false,\n    onPointerUpdate,\n    renderTopRightUI,\n    renderFooter,\n    langCode = defaultLang.code,\n    viewModeEnabled,\n    zenModeEnabled,\n    gridModeEnabled,\n    libraryReturnUrl,\n    theme,\n    name,\n    renderCustomStats,\n    onPaste,\n    detectScroll = true,\n    handleKeyboardGlobally = false,\n    onLibraryChange,\n    autoFocus = false,\n    generateIdForFile,\n    onLinkOpen,\n  } = props;\n\n  const canvasActions = props.UIOptions?.canvasActions;\n\n  const UIOptions: AppProps[\"UIOptions\"] = {\n    canvasActions: {\n      ...DEFAULT_UI_OPTIONS.canvasActions,\n      ...canvasActions,\n    },\n  };\n\n  if (canvasActions?.export) {\n    UIOptions.canvasActions.export.saveFileToDisk =\n      canvasActions.export?.saveFileToDisk ??\n      DEFAULT_UI_OPTIONS.canvasActions.export.saveFileToDisk;\n  }\n\n  useEffect(() => {\n    // Block pinch-zooming on iOS outside of the content area\n    const handleTouchMove = (event: TouchEvent) => {\n      // @ts-ignore\n      if (typeof event.scale === \"number\" && event.scale !== 1) {\n        event.preventDefault();\n      }\n    };\n\n    document.addEventListener(\"touchmove\", handleTouchMove, {\n      passive: false,\n    });\n\n    return () => {\n      document.removeEventListener(\"touchmove\", handleTouchMove);\n    };\n  }, []);\n\n  return (\n    <InitializeApp langCode={langCode}>\n      <App\n        onChange={onChange}\n        initialData={initialData}\n        excalidrawRef={excalidrawRef}\n        onCollabButtonClick={onCollabButtonClick}\n        isCollaborating={isCollaborating}\n        onPointerUpdate={onPointerUpdate}\n        renderTopRightUI={renderTopRightUI}\n        renderFooter={renderFooter}\n        langCode={langCode}\n        viewModeEnabled={viewModeEnabled}\n        zenModeEnabled={zenModeEnabled}\n        gridModeEnabled={gridModeEnabled}\n        libraryReturnUrl={libraryReturnUrl}\n        theme={theme}\n        name={name}\n        renderCustomStats={renderCustomStats}\n        UIOptions={UIOptions}\n        onPaste={onPaste}\n        detectScroll={detectScroll}\n        handleKeyboardGlobally={handleKeyboardGlobally}\n        onLibraryChange={onLibraryChange}\n        autoFocus={autoFocus}\n        generateIdForFile={generateIdForFile}\n        onLinkOpen={onLinkOpen}\n      />\n    </InitializeApp>\n  );\n};\n\ntype PublicExcalidrawProps = Omit<ExcalidrawProps, \"forwardedRef\">;\n\nconst areEqual = (\n  prevProps: PublicExcalidrawProps,\n  nextProps: PublicExcalidrawProps,\n) => {\n  const {\n    initialData: prevInitialData,\n    UIOptions: prevUIOptions = {},\n    ...prev\n  } = prevProps;\n  const {\n    initialData: nextInitialData,\n    UIOptions: nextUIOptions = {},\n    ...next\n  } = nextProps;\n\n  // comparing UIOptions\n  const prevUIOptionsKeys = Object.keys(prevUIOptions) as (keyof Partial<\n    typeof DEFAULT_UI_OPTIONS\n  >)[];\n  const nextUIOptionsKeys = Object.keys(nextUIOptions) as (keyof Partial<\n    typeof DEFAULT_UI_OPTIONS\n  >)[];\n\n  if (prevUIOptionsKeys.length !== nextUIOptionsKeys.length) {\n    return false;\n  }\n\n  const isUIOptionsSame = prevUIOptionsKeys.every((key) => {\n    if (key === \"canvasActions\") {\n      const canvasOptionKeys = Object.keys(\n        prevUIOptions.canvasActions!,\n      ) as (keyof Partial<typeof DEFAULT_UI_OPTIONS.canvasActions>)[];\n      canvasOptionKeys.every((key) => {\n        if (\n          key === \"export\" &&\n          prevUIOptions?.canvasActions?.export &&\n          nextUIOptions?.canvasActions?.export\n        ) {\n          return (\n            prevUIOptions.canvasActions.export.saveFileToDisk ===\n            nextUIOptions.canvasActions.export.saveFileToDisk\n          );\n        }\n        return (\n          prevUIOptions?.canvasActions?.[key] ===\n          nextUIOptions?.canvasActions?.[key]\n        );\n      });\n    }\n    return true;\n  });\n\n  const prevKeys = Object.keys(prevProps) as (keyof typeof prev)[];\n  const nextKeys = Object.keys(nextProps) as (keyof typeof next)[];\n  return (\n    isUIOptionsSame &&\n    prevKeys.length === nextKeys.length &&\n    prevKeys.every((key) => prev[key] === next[key])\n  );\n};\n\nconst forwardedRefComp = forwardRef<\n  ExcalidrawAPIRefValue,\n  PublicExcalidrawProps\n>((props, ref) => <Excalidraw {...props} excalidrawRef={ref} />);\nexport default React.memo(forwardedRefComp, areEqual);\nexport {\n  getSceneVersion,\n  isInvisiblySmallElement,\n  getNonDeletedElements,\n} from \"../../element\";\nexport { defaultLang, languages } from \"../../i18n\";\nexport { restore, restoreAppState, restoreElements } from \"../../data/restore\";\nexport {\n  exportToCanvas,\n  exportToBlob,\n  exportToSvg,\n  serializeAsJSON,\n  loadLibraryFromBlob,\n  loadFromBlob,\n  getFreeDrawSvgPath,\n} from \"../../packages/utils\";\nexport { isLinearElement } from \"../../element/typeChecks\";\n\nexport { FONT_FAMILY, THEME } from \"../../constants\";\n\nexport {\n  mutateElement,\n  newElementWith,\n  bumpVersion,\n} from \"../../element/mutateElement\";\n","import { ExcalidrawElement, FileId } from \"../../element/types\";\nimport { getSceneVersion } from \"../../element\";\nimport Portal from \"../collab/Portal\";\nimport { restoreElements } from \"../../data/restore\";\nimport { BinaryFileData, BinaryFileMetadata, DataURL } from \"../../types\";\nimport { FILE_CACHE_MAX_AGE_SEC } from \"../app_constants\";\nimport { decompressData } from \"../../data/encode\";\nimport { encryptData, decryptData } from \"../../data/encryption\";\nimport { MIME_TYPES } from \"../../constants\";\n\n// private\n// -----------------------------------------------------------------------------\n\nlet FIREBASE_CONFIG: Record<string, any>;\ntry {\n  FIREBASE_CONFIG = JSON.parse(process.env.REACT_APP_FIREBASE_CONFIG);\n} catch (error: any) {\n  console.warn(\n    `Error JSON parsing firebase config. Supplied value: ${process.env.REACT_APP_FIREBASE_CONFIG}`,\n  );\n  FIREBASE_CONFIG = {};\n}\n\nlet firebasePromise: Promise<typeof import(\"firebase/app\").default> | null =\n  null;\nlet firestorePromise: Promise<any> | null | true = null;\nlet firebaseStoragePromise: Promise<any> | null | true = null;\n\nlet isFirebaseInitialized = false;\n\nconst _loadFirebase = async () => {\n  const firebase = (\n    await import(/* webpackChunkName: \"firebase\" */ \"firebase/app\")\n  ).default;\n\n  if (!isFirebaseInitialized) {\n    try {\n      firebase.initializeApp(FIREBASE_CONFIG);\n    } catch (error: any) {\n      // trying initialize again throws. Usually this is harmless, and happens\n      // mainly in dev (HMR)\n      if (error.code === \"app/duplicate-app\") {\n        console.warn(error.name, error.code);\n      } else {\n        throw error;\n      }\n    }\n    isFirebaseInitialized = true;\n  }\n\n  return firebase;\n};\n\nconst _getFirebase = async (): Promise<\n  typeof import(\"firebase/app\").default\n> => {\n  if (!firebasePromise) {\n    firebasePromise = _loadFirebase();\n  }\n  return firebasePromise;\n};\n\n// -----------------------------------------------------------------------------\n\nconst loadFirestore = async () => {\n  const firebase = await _getFirebase();\n  if (!firestorePromise) {\n    firestorePromise = import(\n      /* webpackChunkName: \"firestore\" */ \"firebase/firestore\"\n    );\n  }\n  if (firestorePromise !== true) {\n    await firestorePromise;\n    firestorePromise = true;\n  }\n  return firebase;\n};\n\nexport const loadFirebaseStorage = async () => {\n  const firebase = await _getFirebase();\n  if (!firebaseStoragePromise) {\n    firebaseStoragePromise = import(\n      /* webpackChunkName: \"storage\" */ \"firebase/storage\"\n    );\n  }\n  if (firebaseStoragePromise !== true) {\n    await firebaseStoragePromise;\n    firebaseStoragePromise = true;\n  }\n  return firebase;\n};\n\ninterface FirebaseStoredScene {\n  sceneVersion: number;\n  iv: firebase.default.firestore.Blob;\n  ciphertext: firebase.default.firestore.Blob;\n}\n\nconst encryptElements = async (\n  key: string,\n  elements: readonly ExcalidrawElement[],\n): Promise<{ ciphertext: ArrayBuffer; iv: Uint8Array }> => {\n  const json = JSON.stringify(elements);\n  const encoded = new TextEncoder().encode(json);\n  const { encryptedBuffer, iv } = await encryptData(key, encoded);\n\n  return { ciphertext: encryptedBuffer, iv };\n};\n\nconst decryptElements = async (\n  key: string,\n  iv: Uint8Array,\n  ciphertext: ArrayBuffer | Uint8Array,\n): Promise<readonly ExcalidrawElement[]> => {\n  const decrypted = await decryptData(iv, ciphertext, key);\n  const decodedData = new TextDecoder(\"utf-8\").decode(\n    new Uint8Array(decrypted),\n  );\n  return JSON.parse(decodedData);\n};\n\nconst firebaseSceneVersionCache = new WeakMap<SocketIOClient.Socket, number>();\n\nexport const isSavedToFirebase = (\n  portal: Portal,\n  elements: readonly ExcalidrawElement[],\n): boolean => {\n  if (portal.socket && portal.roomId && portal.roomKey) {\n    const sceneVersion = getSceneVersion(elements);\n\n    return firebaseSceneVersionCache.get(portal.socket) === sceneVersion;\n  }\n  // if no room exists, consider the room saved so that we don't unnecessarily\n  // prevent unload (there's nothing we could do at that point anyway)\n  return true;\n};\n\nexport const saveFilesToFirebase = async ({\n  prefix,\n  files,\n}: {\n  prefix: string;\n  files: { id: FileId; buffer: Uint8Array }[];\n}) => {\n  const firebase = await loadFirebaseStorage();\n\n  const erroredFiles = new Map<FileId, true>();\n  const savedFiles = new Map<FileId, true>();\n\n  await Promise.all(\n    files.map(async ({ id, buffer }) => {\n      try {\n        await firebase\n          .storage()\n          .ref(`${prefix}/${id}`)\n          .put(\n            new Blob([buffer], {\n              type: MIME_TYPES.binary,\n            }),\n            {\n              cacheControl: `public, max-age=${FILE_CACHE_MAX_AGE_SEC}`,\n            },\n          );\n        savedFiles.set(id, true);\n      } catch (error: any) {\n        erroredFiles.set(id, true);\n      }\n    }),\n  );\n\n  return { savedFiles, erroredFiles };\n};\n\nexport const saveToFirebase = async (\n  portal: Portal,\n  elements: readonly ExcalidrawElement[],\n) => {\n  const { roomId, roomKey, socket } = portal;\n  if (\n    // if no room exists, consider the room saved because there's nothing we can\n    // do at this point\n    !roomId ||\n    !roomKey ||\n    !socket ||\n    isSavedToFirebase(portal, elements)\n  ) {\n    return true;\n  }\n\n  const firebase = await loadFirestore();\n  const sceneVersion = getSceneVersion(elements);\n  const { ciphertext, iv } = await encryptElements(roomKey, elements);\n\n  const nextDocData = {\n    sceneVersion,\n    ciphertext: firebase.firestore.Blob.fromUint8Array(\n      new Uint8Array(ciphertext),\n    ),\n    iv: firebase.firestore.Blob.fromUint8Array(iv),\n  } as FirebaseStoredScene;\n\n  const db = firebase.firestore();\n  const docRef = db.collection(\"scenes\").doc(roomId);\n  const didUpdate = await db.runTransaction(async (transaction) => {\n    const doc = await transaction.get(docRef);\n    if (!doc.exists) {\n      transaction.set(docRef, nextDocData);\n      return true;\n    }\n\n    const prevDocData = doc.data() as FirebaseStoredScene;\n    if (prevDocData.sceneVersion >= nextDocData.sceneVersion) {\n      return false;\n    }\n\n    transaction.update(docRef, nextDocData);\n    return true;\n  });\n\n  if (didUpdate) {\n    firebaseSceneVersionCache.set(socket, sceneVersion);\n  }\n\n  return didUpdate;\n};\n\nexport const loadFromFirebase = async (\n  roomId: string,\n  roomKey: string,\n  socket: SocketIOClient.Socket | null,\n): Promise<readonly ExcalidrawElement[] | null> => {\n  const firebase = await loadFirestore();\n  const db = firebase.firestore();\n\n  const docRef = db.collection(\"scenes\").doc(roomId);\n  const doc = await docRef.get();\n  if (!doc.exists) {\n    return null;\n  }\n  const storedScene = doc.data() as FirebaseStoredScene;\n  const ciphertext = storedScene.ciphertext.toUint8Array();\n  const iv = storedScene.iv.toUint8Array();\n\n  const elements = await decryptElements(roomKey, iv, ciphertext);\n\n  if (socket) {\n    firebaseSceneVersionCache.set(socket, getSceneVersion(elements));\n  }\n\n  return restoreElements(elements, null);\n};\n\nexport const loadFilesFromFirebase = async (\n  prefix: string,\n  decryptionKey: string,\n  filesIds: readonly FileId[],\n) => {\n  const loadedFiles: BinaryFileData[] = [];\n  const erroredFiles = new Map<FileId, true>();\n\n  await Promise.all(\n    [...new Set(filesIds)].map(async (id) => {\n      try {\n        const url = `https://firebasestorage.googleapis.com/v0/b/${\n          FIREBASE_CONFIG.storageBucket\n        }/o/${encodeURIComponent(prefix.replace(/^\\//, \"\"))}%2F${id}`;\n        const response = await fetch(`${url}?alt=media`);\n        if (response.status < 400) {\n          const arrayBuffer = await response.arrayBuffer();\n\n          const { data, metadata } = await decompressData<BinaryFileMetadata>(\n            new Uint8Array(arrayBuffer),\n            {\n              decryptionKey,\n            },\n          );\n\n          const dataURL = new TextDecoder().decode(data) as DataURL;\n\n          loadedFiles.push({\n            mimeType: metadata.mimeType || MIME_TYPES.binary,\n            id,\n            dataURL,\n            created: metadata?.created || Date.now(),\n          });\n        } else {\n          erroredFiles.set(id, true);\n        }\n      } catch (error: any) {\n        erroredFiles.set(id, true);\n        console.error(error);\n      }\n    }),\n  );\n\n  return { loadedFiles, erroredFiles };\n};\n","import { compressData } from \"../../data/encode\";\nimport { newElementWith } from \"../../element/mutateElement\";\nimport { isInitializedImageElement } from \"../../element/typeChecks\";\nimport {\n  ExcalidrawElement,\n  ExcalidrawImageElement,\n  FileId,\n  InitializedExcalidrawImageElement,\n} from \"../../element/types\";\nimport { t } from \"../../i18n\";\nimport {\n  BinaryFileData,\n  BinaryFileMetadata,\n  ExcalidrawImperativeAPI,\n  BinaryFiles,\n} from \"../../types\";\n\nexport class FileManager {\n  /** files being fetched */\n  private fetchingFiles = new Map<ExcalidrawImageElement[\"fileId\"], true>();\n  /** files being saved */\n  private savingFiles = new Map<ExcalidrawImageElement[\"fileId\"], true>();\n  /* files already saved to persistent storage */\n  private savedFiles = new Map<ExcalidrawImageElement[\"fileId\"], true>();\n  private erroredFiles = new Map<ExcalidrawImageElement[\"fileId\"], true>();\n\n  private _getFiles;\n  private _saveFiles;\n\n  constructor({\n    getFiles,\n    saveFiles,\n  }: {\n    getFiles: (fileIds: FileId[]) => Promise<{\n      loadedFiles: BinaryFileData[];\n      erroredFiles: Map<FileId, true>;\n    }>;\n    saveFiles: (data: { addedFiles: Map<FileId, BinaryFileData> }) => Promise<{\n      savedFiles: Map<FileId, true>;\n      erroredFiles: Map<FileId, true>;\n    }>;\n  }) {\n    this._getFiles = getFiles;\n    this._saveFiles = saveFiles;\n  }\n\n  /**\n   * returns whether file is already saved or being processed\n   */\n  isFileHandled = (id: FileId) => {\n    return (\n      this.savedFiles.has(id) ||\n      this.fetchingFiles.has(id) ||\n      this.savingFiles.has(id) ||\n      this.erroredFiles.has(id)\n    );\n  };\n\n  isFileSaved = (id: FileId) => {\n    return this.savedFiles.has(id);\n  };\n\n  saveFiles = async ({\n    elements,\n    files,\n  }: {\n    elements: readonly ExcalidrawElement[];\n    files: BinaryFiles;\n  }) => {\n    const addedFiles: Map<FileId, BinaryFileData> = new Map();\n\n    for (const element of elements) {\n      if (\n        isInitializedImageElement(element) &&\n        files[element.fileId] &&\n        !this.isFileHandled(element.fileId)\n      ) {\n        addedFiles.set(element.fileId, files[element.fileId]);\n        this.savingFiles.set(element.fileId, true);\n      }\n    }\n\n    try {\n      const { savedFiles, erroredFiles } = await this._saveFiles({\n        addedFiles,\n      });\n\n      for (const [fileId] of savedFiles) {\n        this.savedFiles.set(fileId, true);\n      }\n\n      return {\n        savedFiles,\n        erroredFiles,\n      };\n    } finally {\n      for (const [fileId] of addedFiles) {\n        this.savingFiles.delete(fileId);\n      }\n    }\n  };\n\n  getFiles = async (\n    ids: FileId[],\n  ): Promise<{\n    loadedFiles: BinaryFileData[];\n    erroredFiles: Map<FileId, true>;\n  }> => {\n    if (!ids.length) {\n      return {\n        loadedFiles: [],\n        erroredFiles: new Map(),\n      };\n    }\n    for (const id of ids) {\n      this.fetchingFiles.set(id, true);\n    }\n\n    try {\n      const { loadedFiles, erroredFiles } = await this._getFiles(ids);\n\n      for (const file of loadedFiles) {\n        this.savedFiles.set(file.id, true);\n      }\n      for (const [fileId] of erroredFiles) {\n        this.erroredFiles.set(fileId, true);\n      }\n\n      return { loadedFiles, erroredFiles };\n    } finally {\n      for (const id of ids) {\n        this.fetchingFiles.delete(id);\n      }\n    }\n  };\n\n  /** a file element prevents unload only if it's being saved regardless of\n   *  its `status`. This ensures that elements who for any reason haven't\n   *  beed set to `saved` status don't prevent unload in future sessions.\n   *  Technically we should prevent unload when the origin client haven't\n   *  yet saved the `status` update to storage, but that should be taken care\n   *  of during regular beforeUnload unsaved files check.\n   */\n  shouldPreventUnload = (elements: readonly ExcalidrawElement[]) => {\n    return elements.some((element) => {\n      return (\n        isInitializedImageElement(element) &&\n        !element.isDeleted &&\n        this.savingFiles.has(element.fileId)\n      );\n    });\n  };\n\n  /**\n   * helper to determine if image element status needs updating\n   */\n  shouldUpdateImageElementStatus = (\n    element: ExcalidrawElement,\n  ): element is InitializedExcalidrawImageElement => {\n    return (\n      isInitializedImageElement(element) &&\n      this.isFileSaved(element.fileId) &&\n      element.status === \"pending\"\n    );\n  };\n\n  reset() {\n    this.fetchingFiles.clear();\n    this.savingFiles.clear();\n    this.savedFiles.clear();\n    this.erroredFiles.clear();\n  }\n}\n\nexport const encodeFilesForUpload = async ({\n  files,\n  maxBytes,\n  encryptionKey,\n}: {\n  files: Map<FileId, BinaryFileData>;\n  maxBytes: number;\n  encryptionKey: string;\n}) => {\n  const processedFiles: {\n    id: FileId;\n    buffer: Uint8Array;\n  }[] = [];\n\n  for (const [id, fileData] of files) {\n    const buffer = new TextEncoder().encode(fileData.dataURL);\n\n    const encodedFile = await compressData<BinaryFileMetadata>(buffer, {\n      encryptionKey,\n      metadata: {\n        id,\n        mimeType: fileData.mimeType,\n        created: Date.now(),\n      },\n    });\n\n    if (buffer.byteLength > maxBytes) {\n      throw new Error(\n        t(\"errors.fileTooBig\", {\n          maxSize: `${Math.trunc(maxBytes / 1024 / 1024)}MB`,\n        }),\n      );\n    }\n\n    processedFiles.push({\n      id,\n      buffer: encodedFile,\n    });\n  }\n\n  return processedFiles;\n};\n\nexport const updateStaleImageStatuses = (params: {\n  excalidrawAPI: ExcalidrawImperativeAPI;\n  erroredFiles: Map<FileId, true>;\n  elements: readonly ExcalidrawElement[];\n}) => {\n  if (!params.erroredFiles.size) {\n    return;\n  }\n  params.excalidrawAPI.updateScene({\n    elements: params.excalidrawAPI\n      .getSceneElementsIncludingDeleted()\n      .map((element) => {\n        if (\n          isInitializedImageElement(element) &&\n          params.erroredFiles.has(element.fileId)\n        ) {\n          return newElementWith(element, {\n            status: \"error\",\n          });\n        }\n        return element;\n      }),\n  });\n};\n","import { compressData, decompressData } from \"../../data/encode\";\nimport {\n  decryptData,\n  generateEncryptionKey,\n  IV_LENGTH_BYTES,\n} from \"../../data/encryption\";\nimport { serializeAsJSON } from \"../../data/json\";\nimport { restore } from \"../../data/restore\";\nimport { ImportedDataState } from \"../../data/types\";\nimport { isInitializedImageElement } from \"../../element/typeChecks\";\nimport { ExcalidrawElement, FileId } from \"../../element/types\";\nimport { t } from \"../../i18n\";\nimport {\n  AppState,\n  BinaryFileData,\n  BinaryFiles,\n  UserIdleState,\n} from \"../../types\";\nimport { bytesToHexString } from \"../../utils\";\nimport { FILE_UPLOAD_MAX_BYTES, ROOM_ID_BYTES } from \"../app_constants\";\nimport { encodeFilesForUpload } from \"./FileManager\";\nimport { saveFilesToFirebase } from \"./firebase\";\n\nconst BACKEND_V2_GET = process.env.REACT_APP_BACKEND_V2_GET_URL;\nconst BACKEND_V2_POST = process.env.REACT_APP_BACKEND_V2_POST_URL;\n\nconst generateRoomId = async () => {\n  const buffer = new Uint8Array(ROOM_ID_BYTES);\n  window.crypto.getRandomValues(buffer);\n  return bytesToHexString(buffer);\n};\n\n/**\n * Right now the reason why we resolve connection params (url, polling...)\n * from upstream is to allow changing the params immediately when needed without\n * having to wait for clients to update the SW.\n *\n * If REACT_APP_WS_SERVER_URL env is set, we use that instead (useful for forks)\n */\nexport const getCollabServer = async (): Promise<{\n  url: string;\n  polling: boolean;\n}> => {\n  if (process.env.REACT_APP_WS_SERVER_URL) {\n    return {\n      url: process.env.REACT_APP_WS_SERVER_URL,\n      polling: true,\n    };\n  }\n\n  try {\n    const resp = await fetch(\n      `${process.env.REACT_APP_PORTAL_URL}/collab-server`,\n    );\n    return await resp.json();\n  } catch (error) {\n    console.error(error);\n    throw new Error(t(\"errors.cannotResolveCollabServer\"));\n  }\n};\n\nexport type EncryptedData = {\n  data: ArrayBuffer;\n  iv: Uint8Array;\n};\n\nexport type SocketUpdateDataSource = {\n  SCENE_INIT: {\n    type: \"SCENE_INIT\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  SCENE_UPDATE: {\n    type: \"SCENE_UPDATE\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  MOUSE_LOCATION: {\n    type: \"MOUSE_LOCATION\";\n    payload: {\n      socketId: string;\n      pointer: { x: number; y: number };\n      button: \"down\" | \"up\";\n      selectedElementIds: AppState[\"selectedElementIds\"];\n      username: string;\n    };\n  };\n  IDLE_STATUS: {\n    type: \"IDLE_STATUS\";\n    payload: {\n      socketId: string;\n      userState: UserIdleState;\n      username: string;\n    };\n  };\n};\n\nexport type SocketUpdateDataIncoming =\n  | SocketUpdateDataSource[keyof SocketUpdateDataSource]\n  | {\n      type: \"INVALID_RESPONSE\";\n    };\n\nexport type SocketUpdateData =\n  SocketUpdateDataSource[keyof SocketUpdateDataSource] & {\n    _brand: \"socketUpdateData\";\n  };\n\nexport const getCollaborationLinkData = (link: string) => {\n  const hash = new URL(link).hash;\n  const match = hash.match(/^#room=([a-zA-Z0-9_-]+),([a-zA-Z0-9_-]+)$/);\n  if (match && match[2].length !== 22) {\n    window.alert(t(\"alerts.invalidEncryptionKey\"));\n    return null;\n  }\n  return match ? { roomId: match[1], roomKey: match[2] } : null;\n};\n\nexport const generateCollaborationLinkData = async () => {\n  const roomId = await generateRoomId();\n  const roomKey = await generateEncryptionKey();\n\n  if (!roomKey) {\n    throw new Error(\"Couldn't generate room key\");\n  }\n\n  return { roomId, roomKey };\n};\n\nexport const getCollaborationLink = (data: {\n  roomId: string;\n  roomKey: string;\n}) => {\n  return `${window.location.origin}${window.location.pathname}#room=${data.roomId},${data.roomKey}`;\n};\n\n/**\n * Decodes shareLink data using the legacy buffer format.\n * @deprecated\n */\nconst legacy_decodeFromBackend = async ({\n  buffer,\n  decryptionKey,\n}: {\n  buffer: ArrayBuffer;\n  decryptionKey: string;\n}) => {\n  let decrypted: ArrayBuffer;\n\n  try {\n    // Buffer should contain both the IV (fixed length) and encrypted data\n    const iv = buffer.slice(0, IV_LENGTH_BYTES);\n    const encrypted = buffer.slice(IV_LENGTH_BYTES, buffer.byteLength);\n    decrypted = await decryptData(new Uint8Array(iv), encrypted, decryptionKey);\n  } catch (error: any) {\n    // Fixed IV (old format, backward compatibility)\n    const fixedIv = new Uint8Array(IV_LENGTH_BYTES);\n    decrypted = await decryptData(fixedIv, buffer, decryptionKey);\n  }\n\n  // We need to convert the decrypted array buffer to a string\n  const string = new window.TextDecoder(\"utf-8\").decode(\n    new Uint8Array(decrypted),\n  );\n  const data: ImportedDataState = JSON.parse(string);\n\n  return {\n    elements: data.elements || null,\n    appState: data.appState || null,\n  };\n};\n\nconst importFromBackend = async (\n  id: string,\n  decryptionKey: string,\n): Promise<ImportedDataState> => {\n  try {\n    const response = await fetch(`${BACKEND_V2_GET}${id}`);\n\n    if (!response.ok) {\n      window.alert(t(\"alerts.importBackendFailed\"));\n      return {};\n    }\n    const buffer = await response.arrayBuffer();\n\n    try {\n      const { data: decodedBuffer } = await decompressData(\n        new Uint8Array(buffer),\n        {\n          decryptionKey,\n        },\n      );\n      const data: ImportedDataState = JSON.parse(\n        new TextDecoder().decode(decodedBuffer),\n      );\n\n      return {\n        elements: data.elements || null,\n        appState: data.appState || null,\n      };\n    } catch (error: any) {\n      console.warn(\n        \"error when decoding shareLink data using the new format:\",\n        error,\n      );\n      return legacy_decodeFromBackend({ buffer, decryptionKey });\n    }\n  } catch (error: any) {\n    window.alert(t(\"alerts.importBackendFailed\"));\n    console.error(error);\n    return {};\n  }\n};\n\nexport const loadScene = async (\n  id: string | null,\n  privateKey: string | null,\n  // Supply local state even if importing from backend to ensure we restore\n  // localStorage user settings which we do not persist on server.\n  // Non-optional so we don't forget to pass it even if `undefined`.\n  localDataState: ImportedDataState | undefined | null,\n) => {\n  let data;\n  if (id != null && privateKey != null) {\n    // the private key is used to decrypt the content from the server, take\n    // extra care not to leak it\n    data = restore(\n      await importFromBackend(id, privateKey),\n      localDataState?.appState,\n      localDataState?.elements,\n    );\n  } else {\n    data = restore(localDataState || null, null, null);\n  }\n\n  return {\n    elements: data.elements,\n    appState: data.appState,\n    // note: this will always be empty because we're not storing files\n    // in the scene database/localStorage, and instead fetch them async\n    // from a different database\n    files: data.files,\n    commitToHistory: false,\n  };\n};\n\nexport const exportToBackend = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  files: BinaryFiles,\n) => {\n  const encryptionKey = await generateEncryptionKey(\"string\");\n\n  const payload = await compressData(\n    new TextEncoder().encode(\n      serializeAsJSON(elements, appState, files, \"database\"),\n    ),\n    { encryptionKey },\n  );\n\n  try {\n    const filesMap = new Map<FileId, BinaryFileData>();\n    for (const element of elements) {\n      if (isInitializedImageElement(element) && files[element.fileId]) {\n        filesMap.set(element.fileId, files[element.fileId]);\n      }\n    }\n\n    const filesToUpload = await encodeFilesForUpload({\n      files: filesMap,\n      encryptionKey,\n      maxBytes: FILE_UPLOAD_MAX_BYTES,\n    });\n\n    const response = await fetch(BACKEND_V2_POST, {\n      method: \"POST\",\n      body: payload.buffer,\n    });\n    const json = await response.json();\n    if (json.id) {\n      const url = new URL(window.location.href);\n      // We need to store the key (and less importantly the id) as hash instead\n      // of queryParam in order to never send it to the server\n      url.hash = `json=${json.id},${encryptionKey}`;\n      const urlString = url.toString();\n\n      await saveFilesToFirebase({\n        prefix: `/files/shareLinks/${json.id}`,\n        files: filesToUpload,\n      });\n\n      window.prompt(`🔒${t(\"alerts.uploadedSecurly\")}`, urlString);\n    } else if (json.error_class === \"RequestTooLargeError\") {\n      window.alert(t(\"alerts.couldNotCreateShareableLinkTooBig\"));\n    } else {\n      window.alert(t(\"alerts.couldNotCreateShareableLink\"));\n    }\n  } catch (error: any) {\n    console.error(error);\n    window.alert(t(\"alerts.couldNotCreateShareableLink\"));\n  }\n};\n","import { STORAGE_KEYS } from \"../app_constants\";\n\n// in-memory state (this tab's current state) versions. Currently just\n// timestamps of the last time the state was saved to browser storage.\nconst LOCAL_STATE_VERSIONS = {\n  [STORAGE_KEYS.VERSION_DATA_STATE]: -1,\n  [STORAGE_KEYS.VERSION_FILES]: -1,\n};\n\ntype BrowserStateTypes = keyof typeof LOCAL_STATE_VERSIONS;\n\nexport const isBrowserStorageStateNewer = (type: BrowserStateTypes) => {\n  const storageTimestamp = JSON.parse(localStorage.getItem(type) || \"-1\");\n  return storageTimestamp > LOCAL_STATE_VERSIONS[type];\n};\n\nexport const updateBrowserStateVersion = (type: BrowserStateTypes) => {\n  const timestamp = Date.now();\n  localStorage.setItem(type, JSON.stringify(timestamp));\n  LOCAL_STATE_VERSIONS[type] = timestamp;\n};\n\nexport const resetBrowserStateVersions = () => {\n  for (const key of Object.keys(LOCAL_STATE_VERSIONS) as BrowserStateTypes[]) {\n    const timestamp = -1;\n    localStorage.setItem(key, JSON.stringify(timestamp));\n    LOCAL_STATE_VERSIONS[key] = timestamp;\n  }\n};\n","import { ExcalidrawElement } from \"../../element/types\";\nimport { AppState } from \"../../types\";\nimport {\n  clearAppStateForLocalStorage,\n  getDefaultAppState,\n} from \"../../appState\";\nimport { clearElementsForLocalStorage } from \"../../element\";\nimport { updateBrowserStateVersion } from \"./tabSync\";\nimport { STORAGE_KEYS } from \"../app_constants\";\n\nexport const saveUsernameToLocalStorage = (username: string) => {\n  try {\n    localStorage.setItem(\n      STORAGE_KEYS.LOCAL_STORAGE_COLLAB,\n      JSON.stringify({ username }),\n    );\n  } catch (error: any) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\nexport const importUsernameFromLocalStorage = (): string | null => {\n  try {\n    const data = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_COLLAB);\n    if (data) {\n      return JSON.parse(data).username;\n    }\n  } catch (error: any) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  return null;\n};\n\nexport const saveToLocalStorage = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  try {\n    localStorage.setItem(\n      STORAGE_KEYS.LOCAL_STORAGE_ELEMENTS,\n      JSON.stringify(clearElementsForLocalStorage(elements)),\n    );\n    localStorage.setItem(\n      STORAGE_KEYS.LOCAL_STORAGE_APP_STATE,\n      JSON.stringify(clearAppStateForLocalStorage(appState)),\n    );\n    updateBrowserStateVersion(STORAGE_KEYS.VERSION_DATA_STATE);\n  } catch (error: any) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\nexport const importFromLocalStorage = () => {\n  let savedElements = null;\n  let savedState = null;\n\n  try {\n    savedElements = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_ELEMENTS);\n    savedState = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_APP_STATE);\n  } catch (error: any) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  let elements: ExcalidrawElement[] = [];\n  if (savedElements) {\n    try {\n      elements = clearElementsForLocalStorage(JSON.parse(savedElements));\n    } catch (error: any) {\n      console.error(error);\n      // Do nothing because elements array is already empty\n    }\n  }\n\n  let appState = null;\n  if (savedState) {\n    try {\n      appState = {\n        ...getDefaultAppState(),\n        ...clearAppStateForLocalStorage(\n          JSON.parse(savedState) as Partial<AppState>,\n        ),\n      };\n    } catch (error: any) {\n      console.error(error);\n      // Do nothing because appState is already null\n    }\n  }\n  return { elements, appState };\n};\n\nexport const getElementsStorageSize = () => {\n  try {\n    const elements = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_ELEMENTS);\n    const elementsSize = elements?.length || 0;\n    return elementsSize;\n  } catch (error: any) {\n    console.error(error);\n    return 0;\n  }\n};\n\nexport const getTotalStorageSize = () => {\n  try {\n    const appState = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_APP_STATE);\n    const collab = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_COLLAB);\n    const library = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_LIBRARY);\n\n    const appStateSize = appState?.length || 0;\n    const collabSize = collab?.length || 0;\n    const librarySize = library?.length || 0;\n\n    return appStateSize + collabSize + librarySize + getElementsStorageSize();\n  } catch (error: any) {\n    console.error(error);\n    return 0;\n  }\n};\n\nexport const getLibraryItemsFromStorage = () => {\n  try {\n    const libraryItems =\n      JSON.parse(\n        localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_LIBRARY) as string,\n      ) || [];\n\n    return libraryItems;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\n","import { SocketUpdateData, SocketUpdateDataSource } from \"../data\";\n\nimport CollabWrapper from \"./CollabWrapper\";\n\nimport { ExcalidrawElement } from \"../../element/types\";\nimport { BROADCAST, FILE_UPLOAD_TIMEOUT, SCENE } from \"../app_constants\";\nimport { UserIdleState } from \"../../types\";\nimport { trackEvent } from \"../../analytics\";\nimport { throttle } from \"lodash\";\nimport { newElementWith } from \"../../element/mutateElement\";\nimport { BroadcastedExcalidrawElement } from \"./reconciliation\";\nimport { encryptData } from \"../../data/encryption\";\n\nclass Portal {\n  collab: CollabWrapper;\n  socket: SocketIOClient.Socket | null = null;\n  socketInitialized: boolean = false; // we don't want the socket to emit any updates until it is fully initialized\n  roomId: string | null = null;\n  roomKey: string | null = null;\n  broadcastedElementVersions: Map<string, number> = new Map();\n\n  constructor(collab: CollabWrapper) {\n    this.collab = collab;\n  }\n\n  open(socket: SocketIOClient.Socket, id: string, key: string) {\n    this.socket = socket;\n    this.roomId = id;\n    this.roomKey = key;\n\n    // Initialize socket listeners\n    this.socket.on(\"init-room\", () => {\n      if (this.socket) {\n        this.socket.emit(\"join-room\", this.roomId);\n        trackEvent(\"share\", \"room joined\");\n      }\n    });\n    this.socket.on(\"new-user\", async (_socketId: string) => {\n      this.broadcastScene(\n        SCENE.INIT,\n        this.collab.getSceneElementsIncludingDeleted(),\n        /* syncAll */ true,\n      );\n    });\n    this.socket.on(\"room-user-change\", (clients: string[]) => {\n      this.collab.setCollaborators(clients);\n    });\n\n    return socket;\n  }\n\n  close() {\n    if (!this.socket) {\n      return;\n    }\n    this.queueFileUpload.flush();\n    this.socket.close();\n    this.socket = null;\n    this.roomId = null;\n    this.roomKey = null;\n    this.socketInitialized = false;\n    this.broadcastedElementVersions = new Map();\n  }\n\n  isOpen() {\n    return !!(\n      this.socketInitialized &&\n      this.socket &&\n      this.roomId &&\n      this.roomKey\n    );\n  }\n\n  async _broadcastSocketData(\n    data: SocketUpdateData,\n    volatile: boolean = false,\n  ) {\n    if (this.isOpen()) {\n      const json = JSON.stringify(data);\n      const encoded = new TextEncoder().encode(json);\n      const { encryptedBuffer, iv } = await encryptData(this.roomKey!, encoded);\n\n      this.socket?.emit(\n        volatile ? BROADCAST.SERVER_VOLATILE : BROADCAST.SERVER,\n        this.roomId,\n        encryptedBuffer,\n        iv,\n      );\n    }\n  }\n\n  queueFileUpload = throttle(async () => {\n    try {\n      await this.collab.fileManager.saveFiles({\n        elements: this.collab.excalidrawAPI.getSceneElementsIncludingDeleted(),\n        files: this.collab.excalidrawAPI.getFiles(),\n      });\n    } catch (error: any) {\n      if (error.name !== \"AbortError\") {\n        this.collab.excalidrawAPI.updateScene({\n          appState: {\n            errorMessage: error.message,\n          },\n        });\n      }\n    }\n\n    this.collab.excalidrawAPI.updateScene({\n      elements: this.collab.excalidrawAPI\n        .getSceneElementsIncludingDeleted()\n        .map((element) => {\n          if (this.collab.fileManager.shouldUpdateImageElementStatus(element)) {\n            // this will signal collaborators to pull image data from server\n            // (using mutation instead of newElementWith otherwise it'd break\n            // in-progress dragging)\n            return newElementWith(element, { status: \"saved\" });\n          }\n          return element;\n        }),\n    });\n  }, FILE_UPLOAD_TIMEOUT);\n\n  broadcastScene = async (\n    sceneType: SCENE.INIT | SCENE.UPDATE,\n    allElements: readonly ExcalidrawElement[],\n    syncAll: boolean,\n  ) => {\n    if (sceneType === SCENE.INIT && !syncAll) {\n      throw new Error(\"syncAll must be true when sending SCENE.INIT\");\n    }\n\n    // sync out only the elements we think we need to to save bandwidth.\n    // periodically we'll resync the whole thing to make sure no one diverges\n    // due to a dropped message (server goes down etc).\n    const syncableElements = allElements.reduce(\n      (acc, element: BroadcastedExcalidrawElement, idx, elements) => {\n        if (\n          (syncAll ||\n            !this.broadcastedElementVersions.has(element.id) ||\n            element.version >\n              this.broadcastedElementVersions.get(element.id)!) &&\n          this.collab.isSyncableElement(element)\n        ) {\n          acc.push({\n            ...element,\n            // z-index info for the reconciler\n            parent: idx === 0 ? \"^\" : elements[idx - 1]?.id,\n          });\n        }\n        return acc;\n      },\n      [] as BroadcastedExcalidrawElement[],\n    );\n\n    const data: SocketUpdateDataSource[typeof sceneType] = {\n      type: sceneType,\n      payload: {\n        elements: syncableElements,\n      },\n    };\n\n    for (const syncableElement of syncableElements) {\n      this.broadcastedElementVersions.set(\n        syncableElement.id,\n        syncableElement.version,\n      );\n    }\n\n    const broadcastPromise = this._broadcastSocketData(\n      data as SocketUpdateData,\n    );\n\n    this.queueFileUpload();\n\n    if (syncAll && this.collab.isCollaborating) {\n      await Promise.all([\n        broadcastPromise,\n        this.collab.saveCollabRoomToFirebase(syncableElements),\n      ]);\n    } else {\n      await broadcastPromise;\n    }\n  };\n\n  broadcastIdleChange = (userState: UserIdleState) => {\n    if (this.socket?.id) {\n      const data: SocketUpdateDataSource[\"IDLE_STATUS\"] = {\n        type: \"IDLE_STATUS\",\n        payload: {\n          socketId: this.socket.id,\n          userState,\n          username: this.collab.state.username,\n        },\n      };\n      return this._broadcastSocketData(\n        data as SocketUpdateData,\n        true, // volatile\n      );\n    }\n  };\n\n  broadcastMouseLocation = (payload: {\n    pointer: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"pointer\"];\n    button: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"button\"];\n  }) => {\n    if (this.socket?.id) {\n      const data: SocketUpdateDataSource[\"MOUSE_LOCATION\"] = {\n        type: \"MOUSE_LOCATION\",\n        payload: {\n          socketId: this.socket.id,\n          pointer: payload.pointer,\n          button: payload.button || \"up\",\n          selectedElementIds:\n            this.collab.excalidrawAPI.getAppState().selectedElementIds,\n          username: this.collab.state.username,\n        },\n      };\n      return this._broadcastSocketData(\n        data as SocketUpdateData,\n        true, // volatile\n      );\n    }\n  };\n}\n\nexport default Portal;\n","import React, { useRef } from \"react\";\nimport { copyTextToSystemClipboard } from \"../../clipboard\";\nimport { Dialog } from \"../../components/Dialog\";\nimport {\n  clipboard,\n  start,\n  stop,\n  share,\n  shareIOS,\n  shareWindows,\n} from \"../../components/icons\";\nimport { ToolButton } from \"../../components/ToolButton\";\nimport { t } from \"../../i18n\";\nimport \"./RoomDialog.scss\";\nimport Stack from \"../../components/Stack\";\nimport { AppState } from \"../../types\";\n\nconst getShareIcon = () => {\n  const navigator = window.navigator as any;\n  const isAppleBrowser = /Apple/.test(navigator.vendor);\n  const isWindowsBrowser = navigator.appVersion.indexOf(\"Win\") !== -1;\n\n  if (isAppleBrowser) {\n    return shareIOS;\n  } else if (isWindowsBrowser) {\n    return shareWindows;\n  }\n\n  return share;\n};\n\nconst RoomDialog = ({\n  handleClose,\n  activeRoomLink,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n  setErrorMessage,\n  theme,\n}: {\n  handleClose: () => void;\n  activeRoomLink: string;\n  username: string;\n  onUsernameChange: (username: string) => void;\n  onRoomCreate: () => void;\n  onRoomDestroy: () => void;\n  setErrorMessage: (message: string) => void;\n  theme: AppState[\"theme\"];\n}) => {\n  const roomLinkInput = useRef<HTMLInputElement>(null);\n\n  const copyRoomLink = async () => {\n    try {\n      await copyTextToSystemClipboard(activeRoomLink);\n    } catch (error: any) {\n      setErrorMessage(error.message);\n    }\n    if (roomLinkInput.current) {\n      roomLinkInput.current.select();\n    }\n  };\n\n  const shareRoomLink = async () => {\n    try {\n      await navigator.share({\n        title: t(\"roomDialog.shareTitle\"),\n        text: t(\"roomDialog.shareTitle\"),\n        url: activeRoomLink,\n      });\n    } catch (error: any) {\n      // Just ignore.\n    }\n  };\n\n  const selectInput = (event: React.MouseEvent<HTMLInputElement>) => {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLInputElement).select();\n    }\n  };\n\n  const renderRoomDialog = () => {\n    return (\n      <div className=\"RoomDialog-modal\">\n        {!activeRoomLink && (\n          <>\n            <p>{t(\"roomDialog.desc_intro\")}</p>\n            <p>{`🔒 ${t(\"roomDialog.desc_privacy\")}`}</p>\n            <div className=\"RoomDialog-sessionStartButtonContainer\">\n              <ToolButton\n                className=\"RoomDialog-startSession\"\n                type=\"button\"\n                icon={start}\n                title={t(\"roomDialog.button_startSession\")}\n                aria-label={t(\"roomDialog.button_startSession\")}\n                showAriaLabel={true}\n                onClick={onRoomCreate}\n              />\n            </div>\n          </>\n        )}\n        {activeRoomLink && (\n          <>\n            <p>{t(\"roomDialog.desc_inProgressIntro\")}</p>\n            <p>{t(\"roomDialog.desc_shareLink\")}</p>\n            <div className=\"RoomDialog-linkContainer\">\n              <Stack.Row gap={2}>\n                {\"share\" in navigator ? (\n                  <ToolButton\n                    type=\"button\"\n                    icon={getShareIcon()}\n                    title={t(\"labels.share\")}\n                    aria-label={t(\"labels.share\")}\n                    onClick={shareRoomLink}\n                  />\n                ) : null}\n                <ToolButton\n                  type=\"button\"\n                  icon={clipboard}\n                  title={t(\"labels.copy\")}\n                  aria-label={t(\"labels.copy\")}\n                  onClick={copyRoomLink}\n                />\n              </Stack.Row>\n              <input\n                type=\"text\"\n                value={activeRoomLink}\n                readOnly={true}\n                className=\"RoomDialog-link\"\n                ref={roomLinkInput}\n                onPointerDown={selectInput}\n              />\n            </div>\n            <div className=\"RoomDialog-usernameContainer\">\n              <label className=\"RoomDialog-usernameLabel\" htmlFor=\"username\">\n                {t(\"labels.yourName\")}\n              </label>\n              <input\n                type=\"text\"\n                id=\"username\"\n                value={username || \"\"}\n                className=\"RoomDialog-username TextInput\"\n                onChange={(event) => onUsernameChange(event.target.value)}\n                onKeyPress={(event) => event.key === \"Enter\" && handleClose()}\n              />\n            </div>\n            <p>\n              <span role=\"img\" aria-hidden=\"true\" className=\"RoomDialog-emoji\">\n                {\"🔒\"}\n              </span>{\" \"}\n              {t(\"roomDialog.desc_privacy\")}\n            </p>\n            <p>{t(\"roomDialog.desc_exitSession\")}</p>\n            <div className=\"RoomDialog-sessionStartButtonContainer\">\n              <ToolButton\n                className=\"RoomDialog-stopSession\"\n                type=\"button\"\n                icon={stop}\n                title={t(\"roomDialog.button_stopSession\")}\n                aria-label={t(\"roomDialog.button_stopSession\")}\n                showAriaLabel={true}\n                onClick={onRoomDestroy}\n              />\n            </div>\n          </>\n        )}\n      </div>\n    );\n  };\n  return (\n    <Dialog\n      small\n      onCloseRequest={handleClose}\n      title={t(\"labels.liveCollaboration\")}\n      theme={theme}\n    >\n      {renderRoomDialog()}\n    </Dialog>\n  );\n};\n\nexport default RoomDialog;\n","import { ExcalidrawElement } from \"../../element/types\";\nimport { AppState } from \"../../types\";\n\nexport type ReconciledElements = readonly ExcalidrawElement[] & {\n  _brand: \"reconciledElements\";\n};\n\nexport type BroadcastedExcalidrawElement = ExcalidrawElement & {\n  parent?: string;\n};\n\nconst shouldDiscardRemoteElement = (\n  localAppState: AppState,\n  local: ExcalidrawElement | undefined,\n  remote: BroadcastedExcalidrawElement,\n): boolean => {\n  if (\n    local &&\n    // local element is being edited\n    (local.id === localAppState.editingElement?.id ||\n      local.id === localAppState.resizingElement?.id ||\n      local.id === localAppState.draggingElement?.id ||\n      // local element is newer\n      local.version > remote.version ||\n      // resolve conflicting edits deterministically by taking the one with\n      // the lowest versionNonce\n      (local.version === remote.version &&\n        local.versionNonce < remote.versionNonce))\n  ) {\n    return true;\n  }\n  return false;\n};\n\nconst getElementsMapWithIndex = <T extends ExcalidrawElement>(\n  elements: readonly T[],\n) =>\n  elements.reduce(\n    (\n      acc: {\n        [key: string]: [element: T, index: number] | undefined;\n      },\n      element: T,\n      idx,\n    ) => {\n      acc[element.id] = [element, idx];\n      return acc;\n    },\n    {},\n  );\n\nexport const reconcileElements = (\n  localElements: readonly ExcalidrawElement[],\n  remoteElements: readonly BroadcastedExcalidrawElement[],\n  localAppState: AppState,\n): ReconciledElements => {\n  const localElementsData =\n    getElementsMapWithIndex<ExcalidrawElement>(localElements);\n\n  const reconciledElements: ExcalidrawElement[] = localElements.slice();\n\n  const duplicates = new WeakMap<ExcalidrawElement, true>();\n\n  let cursor = 0;\n  let offset = 0;\n\n  let remoteElementIdx = -1;\n  for (const remoteElement of remoteElements) {\n    remoteElementIdx++;\n\n    const local = localElementsData[remoteElement.id];\n\n    if (shouldDiscardRemoteElement(localAppState, local?.[0], remoteElement)) {\n      if (remoteElement.parent) {\n        delete remoteElement.parent;\n      }\n\n      continue;\n    }\n\n    if (local) {\n      // mark for removal since it'll be replaced with the remote element\n      duplicates.set(local[0], true);\n    }\n\n    // parent may not be defined in case the remote client is running an older\n    // excalidraw version\n    const parent =\n      remoteElement.parent || remoteElements[remoteElementIdx - 1]?.id || null;\n\n    if (parent != null) {\n      delete remoteElement.parent;\n\n      // ^ indicates the element is the first in elements array\n      if (parent === \"^\") {\n        offset++;\n        if (cursor === 0) {\n          reconciledElements.unshift(remoteElement);\n          localElementsData[remoteElement.id] = [\n            remoteElement,\n            cursor - offset,\n          ];\n        } else {\n          reconciledElements.splice(cursor + 1, 0, remoteElement);\n          localElementsData[remoteElement.id] = [\n            remoteElement,\n            cursor + 1 - offset,\n          ];\n          cursor++;\n        }\n      } else {\n        let idx = localElementsData[parent]\n          ? localElementsData[parent]![1]\n          : null;\n        if (idx != null) {\n          idx += offset;\n        }\n        if (idx != null && idx >= cursor) {\n          reconciledElements.splice(idx + 1, 0, remoteElement);\n          offset++;\n          localElementsData[remoteElement.id] = [\n            remoteElement,\n            idx + 1 - offset,\n          ];\n          cursor = idx + 1;\n        } else if (idx != null) {\n          reconciledElements.splice(cursor + 1, 0, remoteElement);\n          offset++;\n          localElementsData[remoteElement.id] = [\n            remoteElement,\n            cursor + 1 - offset,\n          ];\n          cursor++;\n        } else {\n          reconciledElements.push(remoteElement);\n          localElementsData[remoteElement.id] = [\n            remoteElement,\n            reconciledElements.length - 1 - offset,\n          ];\n        }\n      }\n      // no parent z-index information, local element exists → replace in place\n    } else if (local) {\n      reconciledElements[local[1]] = remoteElement;\n      localElementsData[remoteElement.id] = [remoteElement, local[1]];\n      // otherwise push to the end\n    } else {\n      reconciledElements.push(remoteElement);\n      localElementsData[remoteElement.id] = [\n        remoteElement,\n        reconciledElements.length - 1 - offset,\n      ];\n    }\n  }\n\n  const ret: readonly ExcalidrawElement[] = reconciledElements.filter(\n    (element) => !duplicates.has(element),\n  );\n\n  return ret as ReconciledElements;\n};\n","import throttle from \"lodash.throttle\";\nimport { PureComponent } from \"react\";\nimport { ExcalidrawImperativeAPI } from \"../../types\";\nimport { ErrorDialog } from \"../../components/ErrorDialog\";\nimport { APP_NAME, ENV, EVENT } from \"../../constants\";\nimport { ImportedDataState } from \"../../data/types\";\nimport {\n  ExcalidrawElement,\n  InitializedExcalidrawImageElement,\n} from \"../../element/types\";\nimport { getSceneVersion } from \"../../packages/excalidraw/index\";\nimport { Collaborator, Gesture } from \"../../types\";\nimport {\n  preventUnload,\n  resolvablePromise,\n  withBatchedUpdates,\n} from \"../../utils\";\nimport {\n  CURSOR_SYNC_TIMEOUT,\n  FILE_UPLOAD_MAX_BYTES,\n  FIREBASE_STORAGE_PREFIXES,\n  INITIAL_SCENE_UPDATE_TIMEOUT,\n  LOAD_IMAGES_TIMEOUT,\n  SCENE,\n  STORAGE_KEYS,\n  SYNC_FULL_SCENE_INTERVAL_MS,\n} from \"../app_constants\";\nimport {\n  generateCollaborationLinkData,\n  getCollaborationLink,\n  getCollabServer,\n  SocketUpdateDataSource,\n} from \"../data\";\nimport {\n  isSavedToFirebase,\n  loadFilesFromFirebase,\n  loadFromFirebase,\n  saveFilesToFirebase,\n  saveToFirebase,\n} from \"../data/firebase\";\nimport {\n  importUsernameFromLocalStorage,\n  saveUsernameToLocalStorage,\n} from \"../data/localStorage\";\nimport Portal from \"./Portal\";\nimport RoomDialog from \"./RoomDialog\";\nimport { createInverseContext } from \"../../createInverseContext\";\nimport { t } from \"../../i18n\";\nimport { UserIdleState } from \"../../types\";\nimport { IDLE_THRESHOLD, ACTIVE_THRESHOLD } from \"../../constants\";\nimport { trackEvent } from \"../../analytics\";\nimport { isInvisiblySmallElement } from \"../../element\";\nimport {\n  encodeFilesForUpload,\n  FileManager,\n  updateStaleImageStatuses,\n} from \"../data/FileManager\";\nimport { AbortError } from \"../../errors\";\nimport {\n  isImageElement,\n  isInitializedImageElement,\n} from \"../../element/typeChecks\";\nimport { newElementWith } from \"../../element/mutateElement\";\nimport {\n  ReconciledElements,\n  reconcileElements as _reconcileElements,\n} from \"./reconciliation\";\nimport { decryptData } from \"../../data/encryption\";\nimport { resetBrowserStateVersions } from \"../data/tabSync\";\n\ninterface CollabState {\n  modalIsShown: boolean;\n  errorMessage: string;\n  username: string;\n  userState: UserIdleState;\n  activeRoomLink: string;\n}\n\ntype CollabInstance = InstanceType<typeof CollabWrapper>;\n\nexport interface CollabAPI {\n  /** function so that we can access the latest value from stale callbacks */\n  isCollaborating: () => boolean;\n  username: CollabState[\"username\"];\n  userState: CollabState[\"userState\"];\n  onPointerUpdate: CollabInstance[\"onPointerUpdate\"];\n  initializeSocketClient: CollabInstance[\"initializeSocketClient\"];\n  onCollabButtonClick: CollabInstance[\"onCollabButtonClick\"];\n  broadcastElements: CollabInstance[\"broadcastElements\"];\n  fetchImageFilesFromFirebase: CollabInstance[\"fetchImageFilesFromFirebase\"];\n  setUsername: (username: string) => void;\n}\n\ninterface Props {\n  excalidrawAPI: ExcalidrawImperativeAPI;\n  onRoomClose?: () => void;\n}\n\nconst {\n  Context: CollabContext,\n  Consumer: CollabContextConsumer,\n  Provider: CollabContextProvider,\n} = createInverseContext<{ api: CollabAPI | null }>({ api: null });\n\nexport { CollabContext, CollabContextConsumer };\n\nclass CollabWrapper extends PureComponent<Props, CollabState> {\n  portal: Portal;\n  fileManager: FileManager;\n  excalidrawAPI: Props[\"excalidrawAPI\"];\n  isCollaborating: boolean = false;\n  activeIntervalId: number | null;\n  idleTimeoutId: number | null;\n\n  private socketInitializationTimer?: number;\n  private lastBroadcastedOrReceivedSceneVersion: number = -1;\n  private collaborators = new Map<string, Collaborator>();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      modalIsShown: false,\n      errorMessage: \"\",\n      username: importUsernameFromLocalStorage() || \"\",\n      userState: UserIdleState.ACTIVE,\n      activeRoomLink: \"\",\n    };\n    this.portal = new Portal(this);\n    this.fileManager = new FileManager({\n      getFiles: async (fileIds) => {\n        const { roomId, roomKey } = this.portal;\n        if (!roomId || !roomKey) {\n          throw new AbortError();\n        }\n\n        return loadFilesFromFirebase(`files/rooms/${roomId}`, roomKey, fileIds);\n      },\n      saveFiles: async ({ addedFiles }) => {\n        const { roomId, roomKey } = this.portal;\n        if (!roomId || !roomKey) {\n          throw new AbortError();\n        }\n\n        return saveFilesToFirebase({\n          prefix: `${FIREBASE_STORAGE_PREFIXES.collabFiles}/${roomId}`,\n          files: await encodeFilesForUpload({\n            files: addedFiles,\n            encryptionKey: roomKey,\n            maxBytes: FILE_UPLOAD_MAX_BYTES,\n          }),\n        });\n      },\n    });\n    this.excalidrawAPI = props.excalidrawAPI;\n    this.activeIntervalId = null;\n    this.idleTimeoutId = null;\n  }\n\n  componentDidMount() {\n    window.addEventListener(EVENT.BEFORE_UNLOAD, this.beforeUnload);\n    window.addEventListener(EVENT.UNLOAD, this.onUnload);\n\n    if (\n      process.env.NODE_ENV === ENV.TEST ||\n      process.env.NODE_ENV === ENV.DEVELOPMENT\n    ) {\n      window.collab = window.collab || ({} as Window[\"collab\"]);\n      Object.defineProperties(window, {\n        collab: {\n          configurable: true,\n          value: this,\n        },\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(EVENT.BEFORE_UNLOAD, this.beforeUnload);\n    window.removeEventListener(EVENT.UNLOAD, this.onUnload);\n    window.removeEventListener(EVENT.POINTER_MOVE, this.onPointerMove);\n    window.removeEventListener(\n      EVENT.VISIBILITY_CHANGE,\n      this.onVisibilityChange,\n    );\n    if (this.activeIntervalId) {\n      window.clearInterval(this.activeIntervalId);\n      this.activeIntervalId = null;\n    }\n    if (this.idleTimeoutId) {\n      window.clearTimeout(this.idleTimeoutId);\n      this.idleTimeoutId = null;\n    }\n  }\n\n  private onUnload = () => {\n    this.destroySocketClient({ isUnload: true });\n  };\n\n  private beforeUnload = withBatchedUpdates((event: BeforeUnloadEvent) => {\n    const syncableElements = this.getSyncableElements(\n      this.getSceneElementsIncludingDeleted(),\n    );\n\n    if (\n      this.isCollaborating &&\n      (this.fileManager.shouldPreventUnload(syncableElements) ||\n        !isSavedToFirebase(this.portal, syncableElements))\n    ) {\n      // this won't run in time if user decides to leave the site, but\n      //  the purpose is to run in immediately after user decides to stay\n      this.saveCollabRoomToFirebase(syncableElements);\n\n      preventUnload(event);\n    }\n\n    if (this.isCollaborating || this.portal.roomId) {\n      try {\n        localStorage?.setItem(\n          STORAGE_KEYS.LOCAL_STORAGE_KEY_COLLAB_FORCE_FLAG,\n          JSON.stringify({\n            timestamp: Date.now(),\n            room: this.portal.roomId,\n          }),\n        );\n      } catch {}\n    }\n  });\n\n  saveCollabRoomToFirebase = async (\n    syncableElements: readonly ExcalidrawElement[] = this.getSyncableElements(\n      this.excalidrawAPI.getSceneElementsIncludingDeleted(),\n    ),\n  ) => {\n    try {\n      await saveToFirebase(this.portal, syncableElements);\n    } catch (error: any) {\n      console.error(error);\n    }\n  };\n\n  openPortal = async () => {\n    trackEvent(\"share\", \"room creation\");\n    return this.initializeSocketClient(null);\n  };\n\n  closePortal = () => {\n    this.queueBroadcastAllElements.cancel();\n    this.loadImageFiles.cancel();\n\n    this.saveCollabRoomToFirebase();\n    if (window.confirm(t(\"alerts.collabStopOverridePrompt\"))) {\n      // hack to ensure that we prefer we disregard any new browser state\n      // that could have been saved in other tabs while we were collaborating\n      resetBrowserStateVersions();\n\n      window.history.pushState({}, APP_NAME, window.location.origin);\n      this.destroySocketClient();\n      trackEvent(\"share\", \"room closed\");\n\n      this.props.onRoomClose?.();\n\n      const elements = this.excalidrawAPI\n        .getSceneElementsIncludingDeleted()\n        .map((element) => {\n          if (isImageElement(element) && element.status === \"saved\") {\n            return newElementWith(element, { status: \"pending\" });\n          }\n          return element;\n        });\n\n      this.excalidrawAPI.updateScene({\n        elements,\n        commitToHistory: false,\n      });\n    }\n  };\n\n  private destroySocketClient = (opts?: { isUnload: boolean }) => {\n    if (!opts?.isUnload) {\n      this.collaborators = new Map();\n      this.excalidrawAPI.updateScene({\n        collaborators: this.collaborators,\n      });\n      this.setState({\n        activeRoomLink: \"\",\n      });\n      this.isCollaborating = false;\n    }\n    this.lastBroadcastedOrReceivedSceneVersion = -1;\n    this.portal.close();\n    this.fileManager.reset();\n  };\n\n  private fetchImageFilesFromFirebase = async (scene: {\n    elements: readonly ExcalidrawElement[];\n  }) => {\n    const unfetchedImages = scene.elements\n      .filter((element) => {\n        return (\n          isInitializedImageElement(element) &&\n          !this.fileManager.isFileHandled(element.fileId) &&\n          !element.isDeleted &&\n          element.status === \"saved\"\n        );\n      })\n      .map((element) => (element as InitializedExcalidrawImageElement).fileId);\n\n    return await this.fileManager.getFiles(unfetchedImages);\n  };\n\n  private decryptPayload = async (\n    iv: Uint8Array,\n    encryptedData: ArrayBuffer,\n    decryptionKey: string,\n  ) => {\n    try {\n      const decrypted = await decryptData(iv, encryptedData, decryptionKey);\n\n      const decodedData = new TextDecoder(\"utf-8\").decode(\n        new Uint8Array(decrypted),\n      );\n      return JSON.parse(decodedData);\n    } catch (error) {\n      window.alert(t(\"alerts.decryptFailed\"));\n      console.error(error);\n      return {\n        type: \"INVALID_RESPONSE\",\n      };\n    }\n  };\n\n  private initializeSocketClient = async (\n    existingRoomLinkData: null | { roomId: string; roomKey: string },\n  ): Promise<ImportedDataState | null> => {\n    if (this.portal.socket) {\n      return null;\n    }\n\n    let roomId;\n    let roomKey;\n\n    if (existingRoomLinkData) {\n      ({ roomId, roomKey } = existingRoomLinkData);\n    } else {\n      ({ roomId, roomKey } = await generateCollaborationLinkData());\n      window.history.pushState(\n        {},\n        APP_NAME,\n        getCollaborationLink({ roomId, roomKey }),\n      );\n    }\n\n    const scenePromise = resolvablePromise<ImportedDataState | null>();\n\n    this.isCollaborating = true;\n\n    const { default: socketIOClient } = await import(\n      /* webpackChunkName: \"socketIoClient\" */ \"socket.io-client\"\n    );\n\n    try {\n      const socketServerData = await getCollabServer();\n\n      this.portal.socket = this.portal.open(\n        socketIOClient(socketServerData.url, {\n          transports: socketServerData.polling\n            ? [\"websocket\", \"polling\"]\n            : [\"websocket\"],\n        }),\n        roomId,\n        roomKey,\n      );\n    } catch (error: any) {\n      console.error(error);\n      this.setState({ errorMessage: error.message });\n      return null;\n    }\n\n    if (!existingRoomLinkData) {\n      const elements = this.excalidrawAPI.getSceneElements().map((element) => {\n        if (isImageElement(element) && element.status === \"saved\") {\n          return newElementWith(element, { status: \"pending\" });\n        }\n        return element;\n      });\n      // remove deleted elements from elements array & history to ensure we don't\n      // expose potentially sensitive user data in case user manually deletes\n      // existing elements (or clears scene), which would otherwise be persisted\n      // to database even if deleted before creating the room.\n      this.excalidrawAPI.history.clear();\n      this.excalidrawAPI.updateScene({\n        elements,\n        commitToHistory: true,\n      });\n\n      this.broadcastElements(elements);\n\n      const syncableElements = this.getSyncableElements(elements);\n      this.saveCollabRoomToFirebase(syncableElements);\n    }\n\n    // fallback in case you're not alone in the room but still don't receive\n    // initial SCENE_INIT message\n    this.socketInitializationTimer = window.setTimeout(() => {\n      this.initializeRoom({\n        roomLinkData: existingRoomLinkData,\n        fetchScene: true,\n      });\n      scenePromise.resolve(null);\n    }, INITIAL_SCENE_UPDATE_TIMEOUT);\n\n    // All socket listeners are moving to Portal\n    this.portal.socket.on(\n      \"client-broadcast\",\n      async (encryptedData: ArrayBuffer, iv: Uint8Array) => {\n        if (!this.portal.roomKey) {\n          return;\n        }\n\n        const decryptedData = await this.decryptPayload(\n          iv,\n          encryptedData,\n          this.portal.roomKey,\n        );\n\n        switch (decryptedData.type) {\n          case \"INVALID_RESPONSE\":\n            return;\n          case SCENE.INIT: {\n            if (!this.portal.socketInitialized) {\n              this.initializeRoom({ fetchScene: false });\n              const remoteElements = decryptedData.payload.elements;\n              const reconciledElements = this.reconcileElements(remoteElements);\n              this.handleRemoteSceneUpdate(reconciledElements, {\n                init: true,\n              });\n              // noop if already resolved via init from firebase\n              scenePromise.resolve({\n                elements: reconciledElements,\n                scrollToContent: true,\n              });\n            }\n            break;\n          }\n          case SCENE.UPDATE:\n            this.handleRemoteSceneUpdate(\n              this.reconcileElements(decryptedData.payload.elements),\n            );\n            break;\n          case \"MOUSE_LOCATION\": {\n            const { pointer, button, username, selectedElementIds } =\n              decryptedData.payload;\n            const socketId: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"socketId\"] =\n              decryptedData.payload.socketId ||\n              // @ts-ignore legacy, see #2094 (#2097)\n              decryptedData.payload.socketID;\n\n            const collaborators = new Map(this.collaborators);\n            const user = collaborators.get(socketId) || {}!;\n            user.pointer = pointer;\n            user.button = button;\n            user.selectedElementIds = selectedElementIds;\n            user.username = username;\n            collaborators.set(socketId, user);\n            this.excalidrawAPI.updateScene({\n              collaborators,\n            });\n            break;\n          }\n          case \"IDLE_STATUS\": {\n            const { userState, socketId, username } = decryptedData.payload;\n            const collaborators = new Map(this.collaborators);\n            const user = collaborators.get(socketId) || {}!;\n            user.userState = userState;\n            user.username = username;\n            this.excalidrawAPI.updateScene({\n              collaborators,\n            });\n            break;\n          }\n        }\n      },\n    );\n\n    this.portal.socket.on(\"first-in-room\", async () => {\n      if (this.portal.socket) {\n        this.portal.socket.off(\"first-in-room\");\n      }\n      const sceneData = await this.initializeRoom({\n        fetchScene: true,\n        roomLinkData: existingRoomLinkData,\n      });\n      scenePromise.resolve(sceneData);\n    });\n\n    this.initializeIdleDetector();\n\n    this.setState({\n      activeRoomLink: window.location.href,\n    });\n\n    return scenePromise;\n  };\n\n  private initializeRoom = async ({\n    fetchScene,\n    roomLinkData,\n  }:\n    | {\n        fetchScene: true;\n        roomLinkData: { roomId: string; roomKey: string } | null;\n      }\n    | { fetchScene: false; roomLinkData?: null }) => {\n    clearTimeout(this.socketInitializationTimer!);\n    if (fetchScene && roomLinkData && this.portal.socket) {\n      this.excalidrawAPI.resetScene();\n\n      try {\n        const elements = await loadFromFirebase(\n          roomLinkData.roomId,\n          roomLinkData.roomKey,\n          this.portal.socket,\n        );\n        if (elements) {\n          this.setLastBroadcastedOrReceivedSceneVersion(\n            getSceneVersion(elements),\n          );\n\n          return {\n            elements,\n            scrollToContent: true,\n          };\n        }\n      } catch (error: any) {\n        // log the error and move on. other peers will sync us the scene.\n        console.error(error);\n      } finally {\n        this.portal.socketInitialized = true;\n      }\n    } else {\n      this.portal.socketInitialized = true;\n    }\n    return null;\n  };\n\n  private reconcileElements = (\n    remoteElements: readonly ExcalidrawElement[],\n  ): ReconciledElements => {\n    const localElements = this.getSceneElementsIncludingDeleted();\n    const appState = this.excalidrawAPI.getAppState();\n\n    const reconciledElements = _reconcileElements(\n      localElements,\n      remoteElements,\n      appState,\n    );\n\n    // Avoid broadcasting to the rest of the collaborators the scene\n    // we just received!\n    // Note: this needs to be set before updating the scene as it\n    // synchronously calls render.\n    this.setLastBroadcastedOrReceivedSceneVersion(\n      getSceneVersion(reconciledElements),\n    );\n\n    return reconciledElements;\n  };\n\n  private loadImageFiles = throttle(async () => {\n    const { loadedFiles, erroredFiles } =\n      await this.fetchImageFilesFromFirebase({\n        elements: this.excalidrawAPI.getSceneElementsIncludingDeleted(),\n      });\n\n    this.excalidrawAPI.addFiles(loadedFiles);\n\n    updateStaleImageStatuses({\n      excalidrawAPI: this.excalidrawAPI,\n      erroredFiles,\n      elements: this.excalidrawAPI.getSceneElementsIncludingDeleted(),\n    });\n  }, LOAD_IMAGES_TIMEOUT);\n\n  private handleRemoteSceneUpdate = (\n    elements: ReconciledElements,\n    { init = false }: { init?: boolean } = {},\n  ) => {\n    this.excalidrawAPI.updateScene({\n      elements,\n      commitToHistory: !!init,\n    });\n\n    // We haven't yet implemented multiplayer undo functionality, so we clear the undo stack\n    // when we receive any messages from another peer. This UX can be pretty rough -- if you\n    // undo, a user makes a change, and then try to redo, your element(s) will be lost. However,\n    // right now we think this is the right tradeoff.\n    this.excalidrawAPI.history.clear();\n\n    this.loadImageFiles();\n  };\n\n  private onPointerMove = () => {\n    if (this.idleTimeoutId) {\n      window.clearTimeout(this.idleTimeoutId);\n      this.idleTimeoutId = null;\n    }\n\n    this.idleTimeoutId = window.setTimeout(this.reportIdle, IDLE_THRESHOLD);\n\n    if (!this.activeIntervalId) {\n      this.activeIntervalId = window.setInterval(\n        this.reportActive,\n        ACTIVE_THRESHOLD,\n      );\n    }\n  };\n\n  private onVisibilityChange = () => {\n    if (document.hidden) {\n      if (this.idleTimeoutId) {\n        window.clearTimeout(this.idleTimeoutId);\n        this.idleTimeoutId = null;\n      }\n      if (this.activeIntervalId) {\n        window.clearInterval(this.activeIntervalId);\n        this.activeIntervalId = null;\n      }\n      this.onIdleStateChange(UserIdleState.AWAY);\n    } else {\n      this.idleTimeoutId = window.setTimeout(this.reportIdle, IDLE_THRESHOLD);\n      this.activeIntervalId = window.setInterval(\n        this.reportActive,\n        ACTIVE_THRESHOLD,\n      );\n      this.onIdleStateChange(UserIdleState.ACTIVE);\n    }\n  };\n\n  private reportIdle = () => {\n    this.onIdleStateChange(UserIdleState.IDLE);\n    if (this.activeIntervalId) {\n      window.clearInterval(this.activeIntervalId);\n      this.activeIntervalId = null;\n    }\n  };\n\n  private reportActive = () => {\n    this.onIdleStateChange(UserIdleState.ACTIVE);\n  };\n\n  private initializeIdleDetector = () => {\n    document.addEventListener(EVENT.POINTER_MOVE, this.onPointerMove);\n    document.addEventListener(EVENT.VISIBILITY_CHANGE, this.onVisibilityChange);\n  };\n\n  setCollaborators(sockets: string[]) {\n    this.setState((state) => {\n      const collaborators: InstanceType<typeof CollabWrapper>[\"collaborators\"] =\n        new Map();\n      for (const socketId of sockets) {\n        if (this.collaborators.has(socketId)) {\n          collaborators.set(socketId, this.collaborators.get(socketId)!);\n        } else {\n          collaborators.set(socketId, {});\n        }\n      }\n      this.collaborators = collaborators;\n      this.excalidrawAPI.updateScene({ collaborators });\n    });\n  }\n\n  public setLastBroadcastedOrReceivedSceneVersion = (version: number) => {\n    this.lastBroadcastedOrReceivedSceneVersion = version;\n  };\n\n  public getLastBroadcastedOrReceivedSceneVersion = () => {\n    return this.lastBroadcastedOrReceivedSceneVersion;\n  };\n\n  public getSceneElementsIncludingDeleted = () => {\n    return this.excalidrawAPI.getSceneElementsIncludingDeleted();\n  };\n\n  onPointerUpdate = throttle(\n    (payload: {\n      pointer: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"pointer\"];\n      button: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"button\"];\n      pointersMap: Gesture[\"pointers\"];\n    }) => {\n      payload.pointersMap.size < 2 &&\n        this.portal.socket &&\n        this.portal.broadcastMouseLocation(payload);\n    },\n    CURSOR_SYNC_TIMEOUT,\n  );\n\n  onIdleStateChange = (userState: UserIdleState) => {\n    this.setState({ userState });\n    this.portal.broadcastIdleChange(userState);\n  };\n\n  broadcastElements = (elements: readonly ExcalidrawElement[]) => {\n    if (\n      getSceneVersion(elements) >\n      this.getLastBroadcastedOrReceivedSceneVersion()\n    ) {\n      this.portal.broadcastScene(SCENE.UPDATE, elements, false);\n      this.lastBroadcastedOrReceivedSceneVersion = getSceneVersion(elements);\n      this.queueBroadcastAllElements();\n    }\n  };\n\n  queueBroadcastAllElements = throttle(() => {\n    this.portal.broadcastScene(\n      SCENE.UPDATE,\n      this.excalidrawAPI.getSceneElementsIncludingDeleted(),\n      true,\n    );\n    const currentVersion = this.getLastBroadcastedOrReceivedSceneVersion();\n    const newVersion = Math.max(\n      currentVersion,\n      getSceneVersion(this.getSceneElementsIncludingDeleted()),\n    );\n    this.setLastBroadcastedOrReceivedSceneVersion(newVersion);\n  }, SYNC_FULL_SCENE_INTERVAL_MS);\n\n  handleClose = () => {\n    this.setState({ modalIsShown: false });\n  };\n\n  setUsername = (username: string) => {\n    this.setState({ username });\n  };\n\n  onUsernameChange = (username: string) => {\n    this.setUsername(username);\n    saveUsernameToLocalStorage(username);\n  };\n\n  onCollabButtonClick = () => {\n    this.setState({\n      modalIsShown: true,\n    });\n  };\n\n  isSyncableElement = (element: ExcalidrawElement) => {\n    return element.isDeleted || !isInvisiblySmallElement(element);\n  };\n\n  getSyncableElements = (elements: readonly ExcalidrawElement[]) =>\n    elements.filter((element) => this.isSyncableElement(element));\n\n  /** PRIVATE. Use `this.getContextValue()` instead. */\n  private contextValue: CollabAPI | null = null;\n\n  /** Getter of context value. Returned object is stable. */\n  getContextValue = (): CollabAPI => {\n    if (!this.contextValue) {\n      this.contextValue = {} as CollabAPI;\n    }\n\n    this.contextValue.isCollaborating = () => this.isCollaborating;\n    this.contextValue.username = this.state.username;\n    this.contextValue.onPointerUpdate = this.onPointerUpdate;\n    this.contextValue.initializeSocketClient = this.initializeSocketClient;\n    this.contextValue.onCollabButtonClick = this.onCollabButtonClick;\n    this.contextValue.broadcastElements = this.broadcastElements;\n    this.contextValue.fetchImageFilesFromFirebase =\n      this.fetchImageFilesFromFirebase;\n    this.contextValue.setUsername = this.setUsername;\n    return this.contextValue;\n  };\n\n  render() {\n    const { modalIsShown, username, errorMessage, activeRoomLink } = this.state;\n\n    return (\n      <>\n        {modalIsShown && (\n          <RoomDialog\n            handleClose={this.handleClose}\n            activeRoomLink={activeRoomLink}\n            username={username}\n            onUsernameChange={this.onUsernameChange}\n            onRoomCreate={this.openPortal}\n            onRoomDestroy={this.closePortal}\n            setErrorMessage={(errorMessage) => {\n              this.setState({ errorMessage });\n            }}\n            theme={this.excalidrawAPI.getAppState().theme}\n          />\n        )}\n        {errorMessage && (\n          <ErrorDialog\n            message={errorMessage}\n            onClose={() => this.setState({ errorMessage: \"\" })}\n          />\n        )}\n        <CollabContextProvider\n          value={{\n            api: this.getContextValue(),\n          }}\n        />\n      </>\n    );\n  }\n}\n\ndeclare global {\n  interface Window {\n    collab: InstanceType<typeof CollabWrapper>;\n  }\n}\n\nif (\n  process.env.NODE_ENV === ENV.TEST ||\n  process.env.NODE_ENV === ENV.DEVELOPMENT\n) {\n  window.collab = window.collab || ({} as Window[\"collab\"]);\n}\n\nexport default CollabWrapper;\n","import React from \"react\";\n\nexport const createInverseContext = <T extends unknown = null>(\n  initialValue: T,\n) => {\n  const Context = React.createContext(initialValue) as React.Context<T> & {\n    _updateProviderValue?: (value: T) => void;\n  };\n\n  class InverseConsumer extends React.Component {\n    state = { value: initialValue };\n    constructor(props: any) {\n      super(props);\n      Context._updateProviderValue = (value: T) => this.setState({ value });\n    }\n    render() {\n      return (\n        <Context.Provider value={this.state.value}>\n          {this.props.children}\n        </Context.Provider>\n      );\n    }\n  }\n\n  class InverseProvider extends React.Component<{ value: T }> {\n    componentDidMount() {\n      Context._updateProviderValue?.(this.props.value);\n    }\n    componentDidUpdate() {\n      Context._updateProviderValue?.(this.props.value);\n    }\n    render() {\n      return <Context.Consumer>{() => this.props.children}</Context.Consumer>;\n    }\n  }\n\n  return {\n    Context,\n    Consumer: InverseConsumer,\n    Provider: InverseProvider,\n  };\n};\n","import React from \"react\";\nimport * as i18n from \"../../i18n\";\n\nexport const LanguageList = ({\n  onChange,\n  languages = i18n.languages,\n  currentLangCode = i18n.getLanguage().code,\n}: {\n  languages?: { code: string; label: string }[];\n  onChange: (langCode: i18n.Language[\"code\"]) => void;\n  currentLangCode?: i18n.Language[\"code\"];\n}) => (\n  <React.Fragment>\n    <select\n      className=\"dropdown-select dropdown-select__language\"\n      onChange={({ target }) => onChange(target.value)}\n      value={currentLangCode}\n      aria-label={i18n.t(\"buttons.selectLanguage\")}\n    >\n      <option key={i18n.defaultLang.code} value={i18n.defaultLang.code}>\n        {i18n.defaultLang.label}\n      </option>\n      {languages.map((lang) => (\n        <option key={lang.code} value={lang.code}>\n          {lang.label}\n        </option>\n      ))}\n    </select>\n  </React.Fragment>\n);\n","import { useEffect, useState } from \"react\";\nimport { debounce, getVersion, nFormatter } from \"../utils\";\nimport {\n  getElementsStorageSize,\n  getTotalStorageSize,\n} from \"./data/localStorage\";\nimport { DEFAULT_VERSION } from \"../constants\";\nimport { t } from \"../i18n\";\nimport { copyTextToSystemClipboard } from \"../clipboard\";\ntype StorageSizes = { scene: number; total: number };\n\nconst STORAGE_SIZE_TIMEOUT = 500;\n\nconst getStorageSizes = debounce((cb: (sizes: StorageSizes) => void) => {\n  cb({\n    scene: getElementsStorageSize(),\n    total: getTotalStorageSize(),\n  });\n}, STORAGE_SIZE_TIMEOUT);\n\ntype Props = {\n  setToastMessage: (message: string) => void;\n};\nconst CustomStats = (props: Props) => {\n  const [storageSizes, setStorageSizes] = useState<StorageSizes>({\n    scene: 0,\n    total: 0,\n  });\n\n  useEffect(() => {\n    getStorageSizes((sizes) => {\n      setStorageSizes(sizes);\n    });\n  });\n  useEffect(() => () => getStorageSizes.cancel(), []);\n\n  const version = getVersion();\n  let hash;\n  let timestamp;\n\n  if (version !== DEFAULT_VERSION) {\n    timestamp = version.slice(0, 16).replace(\"T\", \" \");\n    hash = version.slice(21);\n  } else {\n    timestamp = t(\"stats.versionNotAvailable\");\n  }\n\n  return (\n    <>\n      <tr>\n        <th colSpan={2}>{t(\"stats.storage\")}</th>\n      </tr>\n      <tr>\n        <td>{t(\"stats.scene\")}</td>\n        <td>{nFormatter(storageSizes.scene, 1)}</td>\n      </tr>\n      <tr>\n        <td>{t(\"stats.total\")}</td>\n        <td>{nFormatter(storageSizes.total, 1)}</td>\n      </tr>\n      <tr>\n        <th colSpan={2}>{t(\"stats.version\")}</th>\n      </tr>\n      <tr>\n        <td\n          colSpan={2}\n          style={{ textAlign: \"center\", cursor: \"pointer\" }}\n          onClick={async () => {\n            try {\n              await copyTextToSystemClipboard(getVersion());\n              props.setToastMessage(t(\"toast.copyToClipboard\"));\n            } catch {}\n          }}\n          title={t(\"stats.versionCopy\")}\n        >\n          {timestamp}\n          <br />\n          {hash}\n        </td>\n      </tr>\n    </>\n  );\n};\n\nexport default CustomStats;\n","import { createIcon } from \"../../components/icons\";\n\nexport const excalidrawPlusIcon = createIcon(\n  <>\n    <path\n      d=\"M72.652 63.598c-1.368.91-1.191 2.833-.953 4.572.702 5.104.47 5.323 1.073 7.016.649 1.826.433 2.553-.08 3.292-.406.588-1.207 1.371-1.906 1.516-.98.204-2.967.01-3.922-.246-.643-.174-1.292-.94-1.598-1.53-.389-.751-1.256-1.951-.694-3.593.56-1.64 1.325-5.374 1.363-6.108.098-1.904.02-3.934-1.085-5.014-1.104-1.082-3.941-1.055-5.739-1.038-1.723.017-3.583 1.207-5.045 1.141-1.343-.061-2.939-.686-3.728-1.536-.79-.852-1.082-2.469-1.007-3.57.074-1.1.726-2.398 1.454-3.033.727-.635 1.91-.867 2.909-.777 1.472.13 4.1 1.342 5.928 1.564 1.67.203 4.016.501 5.04-.227 1.021-.73 1.048-2.717 1.094-4.145.07-2.063-1.021-6.528-.683-8.23.22-1.098 1.709-1.696 2.717-1.979 1.007-.282 2.521-.125 3.328.285.788.398 1.499 1.29 1.516 2.173.031 1.68-1.209 5.66-1.322 7.905-.058 1.133-.61 3.124.482 3.764 1.264.74 2.95 1.778 7.1.673 1.765-.47 3.157-.689 4.62-.622 1.342.06 2.939.685 3.728 1.536.787.85 1.08 2.468 1.006 3.568-.074 1.101-.726 2.4-1.454 3.035-.727.634-1.908.866-2.908.777-1.473-.13-3.164-.68-4.88-1.248-2.526-.835-5.176-.708-6.354.079z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M51.396 25.807c0 .237-.285.474-.617.474-.284 0-1.09 1.328-1.708 2.941-1.897 4.934-20.873 42.46-20.92 41.273 0-.616-.285-1.043-.76-1.043-.664 0-.759.38-.474 2.23.284 2.134.095 2.609-6.642 15.702-3.795 7.448-7.875 15.228-9.06 17.316-1.234 2.182-2.183 4.554-2.278 5.55-.142 1.708.047 1.945 4.175 5.503 2.372 2.088 5.408 4.697 6.736 5.883 5.978 5.456 8.777 7.638 9.536 7.496 1.138-.19 18.739-18.644 18.786-19.688 0-.475-.854-7.685-1.898-16.035-1.802-14.232-3.51-30.884-3.32-32.497.142-.996-.57-6.024-1.092-8.207-.426-1.708-.237-2.42 3.179-10.2 1.992-4.601 4.602-10.247 5.74-12.524 1.091-2.277 2.04-4.27 2.04-4.412 0-.142-.332-.237-.711-.237-.38 0-.712.19-.712.475zM40.485 61.245c.522 3.32 1.565 11.29 2.324 17.695 1.47 11.765 3.179 24.811 3.653 28.132.285 1.66.095 1.992-2.989 5.408-5.36 6.025-11.053 11.955-12.998 13.473l-1.803 1.423-9.25-8.634c-8.54-7.875-9.252-8.681-8.73-9.63.285-.522 2.704-4.934 5.361-9.773 2.657-4.839 6.167-11.29 7.78-14.327 1.66-3.084 3.179-5.74 3.463-5.882.332-.19.427 4.601.332 14.8-.19 15.23-.142 15.277 1.376 14.945.19 0 .332-7.686.332-17.031V74.86l4.981-9.963c2.752-5.503 5.03-9.915 5.124-9.867.095.047.57 2.846 1.044 6.215zM20.228 3.842c-3.51 2.799-8.919 7.543-13.189 11.623l-3.368 3.178.617 4.175c.332 2.277.949 6.736 1.328 9.867.427 3.132.854 6.073.996 6.5.19.57 0 .854-.521.854-.902 0-.95-.237 1.518 7.59.901 2.989 1.755 5.74 1.85 6.025.095.332.474.474.901.332.427-.19.664-.57.522-.901-.142-.38.095-.76.474-.902.522-.19.475-.569-.332-1.945-1.28-2.134-4.554-20.352-4.744-26.234-.142-4.175-.142-4.222 1.613-6.594 1.708-2.325 5.646-5.835 11.718-10.295 1.708-1.28 3.416-2.704 3.89-3.178.712-.854 1.044-.617 7.021 5.74 3.463 3.653 7.306 7.4 8.54 8.35l2.277 1.707-1.756 3.7c-.948 1.993-4.791 9.678-8.586 16.984-7.923 15.37-6.31 13.9-15.513 14.043l-5.978.047-1.992 2.277c-2.088 2.42-2.372 3.32-1.376 4.839.38.522.664 1.376.664 1.898 0 .854.332.996 2.23 1.09 1.186.048 2.277.19 2.42.333.142.142.331 3.083.474 6.547l.19 6.262-3.179 6.831c-5.266 11.386-7.353 16.604-7.353 18.312 0 .901.19 1.66.38 1.66.474 0 .474-.047 19.782-40.324 8.966-18.691 17.458-36.292 18.881-39.185 1.423-2.894 2.704-5.55 2.799-5.93.095-.427-3.178-3.7-8.397-8.303-4.696-4.174-8.824-7.97-9.203-8.396-1.091-1.329-2.704-.902-5.598 1.423zm-2.372 62.147c-.38.996-1.376 3.083-2.183 4.649-1.328 2.656-1.47 2.751-1.802 1.66-.19-.664-.332-2.61-.38-4.364-.047-3.464-.142-3.416 3.843-3.653l1.28-.048-.758 1.756zm3.985-7.59c-2.183 4.221-2.277 4.269-8.255 4.553-5.266.285-5.36.238-5.36-.759 0-.569-.19-1.328-.428-1.708-.284-.426-.094-1.186.57-2.23l1.043-1.612h4.744c2.61-.048 5.598-.237 6.642-.427 1.044-.19 1.945-.285 2.04-.237.095.047-.38 1.138-.996 2.42zm-.19-43.266c-.854.616-1.091 1.233-1.091 2.799 0 1.85.142 2.134 1.423 2.656 1.28.522 1.613.475 3.084-.522 1.945-1.328 1.992-1.66.569-3.795-1.234-1.85-2.467-2.182-3.985-1.138z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M50.141 24.917c.352-.615 1.06-1.085 1.967-1.085.804 0 1.477.34 1.734.597.342.342.477.74.477 1.14 0 .089-.006.305-.119.612-.168.461-1.056 2.337-2.08 4.471-1.131 2.264-3.724 7.875-5.708 12.457-1.671 3.806-2.558 5.881-2.97 7.216-.301.975-.279 1.406-.123 2.032.558 2.33 1.27 7.704 1.122 8.73-.187 1.596 1.537 18.06 3.32 32.136 1.056 8.446 1.91 15.74 1.91 16.22l-.002.07c-.009.184-.087.607-.447 1.14-.506.747-1.932 2.414-3.805 4.476-4.242 4.672-10.806 11.46-13.673 14.059-.682.617-1.199 1.023-1.472 1.182a1.872 1.872 0 01-.612.236c-.41.077-1.225-.015-2.35-.737-1.495-.959-4.19-3.217-8.46-7.114-1.327-1.184-4.36-3.79-6.718-5.865-1.712-1.476-2.767-2.405-3.411-3.096-.677-.727-.994-1.291-1.16-1.839-.165-.544-.18-1.09-.117-1.847.104-1.1 1.103-3.737 2.466-6.15 1.182-2.08 5.247-9.833 9.031-17.26 3.34-6.491 5.06-9.853 5.906-11.859.677-1.603.696-2.113.587-2.93-.18-1.168-.195-1.884-.111-2.308.1-.511.321-.851.58-1.1.346-.331.813-.55 1.488-.55.199 0 .391.024.574.07 4.068-7.268 18.093-35.143 19.705-39.334.585-1.53 1.353-2.823 1.794-3.288.228-.24.462-.39.677-.482zM38.72 59.573a448.835 448.835 0 00-3.06 5.995l-4.823 9.646v16.63c0 8.501-.124 15.643-.287 16.987-.142 1.166-1.002 1.462-1.384 1.526l.16-.017c-.671.147-1.214.135-1.647-.047-.495-.209-1.058-.629-1.33-1.813-.332-1.439-.336-5.202-.22-14.563.04-4.272.047-7.59.016-9.984-.33.582-.666 1.188-.986 1.783-1.615 3.04-5.13 9.5-7.79 14.345-2.383 4.34-4.576 8.338-5.207 9.493.131.186.356.489.61.77 1.165 1.287 3.451 3.428 7.667 7.316l8.316 7.76.798-.63c1.917-1.495 7.517-7.35 12.808-13.295.898-.995 1.544-1.72 2-2.29.37-.464.594-.76.675-1.06.067-.247.004-.478-.051-.8l-.007-.041c-.475-3.324-2.184-16.382-3.657-28.168-.757-6.384-1.797-14.328-2.317-17.639l-.004-.023c-.089-.635-.185-1.272-.28-1.881zM19.289 2.67c1.673-1.343 3-2.096 4.04-2.364 1.537-.394 2.687.004 3.621 1.119.396.44 4.46 4.165 9.071 8.264 4.274 3.769 7.265 6.676 8.244 7.909.69.868.68 1.598.625 1.844-.002.013-.006.026-.009.038-.1.398-1.416 3.195-2.908 6.228-1.423 2.893-9.912 20.488-18.875 39.173C7.581 97.252 4.465 103.75 3.6 105.058c-.497.751-.885.854-1.111.924a1.729 1.729 0 01-.526.076c-.42 0-.964-.148-1.368-.767-.223-.342-.511-1.288-.511-2.394 0-.606.19-1.592.67-3.03.955-2.866 3.1-7.864 6.821-15.911l3.03-6.513-.178-5.89a153.908 153.908 0 00-.33-5.346c-.352-.041-.773-.081-1.14-.096-.98-.049-1.616-.131-2.03-.261-.645-.204-1.016-.535-1.267-.928-.221-.348-.358-.79-.358-1.4 0-.282-.173-.735-.377-1.016l-.04-.059c-.621-.945-.859-1.757-.79-2.608.085-1.023.72-2.222 2.283-4.034l1.607-1.836c-.218-.687-.996-3.199-1.807-5.89-1.558-4.942-2.122-6.841-2.152-7.56-.034-.83.282-1.245.57-1.51a1.53 1.53 0 01.406-.265c-.217-1.235-.55-3.498-.875-5.878a488.89 488.89 0 00-1.323-9.829l-.617-4.175a1.5 1.5 0 01.455-1.31l3.361-3.172c4.301-4.11 9.749-8.888 13.287-11.709zm-3.879 71.31c-.31.283-.612.394-.858.441a1.547 1.547 0 01-1.04-.132l.103 3.418v.018l1.795-3.746zm12.426 1.473a23.55 23.55 0 01-.225.553 43.912 43.912 0 01-.763 1.686c.328-.11.65-.094.966.015l.022.008v-2.262zm1.524-3.996l-.032.037a1.575 1.575 0 01-.862.5c.042.411.057.798 0 1.25l.894-1.787zM16.286 65.87c-.566.056-1.034.117-1.267.149-.014.118-.03.275-.035.408-.012.4-.001.889.007 1.466.006.237.014.477.024.716.49-.997.97-2.02 1.271-2.739zm4.486-3.076a4.31 4.31 0 01-.88.654c.136.22.21.469.22.721l.281-.585.38-.79zm-.299-5.017c-1.381.168-3.98.324-6.29.365h-3.956l-.594.92c-.19.298-.36.7-.429.874.215.444.399 1.073.478 1.666h.014c.771.012 1.964-.048 3.819-.148 2.63-.125 3.979-.11 4.898-.616.326-.18.561-.453.817-.83.374-.551.75-1.276 1.243-2.23zm4.52-3.77a6.345 6.345 0 01-1.098.892c.156.141.3.333.383.595l.714-1.487zm15.241-3.122c-.47.934-.941 1.866-1.41 2.789.6-.264 1.192-.034 1.288.014.079.04.308.15.517.425a27.335 27.335 0 00-.224-1.044c-.185-.74-.289-1.336-.17-2.184zM24.148 5.38c-.758.673-2.198 1.856-3.649 2.944-5.896 4.33-9.738 7.717-11.4 9.978-.594.803-.97 1.279-1.177 1.801-.316.802-.217 1.685-.143 3.852.132 4.065 1.762 14.092 3.157 20.466.555 2.535 1.023 4.46 1.383 5.059.528.9.771 1.5.842 1.889.088.484.016.86-.118 1.167a1.86 1.86 0 01-.27.446l2.687-.021c1.825-.028 3.22.008 4.349-.038.897-.038 1.587-.111 2.187-.396.71-.336 1.26-.968 1.948-2.018 1.313-2.003 2.904-5.314 5.721-10.782 3.785-7.286 7.618-14.95 8.563-16.935l1.23-2.593-1.311-.984c-1.258-.967-5.182-4.782-8.717-8.51-2.604-2.769-4.52-4.608-5.282-5.325zm-11.86 47.181l-.001-.003-.026-.064.027.067zm-1.503-1.764l.059-.024a1.07 1.07 0 00-.059.024zm42.106-24.884l-.002.022.001-.009.001-.013zm.003-.035l.002-.071-.002.071zM20.773 13.917c-1.241.896-1.713 1.74-1.713 4.015 0 1.663.252 2.444.727 3.002.334.391.822.714 1.63 1.043.743.303 1.275.437 1.771.44.735.005 1.457-.254 2.72-1.109 1.495-1.02 2.072-1.825 2.19-2.615.111-.744-.188-1.715-1.214-3.254-.872-1.307-1.805-2.006-2.727-2.266-1.036-.292-2.15-.105-3.356.723l-.028.02zm4.263 4.285c-.128-.242-.375-.69-.648-1.099-.4-.598-.691-1.03-1.123-1.056-.24-.015-.473.123-.744.308-.461.337-.461.721-.461 1.577 0 .417.04.883.058 1.064.1.052.282.142.431.203.283.115.47.216.66.218.084 0 .152-.057.255-.113.215-.115.46-.275.757-.476.311-.213.632-.472.815-.626zM19.293 2.669l-.005.003.005-.003z\"\n      fill=\"currentColor\"\n    />\n  </>,\n  { width: 89, height: 131, style: { transform: \"translateX(4px)\" } },\n);\n","import React from \"react\";\nimport { Card } from \"../../components/Card\";\nimport { ToolButton } from \"../../components/ToolButton\";\nimport { serializeAsJSON } from \"../../data/json\";\nimport { loadFirebaseStorage, saveFilesToFirebase } from \"../data/firebase\";\nimport { FileId, NonDeletedExcalidrawElement } from \"../../element/types\";\nimport { AppState, BinaryFileData, BinaryFiles } from \"../../types\";\nimport { nanoid } from \"nanoid\";\nimport { t } from \"../../i18n\";\nimport { excalidrawPlusIcon } from \"./icons\";\nimport { encryptData, generateEncryptionKey } from \"../../data/encryption\";\nimport { isInitializedImageElement } from \"../../element/typeChecks\";\nimport { FILE_UPLOAD_MAX_BYTES } from \"../app_constants\";\nimport { encodeFilesForUpload } from \"../data/FileManager\";\nimport { MIME_TYPES } from \"../../constants\";\n\nconst exportToExcalidrawPlus = async (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  files: BinaryFiles,\n) => {\n  const firebase = await loadFirebaseStorage();\n\n  const id = `${nanoid(12)}`;\n\n  const encryptionKey = (await generateEncryptionKey())!;\n  const encryptedData = await encryptData(\n    encryptionKey,\n    serializeAsJSON(elements, appState, files, \"database\"),\n  );\n\n  const blob = new Blob(\n    [encryptedData.iv, new Uint8Array(encryptedData.encryptedBuffer)],\n    {\n      type: MIME_TYPES.binary,\n    },\n  );\n\n  await firebase\n    .storage()\n    .ref(`/migrations/scenes/${id}`)\n    .put(blob, {\n      customMetadata: {\n        data: JSON.stringify({ version: 2, name: appState.name }),\n        created: Date.now().toString(),\n      },\n    });\n\n  const filesMap = new Map<FileId, BinaryFileData>();\n  for (const element of elements) {\n    if (isInitializedImageElement(element) && files[element.fileId]) {\n      filesMap.set(element.fileId, files[element.fileId]);\n    }\n  }\n\n  if (filesMap.size) {\n    const filesToUpload = await encodeFilesForUpload({\n      files: filesMap,\n      encryptionKey,\n      maxBytes: FILE_UPLOAD_MAX_BYTES,\n    });\n\n    await saveFilesToFirebase({\n      prefix: `/migrations/files/scenes/${id}`,\n      files: filesToUpload,\n    });\n  }\n\n  window.open(\n    `https://plus.excalidraw.com/import?excalidraw=${id},${encryptionKey}`,\n  );\n};\n\nexport const ExportToExcalidrawPlus: React.FC<{\n  elements: readonly NonDeletedExcalidrawElement[];\n  appState: AppState;\n  files: BinaryFiles;\n  onError: (error: Error) => void;\n}> = ({ elements, appState, files, onError }) => {\n  return (\n    <Card color=\"primary\">\n      <div className=\"Card-icon\">{excalidrawPlusIcon}</div>\n      <h2>Excalidraw+</h2>\n      <div className=\"Card-details\">\n        {t(\"exportDialog.excalidrawplus_description\")}\n      </div>\n      <ToolButton\n        className=\"Card-button\"\n        type=\"button\"\n        title={t(\"exportDialog.excalidrawplus_button\")}\n        aria-label={t(\"exportDialog.excalidrawplus_button\")}\n        showAriaLabel={true}\n        onClick={async () => {\n          try {\n            await exportToExcalidrawPlus(elements, appState, files);\n          } catch (error: any) {\n            console.error(error);\n            if (error.name !== \"AbortError\") {\n              onError(new Error(t(\"exportDialog.excalidrawplus_exportError\")));\n            }\n          }\n        }}\n      />\n    </Card>\n  );\n};\n","import LanguageDetector from \"i18next-browser-languagedetector\";\nimport { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { trackEvent } from \"../analytics\";\nimport { getDefaultAppState } from \"../appState\";\nimport { ErrorDialog } from \"../components/ErrorDialog\";\nimport { TopErrorBoundary } from \"../components/TopErrorBoundary\";\nimport {\n  APP_NAME,\n  EVENT,\n  TITLE_TIMEOUT,\n  URL_HASH_KEYS,\n  VERSION_TIMEOUT,\n} from \"../constants\";\nimport { loadFromBlob } from \"../data/blob\";\nimport { ImportedDataState } from \"../data/types\";\nimport {\n  ExcalidrawElement,\n  FileId,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { useCallbackRefState } from \"../hooks/useCallbackRefState\";\nimport { Language, t } from \"../i18n\";\nimport Excalidraw, {\n  defaultLang,\n  languages,\n} from \"../packages/excalidraw/index\";\nimport {\n  AppState,\n  LibraryItems,\n  ExcalidrawImperativeAPI,\n  BinaryFileData,\n  BinaryFiles,\n} from \"../types\";\nimport {\n  debounce,\n  getVersion,\n  isTestEnv,\n  preventUnload,\n  ResolvablePromise,\n  resolvablePromise,\n} from \"../utils\";\nimport {\n  FIREBASE_STORAGE_PREFIXES,\n  SAVE_TO_LOCAL_STORAGE_TIMEOUT,\n  STORAGE_KEYS,\n  SYNC_BROWSER_TABS_TIMEOUT,\n} from \"./app_constants\";\nimport CollabWrapper, {\n  CollabAPI,\n  CollabContext,\n  CollabContextConsumer,\n} from \"./collab/CollabWrapper\";\nimport { LanguageList } from \"./components/LanguageList\";\nimport { exportToBackend, getCollaborationLinkData, loadScene } from \"./data\";\nimport {\n  getLibraryItemsFromStorage,\n  importFromLocalStorage,\n  importUsernameFromLocalStorage,\n  saveToLocalStorage,\n} from \"./data/localStorage\";\nimport CustomStats from \"./CustomStats\";\nimport { restoreAppState, RestoredDataState } from \"../data/restore\";\nimport { Tooltip } from \"../components/Tooltip\";\nimport { shield } from \"../components/icons\";\n\nimport \"./index.scss\";\nimport { ExportToExcalidrawPlus } from \"./components/ExportToExcalidrawPlus\";\n\nimport { getMany, set, del, keys, createStore } from \"idb-keyval\";\nimport { FileManager, updateStaleImageStatuses } from \"./data/FileManager\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { isInitializedImageElement } from \"../element/typeChecks\";\nimport { loadFilesFromFirebase } from \"./data/firebase\";\nimport {\n  isBrowserStorageStateNewer,\n  updateBrowserStateVersion,\n} from \"./data/tabSync\";\n\nconst filesStore = createStore(\"files-db\", \"files-store\");\n\nconst clearObsoleteFilesFromIndexedDB = async (opts: {\n  currentFileIds: FileId[];\n}) => {\n  const allIds = await keys(filesStore);\n  for (const id of allIds) {\n    if (!opts.currentFileIds.includes(id as FileId)) {\n      del(id, filesStore);\n    }\n  }\n};\n\nconst localFileStorage = new FileManager({\n  getFiles(ids) {\n    return getMany(ids, filesStore).then(\n      (filesData: (BinaryFileData | undefined)[]) => {\n        const loadedFiles: BinaryFileData[] = [];\n        const erroredFiles = new Map<FileId, true>();\n        filesData.forEach((data, index) => {\n          const id = ids[index];\n          if (data) {\n            loadedFiles.push(data);\n          } else {\n            erroredFiles.set(id, true);\n          }\n        });\n\n        return { loadedFiles, erroredFiles };\n      },\n    );\n  },\n  async saveFiles({ addedFiles }) {\n    const savedFiles = new Map<FileId, true>();\n    const erroredFiles = new Map<FileId, true>();\n\n    // before we use `storage` event synchronization, let's update the flag\n    // optimistically. Hopefully nothing fails, and an IDB read executed\n    // before an IDB write finishes will read the latest value.\n    updateBrowserStateVersion(STORAGE_KEYS.VERSION_FILES);\n\n    await Promise.all(\n      [...addedFiles].map(async ([id, fileData]) => {\n        try {\n          await set(id, fileData, filesStore);\n          savedFiles.set(id, true);\n        } catch (error: any) {\n          console.error(error);\n          erroredFiles.set(id, true);\n        }\n      }),\n    );\n\n    return { savedFiles, erroredFiles };\n  },\n});\n\nconst languageDetector = new LanguageDetector();\nlanguageDetector.init({\n  languageUtils: {\n    formatLanguageCode: (langCode: Language[\"code\"]) => langCode,\n    isWhitelisted: () => true,\n  },\n  checkWhitelist: false,\n});\n\nconst saveDebounced = debounce(\n  async (\n    elements: readonly ExcalidrawElement[],\n    appState: AppState,\n    files: BinaryFiles,\n    onFilesSaved: () => void,\n  ) => {\n    saveToLocalStorage(elements, appState);\n\n    await localFileStorage.saveFiles({\n      elements,\n      files,\n    });\n    onFilesSaved();\n  },\n  SAVE_TO_LOCAL_STORAGE_TIMEOUT,\n);\n\nconst onBlur = () => {\n  saveDebounced.flush();\n};\n\nconst initializeScene = async (opts: {\n  collabAPI: CollabAPI;\n}): Promise<\n  { scene: ImportedDataState | null } & (\n    | { isExternalScene: true; id: string; key: string }\n    | { isExternalScene: false; id?: null; key?: null }\n  )\n> => {\n  const searchParams = new URLSearchParams(window.location.search);\n  const id = searchParams.get(\"id\");\n  const jsonBackendMatch = window.location.hash.match(\n    /^#json=([a-zA-Z0-9_-]+),([a-zA-Z0-9_-]+)$/,\n  );\n  const externalUrlMatch = window.location.hash.match(/^#url=(.*)$/);\n\n  const localDataState = importFromLocalStorage();\n\n  let scene: RestoredDataState & {\n    scrollToContent?: boolean;\n  } = await loadScene(null, null, localDataState);\n\n  let roomLinkData = getCollaborationLinkData(window.location.href);\n  const isExternalScene = !!(id || jsonBackendMatch || roomLinkData);\n  if (isExternalScene) {\n    if (\n      // don't prompt if scene is empty\n      !scene.elements.length ||\n      // don't prompt for collab scenes because we don't override local storage\n      roomLinkData ||\n      // otherwise, prompt whether user wants to override current scene\n      window.confirm(t(\"alerts.loadSceneOverridePrompt\"))\n    ) {\n      if (jsonBackendMatch) {\n        scene = await loadScene(\n          jsonBackendMatch[1],\n          jsonBackendMatch[2],\n          localDataState,\n        );\n      }\n      scene.scrollToContent = true;\n      if (!roomLinkData) {\n        window.history.replaceState({}, APP_NAME, window.location.origin);\n      }\n    } else {\n      // https://github.com/excalidraw/excalidraw/issues/1919\n      if (document.hidden) {\n        return new Promise((resolve, reject) => {\n          window.addEventListener(\n            \"focus\",\n            () => initializeScene(opts).then(resolve).catch(reject),\n            {\n              once: true,\n            },\n          );\n        });\n      }\n\n      roomLinkData = null;\n      window.history.replaceState({}, APP_NAME, window.location.origin);\n    }\n  } else if (externalUrlMatch) {\n    window.history.replaceState({}, APP_NAME, window.location.origin);\n\n    const url = externalUrlMatch[1];\n    try {\n      const request = await fetch(window.decodeURIComponent(url));\n      const data = await loadFromBlob(await request.blob(), null, null);\n      if (\n        !scene.elements.length ||\n        window.confirm(t(\"alerts.loadSceneOverridePrompt\"))\n      ) {\n        return { scene: data, isExternalScene };\n      }\n    } catch (error: any) {\n      return {\n        scene: {\n          appState: {\n            errorMessage: t(\"alerts.invalidSceneUrl\"),\n          },\n        },\n        isExternalScene,\n      };\n    }\n  }\n\n  if (roomLinkData) {\n    return {\n      scene: await opts.collabAPI.initializeSocketClient(roomLinkData),\n      isExternalScene: true,\n      id: roomLinkData.roomId,\n      key: roomLinkData.roomKey,\n    };\n  } else if (scene) {\n    return isExternalScene && jsonBackendMatch\n      ? {\n          scene,\n          isExternalScene,\n          id: jsonBackendMatch[1],\n          key: jsonBackendMatch[2],\n        }\n      : { scene, isExternalScene: false };\n  }\n  return { scene: null, isExternalScene: false };\n};\n\nconst PlusLinkJSX = (\n  <p style={{ direction: \"ltr\", unicodeBidi: \"embed\" }}>\n    Introducing Excalidraw+\n    <br />\n    <a\n      href=\"https://plus.excalidraw.com/plus?utm_source=excalidraw&utm_medium=banner&utm_campaign=launch\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      Try out now!\n    </a>\n  </p>\n);\n\nconst ExcalidrawWrapper = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  let currentLangCode = languageDetector.detect() || defaultLang.code;\n  if (Array.isArray(currentLangCode)) {\n    currentLangCode = currentLangCode[0];\n  }\n  const [langCode, setLangCode] = useState(currentLangCode);\n  // initial state\n  // ---------------------------------------------------------------------------\n\n  const initialStatePromiseRef = useRef<{\n    promise: ResolvablePromise<ImportedDataState | null>;\n  }>({ promise: null! });\n  if (!initialStatePromiseRef.current.promise) {\n    initialStatePromiseRef.current.promise =\n      resolvablePromise<ImportedDataState | null>();\n  }\n\n  useEffect(() => {\n    // Delayed so that the app has a time to load the latest SW\n    setTimeout(() => {\n      trackEvent(\"load\", \"version\", getVersion());\n    }, VERSION_TIMEOUT);\n  }, []);\n\n  const [excalidrawAPI, excalidrawRefCallback] =\n    useCallbackRefState<ExcalidrawImperativeAPI>();\n\n  const collabAPI = useContext(CollabContext)?.api;\n\n  useEffect(() => {\n    if (!collabAPI || !excalidrawAPI) {\n      return;\n    }\n\n    const loadImages = (\n      data: ResolutionType<typeof initializeScene>,\n      isInitialLoad = false,\n    ) => {\n      if (!data.scene) {\n        return;\n      }\n      if (collabAPI.isCollaborating()) {\n        if (data.scene.elements) {\n          collabAPI\n            .fetchImageFilesFromFirebase({\n              elements: data.scene.elements,\n            })\n            .then(({ loadedFiles, erroredFiles }) => {\n              excalidrawAPI.addFiles(loadedFiles);\n              updateStaleImageStatuses({\n                excalidrawAPI,\n                erroredFiles,\n                elements: excalidrawAPI.getSceneElementsIncludingDeleted(),\n              });\n            });\n        }\n      } else {\n        const fileIds =\n          data.scene.elements?.reduce((acc, element) => {\n            if (isInitializedImageElement(element)) {\n              return acc.concat(element.fileId);\n            }\n            return acc;\n          }, [] as FileId[]) || [];\n\n        if (data.isExternalScene) {\n          loadFilesFromFirebase(\n            `${FIREBASE_STORAGE_PREFIXES.shareLinkFiles}/${data.id}`,\n            data.key,\n            fileIds,\n          ).then(({ loadedFiles, erroredFiles }) => {\n            excalidrawAPI.addFiles(loadedFiles);\n            updateStaleImageStatuses({\n              excalidrawAPI,\n              erroredFiles,\n              elements: excalidrawAPI.getSceneElementsIncludingDeleted(),\n            });\n          });\n        } else if (isInitialLoad) {\n          if (fileIds.length) {\n            localFileStorage\n              .getFiles(fileIds)\n              .then(({ loadedFiles, erroredFiles }) => {\n                if (loadedFiles.length) {\n                  excalidrawAPI.addFiles(loadedFiles);\n                }\n                updateStaleImageStatuses({\n                  excalidrawAPI,\n                  erroredFiles,\n                  elements: excalidrawAPI.getSceneElementsIncludingDeleted(),\n                });\n              });\n          }\n          // on fresh load, clear unused files from IDB (from previous\n          // session)\n          clearObsoleteFilesFromIndexedDB({ currentFileIds: fileIds });\n        }\n      }\n\n      data.scene.libraryItems = getLibraryItemsFromStorage();\n    };\n\n    initializeScene({ collabAPI }).then((data) => {\n      loadImages(data, /* isInitialLoad */ true);\n      initialStatePromiseRef.current.promise.resolve(data.scene);\n    });\n\n    const onHashChange = (event: HashChangeEvent) => {\n      event.preventDefault();\n      const hash = new URLSearchParams(window.location.hash.slice(1));\n      const libraryUrl = hash.get(URL_HASH_KEYS.addLibrary);\n      if (libraryUrl) {\n        // If hash changed and it contains library url, import it and replace\n        // the url to its previous state (important in case of collaboration\n        // and similar).\n        // Using history API won't trigger another hashchange.\n        window.history.replaceState({}, \"\", event.oldURL);\n        excalidrawAPI.importLibrary(libraryUrl, hash.get(\"token\"));\n      } else {\n        initializeScene({ collabAPI }).then((data) => {\n          loadImages(data);\n          if (data.scene) {\n            excalidrawAPI.updateScene({\n              ...data.scene,\n              appState: restoreAppState(data.scene.appState, null),\n            });\n          }\n        });\n      }\n    };\n\n    const titleTimeout = setTimeout(\n      () => (document.title = APP_NAME),\n      TITLE_TIMEOUT,\n    );\n\n    const syncData = debounce(() => {\n      if (isTestEnv()) {\n        return;\n      }\n      if (!document.hidden && !collabAPI.isCollaborating()) {\n        // don't sync if local state is newer or identical to browser state\n        if (isBrowserStorageStateNewer(STORAGE_KEYS.VERSION_DATA_STATE)) {\n          const localDataState = importFromLocalStorage();\n          const username = importUsernameFromLocalStorage();\n          let langCode = languageDetector.detect() || defaultLang.code;\n          if (Array.isArray(langCode)) {\n            langCode = langCode[0];\n          }\n          setLangCode(langCode);\n          excalidrawAPI.updateScene({\n            ...localDataState,\n            libraryItems: getLibraryItemsFromStorage(),\n          });\n          collabAPI.setUsername(username || \"\");\n        }\n\n        if (isBrowserStorageStateNewer(STORAGE_KEYS.VERSION_FILES)) {\n          const elements = excalidrawAPI.getSceneElementsIncludingDeleted();\n          const currFiles = excalidrawAPI.getFiles();\n          const fileIds =\n            elements?.reduce((acc, element) => {\n              if (\n                isInitializedImageElement(element) &&\n                // only load and update images that aren't already loaded\n                !currFiles[element.fileId]\n              ) {\n                return acc.concat(element.fileId);\n              }\n              return acc;\n            }, [] as FileId[]) || [];\n          if (fileIds.length) {\n            localFileStorage\n              .getFiles(fileIds)\n              .then(({ loadedFiles, erroredFiles }) => {\n                if (loadedFiles.length) {\n                  excalidrawAPI.addFiles(loadedFiles);\n                }\n                updateStaleImageStatuses({\n                  excalidrawAPI,\n                  erroredFiles,\n                  elements: excalidrawAPI.getSceneElementsIncludingDeleted(),\n                });\n              });\n          }\n        }\n      }\n    }, SYNC_BROWSER_TABS_TIMEOUT);\n\n    window.addEventListener(EVENT.HASHCHANGE, onHashChange, false);\n    window.addEventListener(EVENT.UNLOAD, onBlur, false);\n    window.addEventListener(EVENT.BLUR, onBlur, false);\n    document.addEventListener(EVENT.VISIBILITY_CHANGE, syncData, false);\n    window.addEventListener(EVENT.FOCUS, syncData, false);\n    return () => {\n      window.removeEventListener(EVENT.HASHCHANGE, onHashChange, false);\n      window.removeEventListener(EVENT.UNLOAD, onBlur, false);\n      window.removeEventListener(EVENT.BLUR, onBlur, false);\n      window.removeEventListener(EVENT.FOCUS, syncData, false);\n      document.removeEventListener(EVENT.VISIBILITY_CHANGE, syncData, false);\n      clearTimeout(titleTimeout);\n    };\n  }, [collabAPI, excalidrawAPI]);\n\n  useEffect(() => {\n    const unloadHandler = (event: BeforeUnloadEvent) => {\n      saveDebounced.flush();\n\n      if (\n        excalidrawAPI &&\n        localFileStorage.shouldPreventUnload(excalidrawAPI.getSceneElements())\n      ) {\n        preventUnload(event);\n      }\n    };\n    window.addEventListener(EVENT.BEFORE_UNLOAD, unloadHandler);\n    return () => {\n      window.removeEventListener(EVENT.BEFORE_UNLOAD, unloadHandler);\n    };\n  }, [excalidrawAPI]);\n\n  useEffect(() => {\n    languageDetector.cacheUserLanguage(langCode);\n  }, [langCode]);\n\n  const onChange = (\n    elements: readonly ExcalidrawElement[],\n    appState: AppState,\n    files: BinaryFiles,\n  ) => {\n    if (collabAPI?.isCollaborating()) {\n      collabAPI.broadcastElements(elements);\n    } else {\n      saveDebounced(elements, appState, files, () => {\n        if (excalidrawAPI) {\n          let didChange = false;\n\n          let pendingImageElement = appState.pendingImageElement;\n          const elements = excalidrawAPI\n            .getSceneElementsIncludingDeleted()\n            .map((element) => {\n              if (localFileStorage.shouldUpdateImageElementStatus(element)) {\n                didChange = true;\n                const newEl = newElementWith(element, { status: \"saved\" });\n                if (pendingImageElement === element) {\n                  pendingImageElement = newEl;\n                }\n                return newEl;\n              }\n              return element;\n            });\n\n          if (didChange) {\n            excalidrawAPI.updateScene({\n              elements,\n              appState: {\n                pendingImageElement,\n              },\n            });\n          }\n        }\n      });\n    }\n  };\n\n  const onExportToBackend = async (\n    exportedElements: readonly NonDeletedExcalidrawElement[],\n    appState: AppState,\n    files: BinaryFiles,\n    canvas: HTMLCanvasElement | null,\n  ) => {\n    if (exportedElements.length === 0) {\n      return window.alert(t(\"alerts.cannotExportEmptyCanvas\"));\n    }\n    if (canvas) {\n      try {\n        await exportToBackend(\n          exportedElements,\n          {\n            ...appState,\n            viewBackgroundColor: appState.exportBackground\n              ? appState.viewBackgroundColor\n              : getDefaultAppState().viewBackgroundColor,\n          },\n          files,\n        );\n      } catch (error: any) {\n        if (error.name !== \"AbortError\") {\n          const { width, height } = canvas;\n          console.error(error, { width, height });\n          setErrorMessage(error.message);\n        }\n      }\n    }\n  };\n\n  const renderTopRightUI = useCallback(\n    (isMobile: boolean, appState: AppState) => {\n      if (isMobile) {\n        return null;\n      }\n      return (\n        <div\n          style={{\n            width: \"24ch\",\n            fontSize: \"0.7em\",\n            textAlign: \"center\",\n          }}\n        >\n          {/* <GitHubCorner theme={appState.theme} dir={document.dir} /> */}\n          {/* FIXME remove after 2021-05-20 */}\n          {PlusLinkJSX}\n        </div>\n      );\n    },\n    [],\n  );\n\n  const renderFooter = useCallback(\n    (isMobile: boolean) => {\n      const renderEncryptedIcon = () => (\n        <a\n          className=\"encrypted-icon tooltip\"\n          href=\"https://blog.excalidraw.com/end-to-end-encryption/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          aria-label={t(\"encrypted.link\")}\n        >\n          <Tooltip label={t(\"encrypted.tooltip\")} long={true}>\n            {shield}\n          </Tooltip>\n        </a>\n      );\n\n      const renderLanguageList = () => (\n        <LanguageList\n          onChange={(langCode) => setLangCode(langCode)}\n          languages={languages}\n          currentLangCode={langCode}\n        />\n      );\n      if (isMobile) {\n        const isTinyDevice = window.innerWidth < 362;\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: isTinyDevice ? \"column\" : \"row\",\n            }}\n          >\n            <fieldset>\n              <legend>{t(\"labels.language\")}</legend>\n              {renderLanguageList()}\n            </fieldset>\n            {/* FIXME remove after 2021-05-20 */}\n            <div\n              style={{\n                width: \"24ch\",\n                fontSize: \"0.7em\",\n                textAlign: \"center\",\n                marginTop: isTinyDevice ? 16 : undefined,\n                marginLeft: \"auto\",\n                marginRight: isTinyDevice ? \"auto\" : undefined,\n                padding: \"4px 2px\",\n                border: \"1px dashed #aaa\",\n                borderRadius: 12,\n              }}\n            >\n              {PlusLinkJSX}\n            </div>\n          </div>\n        );\n      }\n      return (\n        <>\n          {renderEncryptedIcon()}\n          {renderLanguageList()}\n        </>\n      );\n    },\n    [langCode],\n  );\n\n  const renderCustomStats = () => {\n    return (\n      <CustomStats\n        setToastMessage={(message) => excalidrawAPI!.setToastMessage(message)}\n      />\n    );\n  };\n\n  const onLibraryChange = async (items: LibraryItems) => {\n    if (!items.length) {\n      localStorage.removeItem(STORAGE_KEYS.LOCAL_STORAGE_LIBRARY);\n      return;\n    }\n    const serializedItems = JSON.stringify(items);\n    localStorage.setItem(STORAGE_KEYS.LOCAL_STORAGE_LIBRARY, serializedItems);\n  };\n\n  const onRoomClose = useCallback(() => {\n    localFileStorage.reset();\n  }, []);\n\n  return (\n    <>\n      <Excalidraw\n        ref={excalidrawRefCallback}\n        onChange={onChange}\n        initialData={initialStatePromiseRef.current.promise}\n        onCollabButtonClick={collabAPI?.onCollabButtonClick}\n        isCollaborating={collabAPI?.isCollaborating()}\n        onPointerUpdate={collabAPI?.onPointerUpdate}\n        UIOptions={{\n          canvasActions: {\n            export: {\n              onExportToBackend,\n              renderCustomUI: (elements, appState, files) => {\n                return (\n                  <ExportToExcalidrawPlus\n                    elements={elements}\n                    appState={appState}\n                    files={files}\n                    onError={(error) => {\n                      excalidrawAPI?.updateScene({\n                        appState: {\n                          errorMessage: error.message,\n                        },\n                      });\n                    }}\n                  />\n                );\n              },\n            },\n          },\n        }}\n        renderTopRightUI={renderTopRightUI}\n        renderFooter={renderFooter}\n        langCode={langCode}\n        renderCustomStats={renderCustomStats}\n        detectScroll={false}\n        handleKeyboardGlobally={true}\n        onLibraryChange={onLibraryChange}\n        autoFocus={true}\n      />\n      {excalidrawAPI && (\n        <CollabWrapper\n          excalidrawAPI={excalidrawAPI}\n          onRoomClose={onRoomClose}\n        />\n      )}\n      {errorMessage && (\n        <ErrorDialog\n          message={errorMessage}\n          onClose={() => setErrorMessage(\"\")}\n        />\n      )}\n    </>\n  );\n};\n\nconst ExcalidrawApp = () => {\n  return (\n    <TopErrorBoundary>\n      <CollabContextConsumer>\n        <ExcalidrawWrapper />\n      </CollabContextConsumer>\n    </TopErrorBoundary>\n  );\n};\n\nexport default ExcalidrawApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport const register = (config?: Config) => {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const isWebexLP = window.location.pathname.startsWith(\"/webex\");\n      if (isWebexLP) {\n        unregister(() => {\n          window.location.reload();\n        });\n        return false;\n      }\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.info(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n};\n\nconst registerValidSW = (swUrl: string, config?: Config) => {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              console.info(\n                \"New content is available and will be used when all tabs for this page are closed.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              console.info(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n};\n\nconst checkValidServiceWorker = (swUrl: string, config?: Config) => {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch((error) => {\n      console.info(\n        \"No internet connection found. App is running in offline mode.\",\n        error.message,\n      );\n    });\n};\n\nexport const unregister = (callback?: () => void) => {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        return registration.unregister();\n      })\n      .then(() => {\n        callback?.();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n};\n","import { register as registerServiceWorker } from \"../serviceWorker\";\nimport { EVENT } from \"../constants\";\n\n// On Apple mobile devices add the proprietary app icon and splashscreen markup.\n// No one should have to do this manually, and eventually this annoyance will\n// go away once https://bugs.webkit.org/show_bug.cgi?id=183937 is fixed.\nif (\n  /\\b(iPad|iPhone|iPod|Safari)\\b/.test(navigator.userAgent) &&\n  !matchMedia(\"(display-mode: standalone)\").matches\n) {\n  import(/* webpackChunkName: \"pwacompat\" */ \"pwacompat\");\n}\n\nregisterServiceWorker({\n  onUpdate: (registration) => {\n    const waitingServiceWorker = registration.waiting;\n    if (waitingServiceWorker) {\n      waitingServiceWorker.addEventListener(\n        EVENT.STATE_CHANGE,\n        (event: Event) => {\n          const target = event.target as ServiceWorker;\n          const state = target.state as ServiceWorkerState;\n          if (state === \"activated\") {\n            window.location.reload();\n          }\n        },\n      );\n      waitingServiceWorker.postMessage({ type: \"SKIP_WAITING\" });\n    }\n  },\n});\n","import * as Sentry from \"@sentry/browser\";\nimport * as SentryIntegrations from \"@sentry/integrations\";\n\nconst SentryEnvHostnameMap: { [key: string]: string } = {\n  \"excalidraw.com\": \"production\",\n  \"vercel.app\": \"staging\",\n};\n\nconst REACT_APP_DISABLE_SENTRY =\n  process.env.REACT_APP_DISABLE_SENTRY === \"true\";\n\n// Disable Sentry locally or inside the Docker to avoid noise/respect privacy\nconst onlineEnv =\n  !REACT_APP_DISABLE_SENTRY &&\n  Object.keys(SentryEnvHostnameMap).find(\n    (item) => window.location.hostname.indexOf(item) >= 0,\n  );\n\nSentry.init({\n  dsn: onlineEnv\n    ? \"https://7bfc596a5bf945eda6b660d3015a5460@sentry.io/5179260\"\n    : undefined,\n  environment: onlineEnv ? SentryEnvHostnameMap[onlineEnv] : undefined,\n  release: process.env.REACT_APP_GIT_SHA,\n  ignoreErrors: [\n    \"undefined is not an object (evaluating 'window.__pad.performLoop')\", // Only happens on Safari, but spams our servers. Doesn't break anything\n  ],\n  integrations: [\n    new SentryIntegrations.CaptureConsole({\n      levels: [\"error\"],\n    }),\n  ],\n  beforeSend(event) {\n    if (event.request?.url) {\n      event.request.url = event.request.url.replace(/#.*$/, \"\");\n    }\n    return event;\n  },\n});\n","import ReactDOM from \"react-dom\";\nimport ExcalidrawApp from \"./excalidraw-app\";\n\nimport \"./excalidraw-app/pwa\";\nimport \"./excalidraw-app/sentry\";\nwindow.__EXCALIDRAW_SHA__ = process.env.REACT_APP_GIT_SHA;\n\nReactDOM.render(<ExcalidrawApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}